{"version":3,"sources":["src/menu-container.tsx","src/utils.ts"],"names":["React","$fsx","r","react_dom_1","styled_components_1","utils_1","menuPosition","rect","menuHeight","height","top","getWindowInnerHeight","MenuOverlay","default","div","MenuWrapper","props","error","exports","MenuContainer","onClick","children","className","filter","c","join","document","getDocument","window","getWindow","menuOverlay","useRef","menuWrapper","menuOverlayRect","setMenuOverlayRect","useState","menuWrapperRect","setMenuWrapperRect","calcMenuOverlay","current","clientRect","getBoundingClientRect","left","Math","round","width","calcMenuWrapper","useEffect","_a","onRef","call","onRect","onViewportChange","e","target","closest","allowRectChange","addEventListener","removeEventListener","style","menuLeft","menuTop","menuWidth","getContainerTop","numWidth","Number","innerWidth","max","createElement","ref","createPortal","data-role","body","equal","valueA","valueB","equalCompareProp","undefined","toJSON","JSON","stringify","isArray","val","Array","map","toKey","value","jsonObject","replaceUmlauts","str","replace","getValueOptions","options","multi","slice","option","some","sort","optionA","optionB","a","findIndex","b","defaultHeight","_b","visualViewport","innerHeight","keys","ARROW_UP","ARROW_DOWN","ENTER","TAB","ESC","BACKSPACE","SPACE"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport { MenuContainerProps, Rect } from './typings';\nimport { getDocument, getWindow, getWindowInnerHeight } from './utils';\n\ninterface MenuWrapperProps {\n    rect?: Rect;\n    menuHeight?: MenuContainerProps['menuHeight'];\n    error?: boolean;\n}\n\nfunction menuPosition({\n    rect,\n    menuHeight = 186\n}: MenuWrapperProps): 'top' | 'bottom' {\n    if (!rect) {\n        return 'bottom';\n    }\n\n    const { height } = rect;\n\n    if (height === 'auto' || menuHeight === 'auto') {\n        return 'bottom';\n    }\n\n    if (rect.top + height + menuHeight <= getWindowInnerHeight()) {\n        return 'bottom';\n    }\n\n    return 'top';\n}\n\nfunction getContainerTop(props: MenuWrapperProps): number {\n    const { rect } = props;\n\n    if (!rect) {\n        return 0;\n    }\n\n    const menuHeight = (props.menuHeight !== 'auto' && props.menuHeight) || 186;\n    const height = rect.height === 'auto' ? 32 : rect.height;\n\n    switch (menuPosition(props)) {\n        case 'top':\n            return rect.top - menuHeight + 1;\n        case 'bottom':\n            return rect.top + height - 1;\n    }\n}\n\nconst MenuOverlay = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    pointer-events: none;\n`;\n\nconst MenuWrapper = styled.div`\n    position: fixed;\n    z-index: 9999;\n    background: #fff;\n    box-sizing: border-box;\n    box-shadow: ${(props: MenuWrapperProps) =>\n        menuPosition(props) === 'bottom'\n            ? '0 2px 5px rgba(0, 0, 0, 0.1)'\n            : '0 -2px 5px rgba(0, 0, 0, 0.1)'};\n\n    .react-slct-menu-list {\n        box-sizing: border-box;\n        border-width: 1px;\n        border-style: solid;\n        border-color: ${(props: MenuWrapperProps) =>\n            props.error ? 'var(--react-slct-error-color)' : '#ccc'};\n        background-color: #fff;\n\n        &:focus {\n            outline: none;\n        }\n    }\n`;\n\nexport function MenuContainer(props: MenuContainerProps) {\n    const { error, onClick, children } = props;\n    const className = ['react-slct-menu', props.className]\n        .filter((c) => c)\n        .join(' ');\n    const document = getDocument();\n    const window = getWindow();\n    const menuOverlay = React.useRef<HTMLDivElement | null>(null);\n    const menuWrapper = React.useRef<HTMLDivElement | null>(null);\n    const [menuOverlayRect, setMenuOverlayRect] = React.useState<Rect>();\n    const [menuWrapperRect, setMenuWrapperRect] = React.useState<Rect>();\n\n    function calcMenuOverlay() {\n        if (menuOverlay.current) {\n            const clientRect = menuOverlay.current.getBoundingClientRect();\n\n            setMenuOverlayRect({\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            });\n        }\n    }\n\n    function calcMenuWrapper() {\n        if (menuWrapper.current) {\n            const clientRect = menuWrapper.current.getBoundingClientRect();\n\n            setMenuWrapperRect({\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            });\n        }\n    }\n\n    React.useEffect(calcMenuOverlay, [menuOverlay.current]);\n    React.useEffect(() => {\n        calcMenuWrapper();\n\n        if (menuWrapper.current) {\n            props.onRef?.(menuWrapper.current);\n        }\n    }, [menuWrapper.current]);\n\n    React.useEffect(() => {\n        props.onRect?.(menuOverlayRect, menuWrapperRect);\n    }, [menuOverlayRect, menuWrapperRect]);\n\n    React.useEffect(() => {\n        window?.addEventListener('scroll', onViewportChange, true);\n        window?.addEventListener('resize', onViewportChange, true);\n\n        function allowRectChange(e) {\n            if (e.target.closest && !e.target.closest('.react-slct-menu')) {\n                return false;\n            }\n\n            return true;\n        }\n\n        function onViewportChange(e: Event) {\n            if (allowRectChange(e)) {\n                calcMenuOverlay();\n                calcMenuWrapper();\n            }\n        }\n\n        return () => {\n            window?.removeEventListener('resize', onViewportChange, true);\n            window?.removeEventListener('scroll', onViewportChange, true);\n        };\n    }, []);\n\n    const style = (() => {\n        const { menuLeft, menuTop, menuWidth, menuHeight } = props;\n        let width =\n            menuWidth && menuWidth !== 'auto'\n                ? menuWidth\n                : menuOverlayRect?.width || 'auto';\n        const height =\n            menuHeight && menuHeight !== 'auto'\n                ? menuHeight\n                : menuWrapperRect?.height || 'auto';\n        const top =\n            menuTop ??\n            getContainerTop({\n                rect: menuOverlayRect,\n                menuHeight: height\n            });\n        let left = menuLeft ?? menuOverlayRect?.left ?? 0;\n\n        if (window) {\n            const numWidth = Number(width);\n\n            if (numWidth > window.innerWidth) {\n                width = window.innerWidth - 20;\n            }\n\n            if (left + numWidth > window.innerWidth) {\n                left = Math.max(10, window.innerWidth - numWidth - 20);\n            }\n        }\n\n        if (left && top) {\n            return { top, left, width, height };\n        }\n\n        return undefined;\n    })();\n\n    return (\n        <MenuOverlay ref={menuOverlay}>\n            {document && style\n                ? createPortal(\n                      <MenuWrapper\n                          data-role=\"menu\"\n                          className={className}\n                          error={error}\n                          ref={menuWrapper}\n                          onClick={onClick}\n                          rect={menuOverlayRect}\n                          style={style}\n                      >\n                          {children}\n                      </MenuWrapper>,\n                      document.body\n                  )\n                : null}\n        </MenuOverlay>\n    );\n}\n","import { Option } from '.';\n\nexport function toKey(\n    value: any,\n    equalCompareProp: string | null = 'id'\n): string | number {\n    if (typeof value === 'string') {\n        return value;\n    }\n\n    if (value && typeof value === 'object') {\n        const jsonObject = value.toJSON ? value.toJSON() : value;\n\n        if (equalCompareProp && jsonObject[equalCompareProp]) {\n            return jsonObject[equalCompareProp];\n        }\n\n        return JSON.stringify(jsonObject);\n    }\n\n    return JSON.stringify(value);\n}\n\nexport function equal(\n    valueA: any,\n    valueB: any,\n    equalCompareProp: string | null = 'id'\n) {\n    if (valueA === valueB) {\n        return true;\n    }\n\n    if (!valueA || !valueB) {\n        return false;\n    }\n\n    if (typeof valueA === 'object' && typeof valueB === 'object') {\n        if (\n            equalCompareProp &&\n            valueA[equalCompareProp] !== undefined &&\n            valueA[equalCompareProp] !== null &&\n            valueB[equalCompareProp] !== undefined &&\n            valueB[equalCompareProp] !== null &&\n            valueA[equalCompareProp] === valueB[equalCompareProp]\n        ) {\n            return true;\n        }\n\n        if (valueA.toJSON && valueB.toJSON) {\n            return (\n                JSON.stringify(valueA.toJSON()) ===\n                JSON.stringify(valueB.toJSON())\n            );\n        }\n\n        return JSON.stringify(valueA) === JSON.stringify(valueB);\n    }\n\n    return false;\n}\n\nexport function replaceUmlauts(str: string) {\n    return str\n        .replace('Ü', 'u')\n        .replace('Ö', 'o')\n        .replace('Ä', 'a')\n        .replace('ü', 'u')\n        .replace('ä', 'a')\n        .replace('ö', 'o');\n}\n\nexport function getValueOptions(\n    options: Option[],\n    value: any,\n    multi: boolean | undefined,\n    equalCompareProp?: string | null\n) {\n    return options\n        .slice()\n        .filter((option) => {\n            if (isArray(value) && multi) {\n                return value.some((val) =>\n                    equal(option.value, val, equalCompareProp)\n                );\n            } else {\n                return equal(option.value, value, equalCompareProp);\n            }\n        })\n        .sort((optionA, optionB) => {\n            if (isArray(value) && multi) {\n                const a = value.findIndex((val) =>\n                    equal(optionA.value, val, equalCompareProp)\n                );\n                const b = value.findIndex((val) =>\n                    equal(optionB.value, val, equalCompareProp)\n                );\n\n                return a < b ? -1 : a > b ? 1 : 0;\n            } else {\n                return 0;\n            }\n        });\n}\n\nexport function isArray<T = any>(val: any): val is Array<T> {\n    if (Array.isArray(val)) {\n        return true;\n    }\n\n    // this is just a workaround for potential observable arrays\n    if (val && val.map) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getDocument(): Document | undefined {\n    if (typeof document !== 'undefined') {\n        return document;\n    }\n\n    return undefined;\n}\n\nexport function getWindow(): Window | undefined {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n\n    return undefined;\n}\n\nexport function getWindowInnerHeight(defaultHeight = 700): number {\n    const window = getWindow();\n\n    if (window) {\n        return window.visualViewport?.height ?? window.innerHeight;\n    }\n\n    return defaultHeight;\n}\n\nexport const keys = {\n    ARROW_UP: 38,\n    ARROW_DOWN: 40,\n    ENTER: 13,\n    TAB: 9,\n    ESC: 27,\n    BACKSPACE: 8,\n    SPACE: 32\n};\n"]}