{"version":3,"sources":["src/value-component-multi.tsx","src/value-component-single.tsx","src/option.tsx"],"names":["TagContainer","ValueComponentMulti","option","labelComponent","onRemove","this","props","Label","label_1","SelectLabel","React","createElement","Object","assign","className","Remove","value","type","active","styled_components_1","default","div","exports","$fsx","r","ValueComponentSingle","memo","label","lodash_decorators_1","OptionComponent","PureComponent","[object Object]","OptionItem","selected","height","filter","v","Boolean","join","onClick","onSelect","tslib_1","__decorate","bind"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+QAAA,MAAAA,aAAAA,GAAAC,GACAC,OAAAA,EAAAC,eAAAA,EAAAC,SAAAA,GAAAC,KAAAC,MACAC,EAAAJ,GAAAK,EAAAC,mBASqBC,EAAAC,cAAAX,EA4BTY,OAAAC,OAAA,CAAAC,UAAA,eAAAZ,GAAAQ,EAAAC,cAAAI,EAAa,CACTC,MAAAd,EAAAc,uDACAC,KAAA,cACAC,QAAA,iBAURjB,EAAAD,aAEAmB,EAAAC,QAAAC;;;;;;;;;;;;;;;MA1CWC,EA8CnBrB,oBAAAA,yEC1DA,MAAAS,EAAAa,EAAAC,EAAA,SACAhB,EAAAe,EAAAC,EAAA,GAGaF,EAAAG,qBAAuBf,EAAMgB,KACtCpB,IACI,MAAMC,EAAQD,EAAMH,gBAAmBK,EAAAC,YAEvC,OACIC,EAAAC,cAACJ,EAAKK,OAAAC,OAAA,CACFK,QAAM,EACND,KAAK,eACLH,UAAU,gBACNR,EAAMJ,QAETI,EAAMJ,OAAOyB;;;;;;;;;;;;;;;;;;;;;;;;q6DCf9BC,EAAAL,EAAAC,EAAA,qBACAd,EAAAa,EAAAC,EAAA,SACAL,EAAAI,EAAAC,EAAA,qBACAhB,EAAAe,EAAAC,EAAA,GASA,MAAaK,UAAwBnB,EAAMoB,cAoBhCC,SACH,MAAMC,WAAEA,GAAeH,GACjBX,OAAEA,EAAAe,SAAQA,EAAA9B,eAAUA,EAAAD,OAAgBA,EAAAgC,OAAQA,GAAW7B,KAAKC,MAC5DC,EAASJ,GAAkCK,EAAAC,YAC3CK,EAAY,CACd,SACAmB,EAAW,WAAa,KACxBf,EAAS,SAAW,MACtBiB,OAAOC,GAAKC,QAAQD,IAEtB,OACI1B,EAAAC,cAACqB,EAAU,CACPlB,UAAWA,EAAUwB,KAAK,KAC1BL,SAAUA,EACVf,OAAQA,EACRgB,OAAQA,EACRK,QAASlC,KAAKkC,SAEd7B,EAAAC,cAACJ,EAAKK,OAAAC,OAAA,CAACI,KAAK,SAASC,OAAQA,GAAYhB,GACpCA,EAAOyB,QAOhBI,UACJ1B,KAAKC,MAAMkC,SAASnC,KAAKC,MAAMJ,OAAOc,MAAOX,KAAKC,MAAMJ,SA9C9C2B,EAAAG,WAAab,EAAAC,QAAOC;;;;;kBAKpBf,GAA4BA,EAAM4B,QAAU;;;;;4BAKlC5B,GAChBA,EAAMY,OAAS,OAASZ,EAAM2B,SAAW,OAAS;;;gCAG9B3B,GAChBA,EAAMY,OAAS,OAAS;;MA8BpCuB,EAAAC,WAAA,CADCd,EAAAe,qJA7CLrB,EAAAO,gBAAAA","sourcesContent":["import { bind } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { ValueComponentMultiProps } from './typings';\nimport { SelectLabel } from './label';\n\ninterface RemoveProps<T = any> {\n    value: T;\n    onClick(value: T): void;\n}\n\nclass Remove extends React.PureComponent<RemoveProps> {\n    private static StyledRemove = styled.button`\n        cursor: pointer;\n        color: #007eff;\n        border: none;\n        background: none;\n        padding: 2px 4px;\n        margin: 0;\n        margin-right: 4px;\n        line-height: 1;\n        display: inline-block;\n        border-right: 1px solid rgba(0, 126, 255, 0.24);\n        margin-left: -2px;\n        font-size: 13px;\n\n        &:hover {\n            background-color: rgba(0, 113, 230, 0.08);\n        }\n\n        &:focus {\n            outline: none;\n        }\n    `;\n\n    public render(): React.ReactNode {\n        const { StyledRemove } = Remove;\n\n        return (\n            <StyledRemove\n                className=\"remove\"\n                type=\"button\"\n                tabIndex={-1}\n                onClick={this.onClick}\n            >\n                ×\n            </StyledRemove>\n        );\n    }\n\n    @bind\n    private onClick(e: React.SyntheticEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClick(this.props.value);\n    }\n}\n\nexport class ValueComponentMulti<T = any> extends React.PureComponent<\n    ValueComponentMultiProps<T>\n> {\n    private static TagContainer = styled.div`\n        display: flex;\n        padding: 0px 3px;\n        background-color: rgba(0, 126, 255, 0.08);\n        border-radius: 2px;\n        border: 1px solid rgba(0, 126, 255, 0.24);\n        color: #007eff;\n        font-size: 0.9em;\n        line-height: 1.4;\n        margin: 2px 3px;\n        align-items: center;\n\n        &:last-of-type {\n            margin-right: 5px;\n        }\n    `;\n\n    public render(): React.ReactNode {\n        const { TagContainer } = ValueComponentMulti;\n        const { option, labelComponent, onRemove } = this.props;\n        const Label = (labelComponent || SelectLabel) as any;\n\n        return (\n            <TagContainer className=\"value-multi\" {...option}>\n                <Remove value={option.value} onClick={onRemove}>\n                    ×\n                </Remove>\n                <Label type=\"value-multi\" active {...option}>\n                    {option.label}\n                </Label>\n            </TagContainer>\n        );\n    }\n}\n","import * as React from 'react';\nimport { SelectLabel } from './label';\nimport { ValueComponentSingleProps } from './typings';\n\nexport const ValueComponentSingle = React.memo(\n    (props: ValueComponentSingleProps) => {\n        const Label = props.labelComponent || (SelectLabel as any);\n\n        return (\n            <Label\n                active\n                type=\"value-single\"\n                className=\"value-single\"\n                {...props.option}\n            >\n                {props.option.label}\n            </Label>\n        );\n    }\n);\n","import { bind } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { SelectLabel } from './label';\nimport { OptionComponentProps } from './typings';\n\ninterface OptionItemProps {\n    active?: OptionComponentProps['active'];\n    selected?: OptionComponentProps['selected'];\n    height?: OptionComponentProps['height'];\n}\n\nexport class OptionComponent extends React.PureComponent<OptionComponentProps> {\n    public static OptionItem = styled.div`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        flex: 1;\n        height: ${(props: OptionItemProps) => props.height || 32}px;\n        padding: 0 10px;\n        min-width: 0;\n        cursor: pointer;\n        box-sizing: border-box;\n        background-color: ${(props: OptionItemProps) =>\n            props.active ? '#ddd' : props.selected ? '#eee' : '#fff'};\n\n        &:hover {\n            background-color: ${(props: OptionItemProps) =>\n                props.active ? '#ddd' : '#eee'};\n        }\n    `;\n\n    public render(): React.ReactNode {\n        const { OptionItem } = OptionComponent;\n        const { active, selected, labelComponent, option, height } = this.props;\n        const Label = (labelComponent ? labelComponent : SelectLabel) as any;\n        const className = [\n            'option',\n            selected ? 'selected' : null,\n            active ? 'active' : null\n        ].filter(v => Boolean(v));\n\n        return (\n            <OptionItem\n                className={className.join(' ')}\n                selected={selected}\n                active={active}\n                height={height}\n                onClick={this.onClick}\n            >\n                <Label type=\"option\" active={active} {...option}>\n                    {option.label}\n                </Label>\n            </OptionItem>\n        );\n    }\n\n    @bind\n    private onClick(): void {\n        this.props.onSelect(this.props.option.value, this.props.option);\n    }\n}\n"]}