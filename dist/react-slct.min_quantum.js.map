{"version":3,"sources":["src/menu.tsx","src/config.ts","src/menu-container.tsx","src/value.tsx"],"names":["React","$fsx","r","react_1","react_window_1","styled_components_1","config_1","label_1","menu_container_1","menu_row_1","option_1","utils_1","EmptyOptionItem","default","OptionComponent","OptionItem","ReactSlctColors","border","Empty","props","createElement","SelectLabel","emptyText","exports","Menu","rowHeight","selectedIndex","open","error","menuWidth","menuHeight","multi","hideSelectedOptions","currentValue","isArray","value","options","useMemo","filter","option","some","val","equal","equalCompareProp","rect","setRect","useState","style","setStyle","list","useRef","width","assumedHeight","Math","min","max","length","actualHeight","height","useEffect","current","undefined","scrollToItem","itemData","Object","assign","onSelect","values","item","Array","from","Set","search","labelComponent","optionComponent","MenuContainer","onRect","onStyle","MenuContent","menuComponent","itemCount","FixedSizeList","className","ref","itemSize","MenuRow","renderList","react_dom_1","menuPosition","top","getWindowInnerHeight","MenuOverlay","div","MenuWrapper","onClick","children","c","join","document","getDocument","window","getWindow","menuOverlay","menuWrapper","menuOverlayRect","setMenuOverlayRect","menuWrapperRect","setMenuWrapperRect","menuLeft","menuTop","scrollY","_a","getContainerTop","left","numWidth","Number","innerWidth","calcMenuOverlay","clientRect","getBoundingClientRect","round","calcMenuWrapper","onRef","call","onViewportChange","e","target","closest","allowRectChange","addEventListener","removeEventListener","createPortal","data-role","body","lodash_decorators_1","value_component_multi_1","value_component_single_1","Button","button","ArrowButton","ValueContainer","mobile","disabled","focused","ValueLeft","hasValue","ValueRight","Placeholder","ClearButton","ClearContainer","span","ClearX","Search","canSearch","css","Value","PureComponent","[object Object]","super","this","createRef","blur","prevProps","innerText","focus","clearable","ArrowComponent","arrowComponent","ClearComponent","clearComponent","ValueIconComponent","valueIconComponent","valueOptions","getValueOptions","showClearer","Boolean","searchAtStart","searchAtEnd","renderSearch","renderValues","type","tabIndex","onClear","searchable","keepSearchOnBlur","onSearchFocus","onSearchBlur","contentEditable","onInput","onSearch","onKeyDown","onFocus","onBlur","placeholder","valueComponentSingle","valueComponentMulti","Single","ValueComponentSingle","Multi","ValueComponentMulti","map","key","toKey","onRemove","onOptionRemove","el","getSelection","createRange","range","sel","selectNodeContents","collapse","removeAllRanges","addRange","stopPropagation","currentTarget","trim","preventDefault","metaKey","keyCode","keys","TAB","ENTER","ARROW_UP","ARROW_DOWN","tslib_1","__decorate","bind","SyntheticEvent","KeyboardEvent","_b","_c"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { FixedSizeList } from 'react-window';\nimport styled from 'styled-components';\nimport { ReactSlctColors } from './config';\nimport { SelectLabel } from './label';\nimport { MenuContainer } from './menu-container';\nimport { MenuRow } from './menu-row';\nimport { OptionComponent } from './option';\nimport { MenuComponentProps, Option, Rect } from './typings';\nimport { equal, isArray } from './utils';\n\nconst EmptyOptionItem = styled(OptionComponent.OptionItem)`\n    height: 100%;\n    border: 1px solid ${() => ReactSlctColors.border};\n`;\n\nconst Empty = (props: { emptyText?: string }) => (\n    <EmptyOptionItem>\n        <SelectLabel>\n            <i>{props.emptyText || 'No results'}</i>\n        </SelectLabel>\n    </EmptyOptionItem>\n);\n\nexport function Menu(props: MenuComponentProps) {\n    const {\n        rowHeight = 32,\n        selectedIndex,\n        open,\n        error,\n        menuWidth,\n        menuHeight,\n        multi,\n        hideSelectedOptions\n    } = props;\n    const currentValue =\n        isArray(props.value) && multi ? props.value : [props.value];\n    const options = React.useMemo(\n        () =>\n            (props.options || []).filter((option) => {\n                if (hideSelectedOptions) {\n                    const selected = currentValue.some((val) =>\n                        equal(val, option.value, props.equalCompareProp)\n                    );\n\n                    if (selected) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }),\n        [\n            props.options,\n            props.equalCompareProp,\n            hideSelectedOptions,\n            currentValue\n        ]\n    );\n    const [rect, setRect] = useState<Rect>();\n    const [style, setStyle] = useState<Rect>();\n    const list = useRef<FixedSizeList>(null);\n    const width = menuWidth || (rect && rect.width !== 'auto' ? rect.width : 0);\n    const assumedHeight = Math.min(\n        Math.max(options.length * rowHeight, rowHeight) + 2,\n        menuHeight || 185\n    );\n    const actualHeight =\n        (style?.height !== 'auto' && style?.height) || assumedHeight;\n\n    useEffect(() => {\n        if (\n            open &&\n            list.current &&\n            selectedIndex !== undefined &&\n            selectedIndex !== -1\n        ) {\n            list.current.scrollToItem(selectedIndex, 'center');\n        }\n    }, [open]);\n\n    const itemData = React.useMemo(() => {\n        return {\n            ...props,\n            options,\n            onSelect: (value: any, option: Option) => {\n                if (isArray(props.value) && props.multi) {\n                    const found = props.value.some((item) =>\n                        equal(item, value, props.equalCompareProp)\n                    );\n                    const values = found\n                        ? props.value.filter(\n                              (item) =>\n                                  !equal(item, value, props.equalCompareProp)\n                          )\n                        : Array.from(new Set([...props.value, value]));\n\n                    props.onSelect(values, option);\n                } else {\n                    props.onSelect(value, option);\n                }\n            }\n        };\n    }, [\n        options.length,\n        props.search,\n        props.rowHeight,\n        props.selectedIndex,\n        props.labelComponent,\n        props.optionComponent,\n        props.value\n    ]);\n\n    function renderList() {\n        const MenuContent = props.menuComponent;\n        const itemCount = options.length;\n\n        if (MenuContent) {\n            return <MenuContent {...props} />;\n        }\n\n        if (itemCount === 0) {\n            return <Empty emptyText={props.emptyText} />;\n        }\n\n        return (\n            <FixedSizeList\n                className=\"react-slct-menu-list\"\n                ref={list}\n                width=\"100%\"\n                height={actualHeight}\n                itemSize={rowHeight}\n                itemCount={itemCount}\n                itemData={itemData}\n            >\n                {MenuRow}\n            </FixedSizeList>\n        );\n    }\n\n    return open ? (\n        <MenuContainer\n            error={error}\n            menuWidth={width}\n            menuHeight={assumedHeight}\n            onRect={setRect}\n            onStyle={setStyle}\n        >\n            {renderList()}\n        </MenuContainer>\n    ) : null;\n}\n","export const ReactSlctColors = {\n    error: '#ff5c5c',\n    border: '#ccc'\n};\n","import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport { ReactSlctColors } from './config';\nimport { MenuContainerProps, Rect } from './typings';\nimport { getDocument, getWindow, getWindowInnerHeight } from './utils';\n\ninterface MenuWrapperProps {\n    rect?: Rect;\n    menuHeight?: MenuContainerProps['menuHeight'];\n    error?: boolean;\n}\n\nfunction menuPosition({\n    rect,\n    menuHeight = 186\n}: MenuWrapperProps): 'top' | 'bottom' {\n    if (!rect) {\n        return 'bottom';\n    }\n\n    const { height } = rect;\n\n    if (height === 'auto' || menuHeight === 'auto') {\n        return 'bottom';\n    }\n\n    if (\n        rect.top + height + menuHeight <= getWindowInnerHeight() ||\n        rect.top < menuHeight / 2\n    ) {\n        return 'bottom';\n    }\n\n    return 'top';\n}\n\nfunction getContainerTop(props: MenuWrapperProps): number {\n    const { rect } = props;\n    const window = getWindow();\n\n    if (!rect) {\n        return 0;\n    }\n\n    const menuHeight = (props.menuHeight !== 'auto' && props.menuHeight) || 186;\n    const height = rect.height === 'auto' ? 32 : rect.height;\n    const scrollY = window?.scrollY ?? 0;\n\n    switch (menuPosition(props)) {\n        case 'top':\n            return rect.top - menuHeight + 1 + scrollY;\n        case 'bottom':\n            return rect.top + height - 1 + scrollY;\n    }\n}\n\nconst MenuOverlay = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    pointer-events: none;\n`;\n\n// position this container fixed is not working well on mobile-devices\n// @see https://medium.com/@im_rahul/safari-and-position-fixed-978122be5f29\nconst MenuWrapper = styled.div`\n    position: absolute;\n    z-index: 9999;\n    background: #fff;\n    box-sizing: border-box;\n    box-shadow: ${(props: MenuWrapperProps) =>\n        menuPosition(props) === 'bottom'\n            ? '0 2px 5px rgba(0, 0, 0, 0.1)'\n            : '0 -2px 5px rgba(0, 0, 0, 0.1)'};\n\n    .react-slct-menu-list {\n        box-sizing: border-box;\n        border-width: 1px;\n        border-style: solid;\n        border-color: ${(props: MenuWrapperProps) =>\n            props.error ? ReactSlctColors.error : ReactSlctColors.border};\n        background-color: #fff;\n\n        &:focus {\n            outline: none;\n        }\n    }\n`;\n\nexport function MenuContainer(props: MenuContainerProps) {\n    const { error, onClick, children } = props;\n    const className = ['react-slct-menu', props.className]\n        .filter((c) => c)\n        .join(' ');\n    const document = getDocument();\n    const window = getWindow();\n    const menuOverlay = React.useRef<HTMLDivElement | null>(null);\n    const menuWrapper = React.useRef<HTMLDivElement | null>(null);\n    const [menuOverlayRect, setMenuOverlayRect] = React.useState<Rect>();\n    const [menuWrapperRect, setMenuWrapperRect] = React.useState<Rect>();\n\n    const style = React.useMemo<Rect>(() => {\n        const { menuLeft, menuTop, menuWidth, menuHeight } = props;\n        let width =\n            menuWidth && menuWidth !== 'auto'\n                ? menuWidth\n                : menuOverlayRect?.width || 'auto';\n        let height =\n            menuHeight && menuHeight !== 'auto'\n                ? menuHeight\n                : menuWrapperRect?.height || 'auto';\n        let top =\n            menuTop ??\n            getContainerTop({\n                rect: menuOverlayRect,\n                menuHeight: height\n            });\n        let left = menuLeft ?? menuOverlayRect?.left ?? 0;\n\n        if (window) {\n            const numWidth = Number(width);\n\n            if (numWidth > window.innerWidth) {\n                width = window.innerWidth - 20;\n            }\n\n            if (left + numWidth > window.innerWidth) {\n                left = Math.max(10, window.innerWidth - numWidth - 20);\n            }\n        }\n\n        if (top < 0) {\n            if (height !== 'auto') {\n                height += top;\n                top = 0;\n            }\n        }\n\n        return { top, left, width, height };\n    }, [\n        props.menuLeft,\n        props.menuTop,\n        props.menuWidth,\n        props.menuHeight,\n        menuOverlayRect,\n        menuWrapperRect\n    ]);\n\n    function calcMenuOverlay() {\n        if (menuOverlay.current) {\n            const clientRect = menuOverlay.current.getBoundingClientRect();\n\n            setMenuOverlayRect({\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            });\n        }\n    }\n\n    function calcMenuWrapper() {\n        if (menuWrapper.current) {\n            const clientRect = menuWrapper.current.getBoundingClientRect();\n\n            setMenuWrapperRect({\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            });\n        }\n    }\n\n    React.useEffect(calcMenuOverlay, [menuOverlay.current]);\n\n    React.useEffect(() => {\n        calcMenuWrapper();\n\n        if (menuWrapper.current) {\n            props.onRef?.(menuWrapper.current);\n        }\n    }, [menuWrapper.current]);\n\n    React.useEffect(() => {\n        props.onRect?.(menuOverlayRect, menuWrapperRect);\n    }, [menuOverlayRect, menuWrapperRect]);\n\n    React.useEffect(() => {\n        window?.addEventListener('scroll', onViewportChange, true);\n        window?.addEventListener('resize', onViewportChange, true);\n\n        function allowRectChange(e) {\n            if (e.target.closest && !e.target.closest('.react-slct-menu')) {\n                return false;\n            }\n\n            return true;\n        }\n\n        function onViewportChange(e: Event) {\n            if (allowRectChange(e)) {\n                calcMenuOverlay();\n                calcMenuWrapper();\n            }\n        }\n\n        return () => {\n            window?.removeEventListener('resize', onViewportChange, true);\n            window?.removeEventListener('scroll', onViewportChange, true);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (style) {\n            props.onStyle?.(style);\n        }\n    }, [style]);\n\n    return (\n        <MenuOverlay ref={menuOverlay}>\n            {document && style\n                ? createPortal(\n                      <MenuWrapper\n                          data-role=\"menu\"\n                          className={className}\n                          error={error}\n                          ref={menuWrapper}\n                          onClick={onClick}\n                          rect={menuOverlayRect}\n                          style={style}\n                      >\n                          {children}\n                      </MenuWrapper>,\n                      document.body\n                  )\n                : null}\n        </MenuOverlay>\n    );\n}\n","import { bind } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { ReactSlctColors } from './config';\nimport { SelectLabel } from './label';\nimport { Option, SelectProps } from './typings';\nimport { getValueOptions, getWindow, keys, toKey } from './utils';\nimport { ValueComponentMulti } from './value-component-multi';\nimport { ValueComponentSingle } from './value-component-single';\n\nexport interface ValueProps {\n    options: SelectProps['options'];\n    value: SelectProps['value'];\n    placeholder: SelectProps['placeholder'];\n    clearable: SelectProps['clearable'];\n    searchable: SelectProps['searchable'];\n    labelComponent: SelectProps['labelComponent'];\n    valueComponentSingle: SelectProps['valueComponentSingle'];\n    valueComponentMulti: SelectProps['valueComponentMulti'];\n    arrowComponent: SelectProps['arrowComponent'];\n    clearComponent: SelectProps['clearComponent'];\n    valueIconComponent: SelectProps['valueIconComponent'];\n    multi: SelectProps['multi'];\n    mobile: SelectProps['native'];\n    disabled: SelectProps['disabled'];\n    error: SelectProps['error'];\n    equalCompareProp: SelectProps['equalCompareProp'];\n    search?: string;\n    keepSearchOnBlur?: boolean;\n    open: boolean;\n    focused?: boolean;\n    onClear(): void;\n    onClick(): void;\n    onSearch(search: string): void;\n    onSearchFocus(): void;\n    onSearchBlur(): void;\n    onOptionRemove(value: any): void;\n}\n\ninterface SearchProps {\n    canSearch?: boolean;\n}\n\ninterface ValueContainerProps {\n    mobile?: boolean;\n    disabled?: boolean;\n    focused?: boolean;\n    error?: boolean;\n}\n\ninterface ValueLeftProps {\n    multi?: boolean;\n    hasValue?: boolean;\n}\n\nconst Button = styled.button`\n    background: transparent;\n    border: none;\n    margin: 0;\n    font-size: 20px;\n    padding: 0;\n    line-height: 1;\n    cursor: pointer;\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst ArrowButton = styled(Button)`\n    font-size: 12px;\n    color: ${() => ReactSlctColors.border};\n    transform: translateY(2px);\n\n    &:hover {\n        color: #333;\n    }\n`;\n\nconst ValueContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex: 1;\n    min-height: 32px;\n    pointer-events: ${(props: ValueContainerProps) =>\n        props.mobile || props.disabled ? 'none' : 'auto'};\n    padding: 5px 10px;\n    background: #fff;\n    cursor: default;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${(props: ValueContainerProps) =>\n        props.error ? ReactSlctColors.error : ReactSlctColors.border};\n    z-index: 0;\n    box-sizing: border-box;\n    max-width: 100%;\n    box-shadow: ${(props: ValueContainerProps) =>\n        props.focused ? 'rgba(0, 0, 0, 0.15) 0 0 2px' : 'none'};\n`;\n\nconst ValueLeft = styled.div`\n    display: flex;\n    flex: 1;\n    align-items: center;\n    flex-wrap: ${(props: ValueLeftProps) =>\n        props.multi && props.hasValue ? 'wrap' : 'nowrap'};\n    user-select: none;\n    min-width: 0;\n    box-sizing: border-box;\n    margin: ${(props: ValueLeftProps) =>\n        props.multi && props.hasValue ? '-2px -5px' : 0};\n`;\n\nconst ValueRight = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 4px;\n    box-sizing: border-box;\n`;\n\nconst Placeholder = styled(SelectLabel)`\n    color: #aaa;\n`;\n\nconst ClearButton = styled(Button)`\n    margin-right: 6px;\n`;\n\nconst ClearContainer = styled.span`\n    color: ${() => ReactSlctColors.border};\n\n    &:hover {\n        color: #333;\n    }\n`;\n\nconst ClearX = () => <ClearContainer>×</ClearContainer>;\n\nconst Search = styled.span`\n    min-width: 1px;\n    margin-left: -1px;\n    user-select: text;\n\n    ${(props: SearchProps) =>\n        props.canSearch\n            ? css`\n                  opacity: 1;\n                  position: relative;\n                  left: 1px;\n              `\n            : css`\n                  position: absolute;\n                  opacity: 0;\n              `}\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport class Value extends React.PureComponent<ValueProps> {\n    search: React.RefObject<HTMLSpanElement>;\n\n    constructor(props: ValueProps) {\n        super(props);\n\n        this.search = React.createRef();\n\n        const window = getWindow();\n\n        if (window) {\n            window.addEventListener('blur', this.blur);\n        }\n    }\n\n    public componentDidUpdate(prevProps: ValueProps): void {\n        if (prevProps.search && !this.props.search && this.search.current) {\n            this.search.current.innerText = '';\n        }\n\n        if (prevProps.focused !== this.props.focused && this.props.focused) {\n            this.focus();\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            options = [],\n            value,\n            disabled,\n            clearable,\n            open,\n            mobile,\n            multi,\n            focused,\n            equalCompareProp,\n            error\n        } = this.props;\n        const ArrowComponent = this.props.arrowComponent;\n        const ClearComponent = this.props.clearComponent || ClearX;\n        const ValueIconComponent = this.props.valueIconComponent;\n        const valueOptions = getValueOptions(\n            options,\n            value,\n            multi,\n            equalCompareProp\n        );\n        const showClearer = Boolean(\n            clearable && valueOptions.length && !mobile\n        );\n        const searchAtStart = !multi || valueOptions.length === 0;\n        const searchAtEnd = multi && valueOptions.length > 0;\n\n        return (\n            <ValueContainer\n                data-role=\"value\"\n                className=\"react-slct-value\"\n                disabled={disabled}\n                mobile={mobile}\n                focused={focused}\n                error={error}\n                onClick={this.onClick}\n            >\n                <ValueLeft\n                    className=\"value-left\"\n                    multi={multi}\n                    hasValue={!!valueOptions.length}\n                >\n                    {ValueIconComponent && <ValueIconComponent />}\n                    {searchAtStart && this.renderSearch()}\n                    {this.renderValues(valueOptions)}\n                    {searchAtEnd && this.renderSearch()}\n                </ValueLeft>\n                <ValueRight className=\"value-right\">\n                    {showClearer && (\n                        <ClearButton\n                            type=\"button\"\n                            tabIndex={-1}\n                            className=\"clearer\"\n                            onClick={this.onClear}\n                        >\n                            <ClearComponent />\n                        </ClearButton>\n                    )}\n                    {ArrowComponent ? (\n                        <ArrowComponent open={open} />\n                    ) : (\n                        <ArrowButton\n                            type=\"button\"\n                            className=\"arrow\"\n                            tabIndex={-1}\n                        >\n                            {open ? '▲' : '▼'}\n                        </ArrowButton>\n                    )}\n                </ValueRight>\n            </ValueContainer>\n        );\n    }\n\n    private renderSearch(): React.ReactNode {\n        const {\n            open,\n            value,\n            disabled,\n            searchable,\n            search,\n            keepSearchOnBlur,\n            onSearchFocus,\n            onSearchBlur\n        } = this.props;\n        const canSearch =\n            (open && searchable) ||\n            (keepSearchOnBlur && !value && searchable) ||\n            Boolean(search);\n\n        if (disabled && !keepSearchOnBlur) {\n            return null;\n        }\n\n        return (\n            <Search\n                className=\"search\"\n                contentEditable\n                canSearch={canSearch}\n                onInput={this.onSearch}\n                onKeyDown={this.onKeyDown}\n                onFocus={onSearchFocus}\n                onBlur={onSearchBlur}\n                ref={this.search as any}\n            />\n        );\n    }\n\n    private renderValues(valueOptions: Option[]): React.ReactNode {\n        const {\n            placeholder,\n            search,\n            labelComponent,\n            valueComponentSingle,\n            valueComponentMulti,\n            multi,\n            open\n        } = this.props;\n\n        if (search && open && !multi) {\n            return null;\n        }\n\n        if (valueOptions.length === 0 && !search) {\n            return <Placeholder>{placeholder}</Placeholder>;\n        }\n\n        const Single = valueComponentSingle || ValueComponentSingle;\n        const Multi = (valueComponentMulti || ValueComponentMulti) as any;\n\n        return valueOptions.map((option) =>\n            multi ? (\n                <Multi\n                    key={toKey(option.value, this.props.equalCompareProp)}\n                    option={option}\n                    labelComponent={labelComponent}\n                    options={valueOptions}\n                    onRemove={this.props.onOptionRemove}\n                />\n            ) : (\n                <Single\n                    key={toKey(option.value, this.props.equalCompareProp)}\n                    option={option}\n                    labelComponent={labelComponent}\n                />\n            )\n        );\n    }\n\n    private focus(): void {\n        const el = this.search.current;\n\n        if (el) {\n            el.focus();\n\n            if (\n                typeof window.getSelection != 'undefined' &&\n                typeof document.createRange != 'undefined'\n            ) {\n                const range = document.createRange();\n                const sel = window.getSelection();\n\n                range.selectNodeContents(el);\n                range.collapse(false);\n\n                if (sel) {\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n            }\n        }\n    }\n\n    @bind\n    private blur(): void {\n        if (this.search.current) {\n            this.search.current.blur();\n        }\n    }\n\n    @bind\n    private onClick(): void {\n        if (!this.props.disabled) {\n            this.focus();\n            this.props.onClick();\n        }\n    }\n\n    @bind\n    private onClear(e: React.SyntheticEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n\n    @bind\n    private onSearch(e: React.KeyboardEvent<HTMLSpanElement>) {\n        if (this.props.searchable) {\n            this.props.onSearch(e.currentTarget.innerText.trim());\n        } else {\n            e.preventDefault();\n        }\n    }\n\n    @bind\n    private onKeyDown(e: React.KeyboardEvent<HTMLSpanElement>) {\n        const { searchable } = this.props;\n\n        if (e.metaKey) {\n            return;\n        }\n\n        if (\n            (!searchable && e.keyCode !== keys.TAB) ||\n            e.keyCode === keys.ENTER ||\n            e.keyCode === keys.ARROW_UP ||\n            e.keyCode === keys.ARROW_DOWN\n        ) {\n            e.preventDefault();\n        }\n    }\n}\n"]}