{"version":3,"sources":["src/option.tsx"],"names":["lodash_decorators_1","$fsx","r","React","styled_components_1","label_1","OptionComponent","PureComponent","[object Object]","OptionItem","active","selected","labelComponent","option","height","this","props","Label","SelectLabel","className","filter","v","Boolean","createElement","data-role","join","onClick","Object","assign","type","label","onSelect","value","default","div","tslib_1","__decorate","bind","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ouHAAAA,EAAAC,EAAAC,EAAA,qBACAC,EAAAF,EAAAC,EAAA,SACAE,EAAAH,EAAAC,EAAA,qBACAG,EAAAJ,EAAAC,EAAA,GASA,MAAaI,UAAwBH,EAAMI,cAoBhCC,SACH,MAAMC,WAAEA,GAAeH,GACjBI,OAAEA,EAAAC,SAAQA,EAAAC,eAAUA,EAAAC,OAAgBA,EAAAC,OAAQA,GAAWC,KAAKC,MAC5DC,EAASL,GAAkCP,EAAAa,YAC3CC,EAAY,CACd,SACAJ,KAAKC,MAAMG,UACXR,EAAW,WAAa,KACxBD,EAAS,SAAW,MACtBU,OAAOC,GAAKC,QAAQD,IAEtB,OACIlB,EAAAoB,cAACd,EAAU,CAAAe,YACG,SACVL,UAAWA,EAAUM,KAAK,KAC1Bd,SAAUA,EACVD,OAAQA,EACRI,OAAQA,EACRY,QAASX,KAAKW,SAEdvB,EAAAoB,cAACN,EAAKU,OAAAC,OAAA,CAACC,KAAK,SAASnB,OAAQA,GAAYG,GACpCA,EAAOiB,QAOhBtB,UACJO,KAAKC,MAAMe,SAAShB,KAAKC,MAAMH,OAAOmB,MAAOjB,KAAKC,MAAMH,SAhD9CP,EAAAG,WAAaL,EAAA6B,QAAOC,GAAG;;;;;kBAKvBlB,GAA4BA,EAAMF,QAAU;;;;;4BAKlCE,GAChBA,EAAMN,OAAS,OAASM,EAAML,SAAW,OAAS;;;gCAG9BK,GAChBA,EAAMN,OAAS,OAAS;;MAgCpCyB,EAAAC,WAAA,CADCpC,EAAAqC,qJA/CLC,EAAAhC,gBAAAA","sourcesContent":["import { bind } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { SelectLabel } from './label';\nimport { OptionComponentProps } from './typings';\n\ninterface OptionItemProps {\n    active?: OptionComponentProps['active'];\n    selected?: OptionComponentProps['selected'];\n    height?: OptionComponentProps['height'];\n}\n\nexport class OptionComponent extends React.PureComponent<OptionComponentProps> {\n    public static OptionItem = styled.div`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        flex: 1;\n        height: ${(props: OptionItemProps) => props.height || 32}px;\n        padding: 0 10px;\n        min-width: 0;\n        cursor: pointer;\n        box-sizing: border-box;\n        background-color: ${(props: OptionItemProps) =>\n            props.active ? '#ddd' : props.selected ? '#eee' : '#fff'};\n\n        &:hover {\n            background-color: ${(props: OptionItemProps) =>\n                props.active ? '#ddd' : '#eee'};\n        }\n    `;\n\n    public render(): React.ReactNode {\n        const { OptionItem } = OptionComponent;\n        const { active, selected, labelComponent, option, height } = this.props;\n        const Label = (labelComponent ? labelComponent : SelectLabel) as any;\n        const className = [\n            'option',\n            this.props.className,\n            selected ? 'selected' : null,\n            active ? 'active' : null\n        ].filter(v => Boolean(v));\n\n        return (\n            <OptionItem\n                data-role=\"option\"\n                className={className.join(' ')}\n                selected={selected}\n                active={active}\n                height={height}\n                onClick={this.onClick}\n            >\n                <Label type=\"option\" active={active} {...option}>\n                    {option.label}\n                </Label>\n            </OptionItem>\n        );\n    }\n\n    @bind\n    private onClick(): void {\n        this.props.onSelect(this.props.option.value, this.props.option);\n    }\n}\n"]}