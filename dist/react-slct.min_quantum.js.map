{"version":3,"sources":["src/index.tsx","src/value.tsx","src/label.tsx","src/utils.ts","src/value-component-multi.tsx","src/value-component-single.tsx","src/menu.tsx","src/menu-container.tsx","src/menu-row.tsx","src/option.tsx","src/global-stylings.tsx"],"names":["lodash_decorators_1","$fsx","r","React","styled_components_1","value_1","menu_1","exports","Menu","menu_container_1","utils_1","keys","typings_1","SelectProps","MenuComponentProps","LabelComponentProps","Option","Select","PureComponent","[object Object]","props","super","this","container","nativeSelect","createRef","state","open","blindText","options","search","creatable","onCreateText","showCreate","some","option","value","label","filter","toLowerCase","includes","document","getDocument","Boolean","onCreate","_","prevState","handleBlindTextUpdate","removeDocumentListener","Container","className","clearable","placeholder","disabled","error","menuComponent","labelComponent","optionComponent","valueComponentSingle","valueComponentMulti","arrowComponent","clearComponent","multi","native","emptyText","rowHeight","menuWidth","menuHeight","keepSearchOnBlur","selectedIndex","focused","searchable","children","renderChildren","classNames","c","createElement","join","ref","onContainerRef","data-role","onKeyUp","onKeyDown","renderNativeSelect","Value","mobile","onClear","onClick","toggleMenu","onSearch","onSearchFocus","onSearchBlur","onOptionRemove","onSelect","onOptionSelect","NativeSelect","dataRole","undefined","isArray","map","findOptionIndex","multiple","tabIndex","onChange","onChangeNativeSelect","i","key","toKey","valueOptions","getValueOptions","showPlaceholder","length","MenuContainer","onToggle","onClose","closeMenu","onOpen","openMenu","onRef","findIndex","equal","setState","addDocumentListener","callback","cb","addEventListener","onDocumentClick","removeEventListener","blindTextTimeout","setTimeout","val","index","JSON","stringify","String","e","currentTarget","values","Array","from","selectedOptions","htmlOption","current","optionWasCreated","selectOnNative","createValue","find","optionIsCreatable","createOption","target","closest","contains","keyCode","TAB","handleBlindText","ARROW_UP","ARROW_DOWN","ENTER","newValue","ESC","BACKSPACE","clearTimeout","slice","cleanBlindText","SPACE","fromCodePoint","test","el","startsWith","default","div","select","css","tslib_1","__decorate","bind","debounce","SyntheticEvent","_a","Object","_b","KeyboardEvent","_c","_d","label_1","value_component_multi_1","value_component_single_1","Button","button","ArrowButton","ValueContainer","ValueLeft","hasValue","ValueRight","Placeholder","SelectLabel","ClearButton","ClearContainer","span","ClearX","Search","canSearch","window","getWindow","blur","prevProps","innerText","focus","ArrowComponent","ClearComponent","showClearer","searchAtStart","searchAtEnd","renderSearch","renderValues","type","contentEditable","onInput","onFocus","onBlur","Single","ValueComponentSingle","Multi","ValueComponentMulti","onRemove","getSelection","createRange","range","sel","selectNodeContents","collapse","removeAllRanges","addRange","stopPropagation","trim","preventDefault","metaKey","valueA","valueB","id","toJSON","getWindowInnerHeight","defaultHeight","innerHeight","Remove","StyledRemove","TagContainer","Label","assign","active","memo","react_1","react_window_1","menu_row_1","option_1","EmptyOptionItem","OptionComponent","OptionItem","Empty","rect","setRect","useState","list","useRef","width","height","Math","min","max","useEffect","scrollToItem","itemData","useMemo","item","Set","onRect","MenuContent","itemCount","FixedSizeList","itemSize","MenuRow","renderList","react_dom_1","menuPosition","top","MenuOverlay","MenuWrapper","menuOverlayRect","menuOverlay","clientRect","getBoundingClientRect","left","round","menuWrapperRect","menuWrapper","style","menuLeft","menuTop","getContainerTop","numWidth","Number","innerWidth","addListener","removeListener","onMenuOverlay","createPortal","onMenuWrapper","body","onViewportChange","allowRectChange","data","currentValue","Component","selected","areEqual","v","getElementById","ReactSlctStyle","createGlobalStyle","reactSlctDiv","appendChild","render","create"],"mappings":"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","sourcesContent":["import { bind, debounce } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Value } from './value';\nimport { Menu } from './menu';\nimport { MenuContainer } from './menu-container';\nimport {\n    isArray,\n    keys,\n    getDocument,\n    getValueOptions,\n    equal,\n    toKey\n} from './utils';\nimport {\n    SelectProps,\n    SelectState,\n    MenuComponentProps,\n    LabelComponentProps,\n    Option\n} from './typings';\nimport './global-stylings';\n\nexport {\n    SelectProps,\n    Menu,\n    MenuComponentProps,\n    LabelComponentProps,\n    Option,\n    keys\n};\n\nexport class Select<T = any> extends React.PureComponent<\n    SelectProps<T>,\n    SelectState\n> {\n    private static Container = styled.div`\n        display: flex;\n        position: relative;\n        cursor: default;\n        width: 100%;\n        box-sizing: border-box;\n        pointer-events: ${(props: { disabled?: boolean }) =>\n            props.disabled ? 'none' : 'auto'};\n        opacity: ${(props: { disabled?: boolean }) =>\n            props.disabled ? 0.75 : 1};\n        user-select: none;\n    `;\n\n    private static NativeSelect = styled.select`\n        display: block;\n        opacity: 0;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        ${(props: { native?: boolean }) =>\n            props.native\n                ? css`\n                      z-index: 1;\n                  `\n                : css`\n                      pointer-events: none;\n                      z-index: auto;\n                  `};\n    `;\n\n    private nativeSelect: React.RefObject<HTMLSelectElement>;\n    private container: HTMLDivElement | null = null;\n    private blindTextTimeout!: number;\n\n    constructor(props: SelectProps) {\n        super(props);\n\n        this.nativeSelect = React.createRef();\n\n        this.state = {\n            open: false,\n            blindText: ''\n        };\n    }\n\n    private get options(): Option<T>[] {\n        const { search } = this.state;\n        const { creatable, onCreateText } = this.props;\n        let options = this.props.options || [];\n        const showCreate =\n            creatable &&\n            !options.some(option => {\n                const { value, label } = option;\n\n                // @ts-ignore\n                return value === search || label === search;\n            });\n\n        if (search) {\n            options = options.filter(option =>\n                option.label.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        if (showCreate && search) {\n            options = [\n                {\n                    label: onCreateText\n                        ? onCreateText(search)\n                        : `Create \"${search}\"`,\n                    value: search as any,\n                    creatable: true\n                },\n                ...options\n            ];\n        }\n\n        return options;\n    }\n\n    private get document() {\n        return getDocument();\n    }\n\n    private optionIsCreatable(option: Option<T>): boolean {\n        return (\n            this.props.creatable &&\n            option.creatable &&\n            Boolean(this.props.onCreate && this.state.search)\n        );\n    }\n\n    public componentDidUpdate(_, prevState: SelectState): void {\n        if (\n            this.state.blindText &&\n            prevState.blindText !== this.state.blindText\n        ) {\n            this.handleBlindTextUpdate();\n        }\n    }\n\n    public componentWillUnmount(): void {\n        this.removeDocumentListener();\n    }\n\n    public render(): React.ReactNode {\n        const { Container } = Select;\n        const {\n            className,\n            options,\n            creatable,\n            clearable,\n            placeholder,\n            value,\n            disabled,\n            error,\n            menuComponent,\n            labelComponent,\n            optionComponent,\n            valueComponentSingle,\n            valueComponentMulti,\n            arrowComponent,\n            clearComponent,\n            multi,\n            native,\n            emptyText,\n            rowHeight,\n            menuWidth,\n            menuHeight,\n            keepSearchOnBlur\n        } = this.props;\n        const { open, search, selectedIndex, focused } = this.state;\n        const searchable = this.props.searchable || creatable;\n\n        if (this.props.children) {\n            return this.renderChildren();\n        }\n\n        const classNames = [\n            'react-slct',\n            className,\n            open && 'open',\n            error && 'has-error'\n        ].filter(c => Boolean(c));\n\n        return (\n            <Container\n                className={classNames.join(' ')}\n                disabled={disabled}\n                ref={this.onContainerRef as any}\n                data-role={this.props['data-role']}\n                onKeyUp={this.onKeyUp}\n                onKeyDown={this.onKeyDown}\n            >\n                {this.renderNativeSelect()}\n                <Value\n                    clearable={clearable}\n                    searchable={searchable}\n                    open={open}\n                    disabled={disabled}\n                    multi={multi}\n                    mobile={native}\n                    focused={focused}\n                    options={options}\n                    placeholder={placeholder}\n                    error={error}\n                    value={value}\n                    search={search}\n                    keepSearchOnBlur={keepSearchOnBlur}\n                    labelComponent={labelComponent}\n                    valueComponentSingle={valueComponentSingle}\n                    valueComponentMulti={valueComponentMulti}\n                    arrowComponent={arrowComponent}\n                    clearComponent={clearComponent}\n                    onClear={this.onClear}\n                    onClick={this.toggleMenu}\n                    onSearch={this.onSearch}\n                    onSearchFocus={this.onSearchFocus}\n                    onSearchBlur={this.onSearchBlur}\n                    onOptionRemove={this.onOptionRemove}\n                />\n                <Menu\n                    open={open}\n                    options={this.options}\n                    value={value}\n                    multi={multi}\n                    error={error}\n                    search={search}\n                    selectedIndex={selectedIndex}\n                    menuComponent={menuComponent}\n                    labelComponent={labelComponent}\n                    optionComponent={optionComponent}\n                    emptyText={emptyText}\n                    rowHeight={rowHeight}\n                    menuWidth={menuWidth}\n                    menuHeight={menuHeight}\n                    onSelect={this.onOptionSelect}\n                />\n            </Container>\n        );\n    }\n\n    private renderNativeSelect(): React.ReactNode {\n        const { NativeSelect } = Select;\n        const { native, placeholder, multi, disabled } = this.props;\n        const dataRole = this.props['data-role']\n            ? `select-${this.props['data-role']}`\n            : undefined;\n        const clearable = this.props.clearable && native;\n        const value = isArray(this.props.value)\n            ? this.props.value.map(this.findOptionIndex)\n            : this.findOptionIndex(this.props.value || '');\n\n        return (\n            <NativeSelect\n                ref={this.nativeSelect as any}\n                multiple={multi}\n                value={value}\n                disabled={disabled}\n                native={native}\n                tabIndex={-1}\n                data-role={dataRole}\n                onChange={this.onChangeNativeSelect}\n            >\n                <option value=\"\" disabled={!clearable}>\n                    {placeholder}\n                </option>\n                {this.options.map((option, i) => (\n                    <option\n                        key={toKey(option.value)}\n                        value={`${i}`}\n                        disabled={option.disabled}\n                    >\n                        {option.label}\n                    </option>\n                ))}\n            </NativeSelect>\n        );\n    }\n\n    private renderChildren(): React.ReactNode {\n        const { options, placeholder, multi, children } = this.props;\n        const { open, search } = this.state;\n        const valueOptions = getValueOptions(options || [], this.props.value);\n        const value: T | T[] | undefined = !multi\n            ? this.props.value\n            : valueOptions.map(option => option.value);\n        const showPlaceholder =\n            !search &&\n            (isArray(value)\n                ? value.length === 0\n                : value === undefined || value === null);\n\n        if (!children) {\n            return null;\n        }\n\n        return children({\n            options: this.options,\n            open,\n            value,\n            MenuContainer,\n            placeholder: showPlaceholder ? placeholder : undefined,\n            onToggle: () => this.toggleMenu(),\n            onClose: () => this.closeMenu(),\n            onOpen: () => this.openMenu(),\n            onRef: ref => (this.container = ref)\n        });\n    }\n\n    @bind\n    private toggleMenu(): void {\n        const open = !this.state.open;\n\n        if (open) {\n            this.openMenu();\n        } else {\n            this.closeMenu();\n        }\n    }\n\n    @debounce(0)\n    private openMenu(): void {\n        const selectedIndex = this.options.findIndex(option =>\n            equal(option.value, this.props.value)\n        );\n        const keepSearchOnBlur =\n            this.props.keepSearchOnBlur && !this.props.value;\n\n        this.setState(\n            {\n                open: true,\n                search: keepSearchOnBlur ? this.state.search : undefined,\n                selectedIndex\n            },\n            () => {\n                if (this.props.onOpen) {\n                    this.props.onOpen();\n                }\n\n                this.addDocumentListener();\n            }\n        );\n    }\n\n    @debounce(0)\n    private closeMenu(callback = () => {}): void {\n        const keepSearchOnBlur =\n            this.props.keepSearchOnBlur && !this.props.value;\n\n        this.removeDocumentListener();\n        this.setState(\n            {\n                open: false,\n                search: keepSearchOnBlur ? this.state.search : undefined,\n                selectedIndex: undefined\n            },\n            () => {\n                if (this.props.onClose) {\n                    this.props.onClose();\n                }\n\n                callback();\n            }\n        );\n    }\n\n    private createOption(value: string, cb?: () => void): void {\n        const { onCreate } = this.props;\n\n        if (onCreate) {\n            this.closeMenu(() => {\n                onCreate(value);\n\n                if (cb) {\n                    cb();\n                }\n            });\n        }\n    }\n\n    private addDocumentListener(): void {\n        this.removeDocumentListener();\n\n        if (this.document) {\n            this.document.addEventListener('click', this.onDocumentClick);\n        }\n    }\n\n    private removeDocumentListener(): void {\n        if (this.document) {\n            this.document.removeEventListener('click', this.onDocumentClick);\n        }\n    }\n\n    @bind\n    private cleanBlindText(): void {\n        this.blindTextTimeout = setTimeout(\n            () => this.setState({ blindText: '' }),\n            700\n        );\n    }\n\n    @bind\n    private findOptionIndex(val: any) {\n        let index = this.options.findIndex(option => option.value === val);\n\n        if (index === -1) {\n            if (typeof val === 'object') {\n                index = this.options.findIndex(option => {\n                    if (typeof option.value === 'object') {\n                        return (\n                            JSON.stringify(option.value) === JSON.stringify(val)\n                        );\n                    }\n\n                    return false;\n                });\n            }\n\n            if (index === -1) {\n                return '';\n            }\n        }\n\n        return String(index);\n    }\n\n    @bind\n    private onChangeNativeSelect(\n        e: React.SyntheticEvent<HTMLSelectElement>\n    ): void {\n        const { onChange, multi } = this.props;\n        const { currentTarget } = e;\n\n        if (onChange) {\n            if (currentTarget.value === '') {\n                this.onClear();\n            } else {\n                const values = Array.from(currentTarget.selectedOptions).map(\n                    htmlOption => this.options[htmlOption.index - 1].value\n                );\n\n                if (multi) {\n                    onChange(values as any);\n                } else {\n                    onChange(values[0] as any);\n                }\n            }\n        }\n    }\n\n    @bind\n    private onSearchFocus(): void {\n        const { open, focused } = this.state;\n\n        if (!open && !focused && !this.props.native) {\n            this.openMenu();\n        }\n\n        this.setState({ focused: true });\n    }\n\n    @bind\n    private onSearchBlur(): void {\n        this.setState({ focused: false });\n    }\n\n    @bind\n    private onOptionSelect(value: any | any[], option?: Option<T>): void {\n        const { current } = this.nativeSelect;\n        const { onChange, creatable } = this.props;\n        let optionWasCreated = false;\n\n        const selectOnNative = () => {\n            if (current) {\n                current.value = isArray(value)\n                    ? (value.map(this.findOptionIndex) as any)\n                    : this.findOptionIndex(value);\n            }\n\n            this.setState({ focused: true }, () =>\n                this.closeMenu(() => onChange && onChange(value, option))\n            );\n        };\n\n        if (creatable) {\n            const createValue = (val: any) => {\n                const option = this.options.find(\n                    option =>\n                        this.optionIsCreatable(option) && option.value === val\n                );\n\n                if (option) {\n                    optionWasCreated = true;\n                    this.createOption(option.value as any, selectOnNative);\n                }\n            };\n\n            if (isArray(value)) {\n                value.map(createValue);\n            } else {\n                createValue(value);\n            }\n        }\n\n        if (!optionWasCreated) {\n            selectOnNative();\n        }\n    }\n\n    @bind\n    private onOptionRemove(value: any): void {\n        if (isArray(this.props.value)) {\n            const values = this.props.value.filter(val => !equal(val, value));\n\n            this.onOptionSelect(values);\n        }\n    }\n\n    @bind\n    private onClear(): void {\n        this.onOptionSelect(this.props.multi ? [] : undefined);\n    }\n\n    @bind\n    private onSearch(search: string): void {\n        this.setState({ search }, () => {\n            if (this.options.length === 1 || (this.props.creatable && search)) {\n                this.setState({ selectedIndex: 0 });\n            } else {\n                this.setState({ selectedIndex: undefined });\n            }\n\n            if (this.props.onSearch) {\n                this.props.onSearch(search);\n            }\n        });\n    }\n\n    @bind\n    private onDocumentClick(e): void {\n        const { target } = e;\n\n        if (\n            target.closest('.react-slct-menu') ||\n            target.closest('.react-slct-value')\n        ) {\n            return;\n        }\n\n        if (this.container && !this.container.contains(target)) {\n            this.closeMenu();\n        }\n    }\n\n    @bind\n    private onKeyDown({ keyCode }: React.KeyboardEvent): void {\n        const { searchable, creatable } = this.props;\n\n        switch (keyCode) {\n            case keys.TAB:\n                if (this.state.open) {\n                    this.closeMenu();\n                }\n                break;\n        }\n\n        if (!searchable && !creatable) {\n            this.handleBlindText(keyCode);\n        }\n    }\n\n    @bind\n    private onKeyUp({ keyCode }: React.KeyboardEvent): void {\n        const { search, open } = this.state;\n        const { value } = this.props;\n        let selectedIndex = this.state.selectedIndex;\n\n        switch (keyCode) {\n            case keys.ARROW_UP:\n                if (open) {\n                    if (selectedIndex !== undefined) {\n                        selectedIndex = selectedIndex - 1;\n\n                        if (selectedIndex < 0) {\n                            selectedIndex = this.options.length - 1;\n                        }\n                    }\n\n                    this.setState({ selectedIndex });\n                } else {\n                    this.openMenu();\n                }\n                break;\n            case keys.ARROW_DOWN:\n                if (open) {\n                    if (\n                        selectedIndex === undefined ||\n                        selectedIndex === this.options.length - 1\n                    ) {\n                        selectedIndex = 0;\n                    } else {\n                        selectedIndex = selectedIndex + 1;\n                    }\n\n                    this.setState({ selectedIndex });\n                } else {\n                    this.openMenu();\n                }\n                break;\n            case keys.ENTER:\n                if (\n                    this.state.selectedIndex === 0 &&\n                    this.optionIsCreatable(this.options[0])\n                ) {\n                    this.createOption(search!);\n                } else if (\n                    selectedIndex !== undefined &&\n                    this.options[selectedIndex]\n                ) {\n                    const option = this.options[selectedIndex];\n                    const newValue = option.value;\n\n                    this.onOptionSelect(\n                        isArray(value) ? [...value, newValue] : newValue,\n                        option\n                    );\n                }\n                break;\n            case keys.ESC:\n                if (open) {\n                    this.closeMenu();\n                }\n                break;\n        }\n    }\n\n    private handleBlindText(keyCode: number): void {\n        const { blindText } = this.state;\n\n        if (keyCode === keys.BACKSPACE && blindText.length) {\n            clearTimeout(this.blindTextTimeout);\n\n            this.setState(\n                {\n                    blindText: blindText.slice(0, blindText.length - 1)\n                },\n                this.cleanBlindText\n            );\n        } else if (keyCode === keys.SPACE) {\n            clearTimeout(this.blindTextTimeout);\n\n            this.setState(\n                {\n                    blindText: blindText + ' '\n                },\n                this.cleanBlindText\n            );\n        } else {\n            const key = String.fromCodePoint(keyCode);\n\n            if (/\\w/.test(key)) {\n                clearTimeout(this.blindTextTimeout);\n\n                this.setState(\n                    {\n                        blindText: blindText + key\n                    },\n                    this.cleanBlindText\n                );\n            }\n        }\n    }\n\n    @bind\n    private onContainerRef(el: HTMLDivElement | null): void {\n        this.container = el;\n    }\n\n    private handleBlindTextUpdate(): void {\n        const { open, blindText } = this.state;\n        const { multi } = this.props;\n\n        if (open) {\n            const selectedIndex = this.options.findIndex(option =>\n                option.label.toLowerCase().startsWith(blindText.toLowerCase())\n            );\n\n            if (selectedIndex >= 0) {\n                this.setState({ selectedIndex });\n            }\n        } else if (!multi) {\n            if (blindText) {\n                const option = this.options.find(option =>\n                    option.label\n                        .toLowerCase()\n                        .startsWith(blindText.toLowerCase())\n                );\n\n                if (option) {\n                    this.onOptionSelect(option.value, option);\n                }\n            } else {\n                this.onOptionSelect(undefined);\n            }\n        }\n    }\n}\n","import { bind } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { SelectLabel } from './label';\nimport { keys, getValueOptions, getWindow, toKey } from './utils';\nimport { SelectProps, Option } from './typings';\nimport { ValueComponentMulti } from './value-component-multi';\nimport { ValueComponentSingle } from './value-component-single';\n\nexport interface ValueProps {\n    options: SelectProps['options'];\n    value: SelectProps['value'];\n    placeholder: SelectProps['placeholder'];\n    clearable: SelectProps['clearable'];\n    searchable: SelectProps['searchable'];\n    labelComponent: SelectProps['labelComponent'];\n    valueComponentSingle: SelectProps['valueComponentSingle'];\n    valueComponentMulti: SelectProps['valueComponentMulti'];\n    arrowComponent: SelectProps['arrowComponent'];\n    clearComponent: SelectProps['clearComponent'];\n    multi: SelectProps['multi'];\n    mobile: SelectProps['native'];\n    disabled: SelectProps['disabled'];\n    error: SelectProps['error'];\n    search?: string;\n    keepSearchOnBlur?: boolean;\n    open: boolean;\n    focused?: boolean;\n    onClear(): void;\n    onClick(): void;\n    onSearch(search: string): void;\n    onSearchFocus(): void;\n    onSearchBlur(): void;\n    onOptionRemove(value: any): void;\n}\n\ninterface SearchProps {\n    canSearch?: boolean;\n}\n\ninterface ValueContainerProps {\n    mobile?: boolean;\n    disabled?: boolean;\n    focused?: boolean;\n    error?: boolean;\n}\n\ninterface ValueLeftProps {\n    multi?: boolean;\n    hasValue?: boolean;\n}\n\nconst Button = styled.button`\n    background: transparent;\n    border: none;\n    margin: 0;\n    font-size: 20px;\n    padding: 0;\n    line-height: 1;\n    cursor: pointer;\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst ArrowButton = styled(Button)`\n    font-size: 12px;\n    color: #ccc;\n    transform: translateY(2px);\n\n    &:hover {\n        color: #333;\n    }\n`;\n\nconst ValueContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex: 1;\n    min-height: 32px;\n    pointer-events: ${(props: ValueContainerProps) =>\n        props.mobile || props.disabled ? 'none' : 'auto'};\n    padding: 5px 10px;\n    background: #fff;\n    cursor: default;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${(props: ValueContainerProps) =>\n        props.error ? 'var(--react-slct-error-color)' : '#ccc'};\n    z-index: 0;\n    box-sizing: border-box;\n    max-width: 100%;\n    box-shadow: ${(props: ValueContainerProps) =>\n        props.focused ? 'rgba(0, 0, 0, 0.15) 0 0 2px' : 'none'};\n`;\n\nconst ValueLeft = styled.div`\n    display: flex;\n    flex: 1;\n    align-items: center;\n    flex-wrap: ${(props: ValueLeftProps) =>\n        props.multi && props.hasValue ? 'wrap' : 'nowrap'};\n    user-select: none;\n    min-width: 0;\n    box-sizing: border-box;\n    margin: ${(props: ValueLeftProps) =>\n        props.multi && props.hasValue ? '-2px -5px' : 0};\n`;\n\nconst ValueRight = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 4px;\n    box-sizing: border-box;\n`;\n\nconst Placeholder = styled(SelectLabel)`\n    color: #aaa;\n`;\n\nconst ClearButton = styled(Button)`\n    margin-right: 6px;\n`;\n\nconst ClearContainer = styled.span`\n    color: #ccc;\n\n    &:hover {\n        color: #333;\n    }\n`;\n\nconst ClearX = () => <ClearContainer>×</ClearContainer>;\n\nconst Search = styled.span`\n    min-width: 1px;\n    margin-left: -1px;\n    height: 16px;\n    opacity: ${(props: SearchProps) => (props.canSearch ? 1 : 0)};\n    user-select: text;\n    position: ${(props: SearchProps) =>\n        props.canSearch ? 'static' : 'absolute'};\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport class Value extends React.PureComponent<ValueProps> {\n    search: React.RefObject<HTMLSpanElement>;\n\n    constructor(props: ValueProps) {\n        super(props);\n\n        this.search = React.createRef();\n\n        const window = getWindow();\n\n        if (window) {\n            window.addEventListener('blur', this.blur);\n        }\n    }\n\n    public componentDidUpdate(prevProps: ValueProps): void {\n        if (prevProps.search && !this.props.search && this.search.current) {\n            this.search.current.innerText = '';\n        }\n\n        if (prevProps.focused !== this.props.focused && this.props.focused) {\n            this.focus();\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            options = [],\n            value,\n            disabled,\n            clearable,\n            open,\n            mobile,\n            multi,\n            focused,\n            error\n        } = this.props;\n        const ArrowComponent = this.props.arrowComponent;\n        const ClearComponent = this.props.clearComponent || ClearX;\n        const valueOptions = getValueOptions(options, value);\n        const showClearer = Boolean(\n            clearable && valueOptions.length && !mobile\n        );\n        const searchAtStart = !multi || valueOptions.length === 0;\n        const searchAtEnd = multi && valueOptions.length > 0;\n\n        return (\n            <ValueContainer\n                data-role=\"value\"\n                className=\"react-slct-value\"\n                disabled={disabled}\n                mobile={mobile}\n                focused={focused}\n                error={error}\n                onClick={this.onClick}\n            >\n                <ValueLeft\n                    className=\"value-left\"\n                    multi={multi}\n                    hasValue={!!valueOptions.length}\n                >\n                    {searchAtStart && this.renderSearch()}\n                    {this.renderValues(valueOptions)}\n                    {searchAtEnd && this.renderSearch()}\n                </ValueLeft>\n                <ValueRight className=\"value-right\">\n                    {showClearer && (\n                        <ClearButton\n                            type=\"button\"\n                            tabIndex={-1}\n                            className=\"clearer\"\n                            onClick={this.onClear}\n                        >\n                            <ClearComponent />\n                        </ClearButton>\n                    )}\n                    <ArrowButton type=\"button\" className=\"arrow\" tabIndex={-1}>\n                        {ArrowComponent ? (\n                            <ArrowComponent open={open} />\n                        ) : open ? (\n                            '▲'\n                        ) : (\n                            '▼'\n                        )}\n                    </ArrowButton>\n                </ValueRight>\n            </ValueContainer>\n        );\n    }\n\n    private renderSearch(): React.ReactNode {\n        const {\n            open,\n            value,\n            disabled,\n            searchable,\n            keepSearchOnBlur,\n            onSearchFocus,\n            onSearchBlur\n        } = this.props;\n        const canSearch =\n            (open && searchable) || (keepSearchOnBlur && !value && searchable);\n\n        if (disabled && !keepSearchOnBlur) {\n            return null;\n        }\n\n        return (\n            <Search\n                className=\"search\"\n                contentEditable\n                canSearch={canSearch}\n                onInput={this.onSearch}\n                onKeyDown={this.onKeyDown}\n                onFocus={onSearchFocus}\n                onBlur={onSearchBlur}\n                ref={this.search as any}\n            />\n        );\n    }\n\n    private renderValues(valueOptions: Option[]): React.ReactNode {\n        const {\n            placeholder,\n            search,\n            labelComponent,\n            valueComponentSingle,\n            valueComponentMulti,\n            multi\n        } = this.props;\n\n        if (search && !multi) {\n            return null;\n        }\n\n        if (valueOptions.length === 0 && !search) {\n            return <Placeholder>{placeholder}</Placeholder>;\n        }\n\n        const Single = valueComponentSingle || ValueComponentSingle;\n        const Multi = (valueComponentMulti || ValueComponentMulti) as any;\n\n        return valueOptions.map(option =>\n            multi ? (\n                <Multi\n                    key={toKey(option.value)}\n                    option={option}\n                    labelComponent={labelComponent}\n                    options={valueOptions}\n                    onRemove={this.props.onOptionRemove}\n                />\n            ) : (\n                <Single\n                    key={toKey(option.value)}\n                    option={option}\n                    labelComponent={labelComponent}\n                />\n            )\n        );\n    }\n\n    private focus(): void {\n        const el = this.search.current;\n\n        if (el) {\n            el.focus();\n\n            if (\n                typeof window.getSelection != 'undefined' &&\n                typeof document.createRange != 'undefined'\n            ) {\n                const range = document.createRange();\n                const sel = window.getSelection();\n\n                range.selectNodeContents(el);\n                range.collapse(false);\n\n                if (sel) {\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n            }\n        }\n    }\n\n    @bind\n    private blur(): void {\n        if (this.search.current) {\n            this.search.current.blur();\n        }\n    }\n\n    @bind\n    private onClick(): void {\n        if (!this.props.disabled) {\n            this.focus();\n            this.props.onClick();\n        }\n    }\n\n    @bind\n    private onClear(e: React.SyntheticEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n\n    @bind\n    private onSearch(e: React.KeyboardEvent<HTMLSpanElement>) {\n        if (this.props.searchable) {\n            this.props.onSearch(e.currentTarget.innerText.trim());\n        } else {\n            e.preventDefault();\n        }\n    }\n\n    @bind\n    private onKeyDown(e: React.KeyboardEvent<HTMLSpanElement>) {\n        const { searchable } = this.props;\n\n        if (e.metaKey) {\n            return;\n        }\n\n        if (\n            (!searchable && e.keyCode !== keys.TAB) ||\n            e.keyCode === keys.ENTER ||\n            e.keyCode === keys.ARROW_UP ||\n            e.keyCode === keys.ARROW_DOWN\n        ) {\n            e.preventDefault();\n        }\n    }\n}\n","// @ts-ignore\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nexport const SelectLabel = styled.span`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    user-select: none;\n    box-sizing: border-box;\n`;\n","import { Option } from '.';\n\nexport function toKey(value: any): string | number {\n    if (typeof value === 'string') {\n        return value;\n    }\n\n    if (typeof value === 'object') {\n        if (value.id) {\n            return value.id;\n        }\n\n        if (value.toJSON) {\n            return value.toJSON();\n        }\n    }\n\n    return JSON.stringify(value);\n}\n\nexport function equal(valueA: any, valueB: any) {\n    if (valueA === valueB) {\n        return true;\n    }\n\n    if (!valueA || !valueB) {\n        return false;\n    }\n\n    if (typeof valueA === 'object' && typeof valueB === 'object') {\n        if (\n            valueA.id !== undefined &&\n            valueA.id !== null &&\n            valueB.id !== undefined &&\n            valueB.id !== null &&\n            valueA.id === valueB.id\n        ) {\n            return true;\n        }\n\n        if (valueA.toJSON && valueB.toJSON) {\n            return (\n                JSON.stringify(valueA.toJSON()) ===\n                JSON.stringify(valueB.toJSON())\n            );\n        }\n\n        return JSON.stringify(valueA) === JSON.stringify(valueB);\n    }\n\n    return false;\n}\n\nexport function getValueOptions(options: Option[], value: any) {\n    return options.filter(option => {\n        if (isArray(value)) {\n            return value.some(val => equal(option.value, val));\n        } else {\n            return equal(option.value, value);\n        }\n    });\n}\n\nexport function isArray<T = any>(val: any): val is Array<T> {\n    if (Array.isArray(val)) {\n        return true;\n    }\n\n    // this is just a workaround for potential observable arrays\n    if (val && val.map) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getDocument(): Document | undefined {\n    if (typeof document !== 'undefined') {\n        return document;\n    }\n\n    return undefined;\n}\n\nexport function getWindow(): Window | undefined {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n\n    return undefined;\n}\n\nexport function getWindowInnerHeight(defaultHeight = 700): number {\n    const window = getWindow();\n\n    if (window) {\n        return window.innerHeight;\n    }\n\n    return defaultHeight;\n}\n\nexport const keys = {\n    ARROW_UP: 38,\n    ARROW_DOWN: 40,\n    ENTER: 13,\n    TAB: 9,\n    ESC: 27,\n    BACKSPACE: 8,\n    SPACE: 32\n};\n","import { bind } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { ValueComponentMultiProps } from './typings';\nimport { SelectLabel } from './label';\n\ninterface RemoveProps<T = any> {\n    value: T;\n    onClick(value: T): void;\n}\n\nclass Remove extends React.PureComponent<RemoveProps> {\n    private static StyledRemove = styled.button`\n        cursor: pointer;\n        color: #007eff;\n        border: none;\n        background: none;\n        padding: 2px 4px;\n        margin: 0;\n        margin-right: 4px;\n        line-height: 1;\n        display: inline-block;\n        border-right: 1px solid rgba(0, 126, 255, 0.24);\n        margin-left: -2px;\n        font-size: 13px;\n\n        &:hover {\n            background-color: rgba(0, 113, 230, 0.08);\n        }\n\n        &:focus {\n            outline: none;\n        }\n    `;\n\n    public render(): React.ReactNode {\n        const { StyledRemove } = Remove;\n\n        return (\n            <StyledRemove\n                className=\"remove\"\n                type=\"button\"\n                tabIndex={-1}\n                onClick={this.onClick}\n            >\n                ×\n            </StyledRemove>\n        );\n    }\n\n    @bind\n    private onClick(e: React.SyntheticEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClick(this.props.value);\n    }\n}\n\nexport class ValueComponentMulti<T = any> extends React.PureComponent<\n    ValueComponentMultiProps<T>\n> {\n    private static TagContainer = styled.div`\n        display: flex;\n        padding: 0px 3px;\n        background-color: rgba(0, 126, 255, 0.08);\n        border-radius: 2px;\n        border: 1px solid rgba(0, 126, 255, 0.24);\n        color: #007eff;\n        font-size: 0.9em;\n        line-height: 1.4;\n        margin: 2px 3px;\n        align-items: center;\n\n        &:last-of-type {\n            margin-right: 5px;\n        }\n    `;\n\n    public render(): React.ReactNode {\n        const { TagContainer } = ValueComponentMulti;\n        const { option, labelComponent, onRemove } = this.props;\n        const Label = (labelComponent || SelectLabel) as any;\n        const className = ['value-multi', this.props.className]\n            .filter(c => Boolean(c))\n            .join(' ');\n\n        return (\n            <TagContainer className={className} {...option}>\n                <Remove value={option.value} onClick={onRemove}>\n                    ×\n                </Remove>\n                <Label type=\"value-multi\" active {...option}>\n                    {option.label}\n                </Label>\n            </TagContainer>\n        );\n    }\n}\n","import * as React from 'react';\nimport { SelectLabel } from './label';\nimport { ValueComponentSingleProps } from './typings';\n\nexport const ValueComponentSingle = React.memo(\n    (props: ValueComponentSingleProps) => {\n        const Label = props.labelComponent || (SelectLabel as any);\n        const className = ['value-single', props.className]\n            .filter(c => Boolean(c))\n            .join(' ');\n\n        return (\n            <Label\n                active\n                type=\"value-single\"\n                className={className}\n                {...props.option}\n            >\n                {props.option.label}\n            </Label>\n        );\n    }\n);\n","import * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { FixedSizeList } from 'react-window';\nimport styled from 'styled-components';\nimport { SelectLabel } from './label';\nimport { MenuContainer } from './menu-container';\nimport { MenuRow } from './menu-row';\nimport { OptionComponent } from './option';\nimport { MenuComponentProps, Option, Rect } from './typings';\nimport { equal, isArray } from './utils';\n\nconst EmptyOptionItem = styled(OptionComponent.OptionItem)`\n    height: 100%;\n    border: 1px solid #ccc;\n`;\n\nconst Empty = (props: { emptyText?: string }) => (\n    <EmptyOptionItem>\n        <SelectLabel>\n            <i>{props.emptyText || 'No results'}</i>\n        </SelectLabel>\n    </EmptyOptionItem>\n);\n\nexport function Menu(props: MenuComponentProps) {\n    const {\n        options = [],\n        rowHeight = 32,\n        selectedIndex,\n        open,\n        error,\n        menuWidth,\n        menuHeight\n    } = props;\n    const [rect, setRect] = useState<Rect>();\n    const list = useRef<FixedSizeList>(null);\n    const width = menuWidth || (rect && rect.width !== 'auto' ? rect.width : 0);\n    const height = Math.min(\n        Math.max(options.length * rowHeight, rowHeight) + 2,\n        menuHeight || 185\n    );\n\n    useEffect(() => {\n        if (\n            open &&\n            list.current &&\n            selectedIndex !== undefined &&\n            selectedIndex !== -1\n        ) {\n            list.current.scrollToItem(selectedIndex, 'center');\n        }\n    }, [open]);\n    const itemData = React.useMemo(() => {\n        return {\n            ...props,\n            onSelect: (value: any, option: Option) => {\n                if (isArray(props.value)) {\n                    const found = props.value.some(item => equal(item, value));\n                    const values = found\n                        ? props.value.filter(item => !equal(item, value))\n                        : Array.from(new Set([...props.value, value]));\n\n                    props.onSelect(values, option);\n                } else {\n                    props.onSelect(value, option);\n                }\n            }\n        };\n    }, [\n        options.length,\n        props.search,\n        props.rowHeight,\n        props.selectedIndex,\n        props.labelComponent,\n        props.optionComponent,\n        props.value\n    ]);\n\n    function renderList(width: number, height: number, rowHeight: number) {\n        const MenuContent = props.menuComponent;\n        const itemCount = options.length;\n\n        if (MenuContent) {\n            return <MenuContent {...props} />;\n        }\n\n        if (itemCount === 0) {\n            return <Empty emptyText={props.emptyText} />;\n        }\n\n        return (\n            <FixedSizeList\n                className=\"react-slct-menu-list\"\n                ref={list}\n                width={width}\n                height={height}\n                itemSize={rowHeight}\n                itemCount={itemCount}\n                itemData={itemData}\n            >\n                {MenuRow}\n            </FixedSizeList>\n        );\n    }\n\n    return open ? (\n        <MenuContainer\n            error={error}\n            menuWidth={width}\n            menuHeight={height}\n            onRect={rect => setRect(rect)}\n        >\n            {renderList(width, height, rowHeight)}\n        </MenuContainer>\n    ) : null;\n}\n","import { bind, debounce } from 'lodash-decorators';\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport { MenuContainerProps, Rect } from './typings';\nimport { getDocument, getWindow, getWindowInnerHeight } from './utils';\n\nexport interface MenuContainerState {\n    menuOverlay?: Rect;\n    menuWrapper?: Rect;\n}\n\ninterface MenuWrapperProps {\n    rect?: Rect;\n    menuHeight?: MenuContainerProps['menuHeight'];\n    error?: boolean;\n}\n\nfunction menuPosition({\n    rect,\n    menuHeight = 186\n}: MenuWrapperProps): 'top' | 'bottom' {\n    if (!rect) {\n        return 'bottom';\n    }\n\n    const { height } = rect;\n\n    if (height === 'auto' || menuHeight === 'auto') {\n        return 'bottom';\n    }\n\n    if (rect.top + height + menuHeight <= getWindowInnerHeight()) {\n        return 'bottom';\n    }\n\n    return 'top';\n}\n\nfunction getContainerTop(props: MenuWrapperProps): number {\n    const { rect } = props;\n\n    if (!rect) {\n        return 0;\n    }\n\n    const menuHeight = (props.menuHeight !== 'auto' && props.menuHeight) || 186;\n    const height = rect.height === 'auto' ? 32 : rect.height;\n\n    switch (menuPosition(props)) {\n        case 'top':\n            return rect.top - menuHeight + 1;\n        case 'bottom':\n            return rect.top + height - 1;\n    }\n}\n\nconst MenuOverlay = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    pointer-events: none;\n`;\n\nconst MenuWrapper = styled.div`\n    position: fixed;\n    z-index: 9999;\n    background: #fff;\n    box-sizing: border-box;\n    box-shadow: ${(props: MenuWrapperProps) =>\n        menuPosition(props) === 'bottom'\n            ? '0 2px 5px rgba(0, 0, 0, 0.1)'\n            : '0 -2px 5px rgba(0, 0, 0, 0.1)'};\n\n    .react-slct-menu-list {\n        box-sizing: border-box;\n        border-width: 1px;\n        border-style: solid;\n        border-color: ${(props: MenuWrapperProps) =>\n            props.error ? 'var(--react-slct-error-color)' : '#ccc'};\n        background-color: #fff;\n\n        &:focus {\n            outline: none;\n        }\n    }\n`;\n\nexport class MenuContainer extends React.PureComponent<\n    MenuContainerProps,\n    MenuContainerState\n> {\n    private menuOverlay?: HTMLDivElement | null;\n    private menuWrapper?: HTMLDivElement | null;\n\n    private get menuOverlayRect(): Rect | undefined {\n        if (this.menuOverlay) {\n            const clientRect = this.menuOverlay.getBoundingClientRect();\n\n            return {\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            };\n        }\n\n        return undefined;\n    }\n\n    private get menuWrapperRect(): Rect | undefined {\n        if (this.menuWrapper) {\n            const clientRect = this.menuWrapper.getBoundingClientRect();\n\n            return {\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            };\n        }\n\n        return undefined;\n    }\n\n    private get style(): Rect {\n        const { window } = this;\n        const { menuLeft, menuTop, menuWidth } = this.props;\n        const { menuOverlay, menuWrapper } = this.state;\n        const menuHeight =\n            this.props.menuHeight ||\n            (menuWrapper ? menuWrapper.height : 'auto');\n        let width = menuWidth || (menuOverlay ? menuOverlay.width : 'auto');\n        const height =\n            menuHeight || (menuWrapper ? menuWrapper.height : 'auto');\n        const top =\n            menuTop !== undefined\n                ? menuTop\n                : getContainerTop({\n                      rect: menuOverlay,\n                      menuHeight: height\n                  });\n        let left =\n            menuLeft !== undefined\n                ? menuLeft\n                : menuOverlay\n                ? menuOverlay.left\n                : 0;\n\n        if (window) {\n            const numWidth = Number(width);\n\n            if (numWidth > window.innerWidth) {\n                width = window.innerWidth - 20;\n            }\n\n            if (left + numWidth > window.innerWidth) {\n                left = Math.max(10, window.innerWidth - numWidth - 20);\n            }\n        }\n\n        return { top, left, width, height };\n    }\n\n    private get window() {\n        return getWindow();\n    }\n\n    private get document() {\n        return getDocument();\n    }\n\n    constructor(props: MenuContainerProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    public componentDidMount(): void {\n        this.addListener();\n    }\n\n    public componentDidUpdate(_: any, prevState: MenuContainerState): void {\n        const { menuOverlay, menuWrapper } = this.state;\n\n        if (this.props.onRect) {\n            if (\n                prevState.menuOverlay !== menuOverlay ||\n                prevState.menuWrapper !== menuWrapper\n            ) {\n                this.props.onRect(menuOverlay, menuWrapper);\n            }\n        }\n    }\n\n    public componentWillUnmount(): void {\n        this.removeListener();\n    }\n\n    public render(): React.ReactNode {\n        const { error, onClick, children } = this.props;\n        const className = ['react-slct-menu', this.props.className]\n            .filter(c => c)\n            .join(' ');\n\n        return (\n            <MenuOverlay ref={this.onMenuOverlay}>\n                {this.document\n                    ? createPortal(\n                          <MenuWrapper\n                              data-role=\"menu\"\n                              className={className}\n                              error={error}\n                              ref={this.onMenuWrapper}\n                              onClick={onClick}\n                              rect={this.state.menuOverlay}\n                              style={this.style}\n                          >\n                              {children}\n                          </MenuWrapper>,\n                          this.document.body\n                      )\n                    : null}\n            </MenuOverlay>\n        );\n    }\n\n    private addListener(): void {\n        if (this.window) {\n            this.window.addEventListener('scroll', this.onViewportChange, true);\n            this.window.addEventListener('resize', this.onViewportChange, true);\n        }\n    }\n\n    private removeListener(): void {\n        if (this.window) {\n            this.window.removeEventListener(\n                'resize',\n                this.onViewportChange,\n                true\n            );\n            this.window.removeEventListener(\n                'scroll',\n                this.onViewportChange,\n                true\n            );\n        }\n    }\n\n    private allowRectChange(e): boolean {\n        if (e.target.closest && !e.target.closest('.react-slct-menu')) {\n            return false;\n        }\n\n        return true;\n    }\n\n    @bind\n    private onViewportChange(e): void {\n        if (this.allowRectChange(e)) {\n            this.setState({\n                menuOverlay: this.menuOverlayRect,\n                menuWrapper: this.menuWrapperRect\n            });\n        }\n    }\n\n    @bind\n    private onMenuOverlay(el: HTMLDivElement | null): void {\n        this.menuOverlay = el;\n\n        if (this.menuOverlay) {\n            this.setState({\n                menuOverlay: this.menuOverlayRect\n            });\n        }\n    }\n\n    @bind\n    @debounce(16)\n    private onMenuWrapper(el: HTMLDivElement | null): void {\n        if (el && this.props.onRef) {\n            this.props.onRef(el);\n        }\n\n        this.menuWrapper = el;\n\n        if (this.menuWrapper) {\n            this.setState({\n                menuWrapper: this.menuWrapperRect\n            });\n        }\n    }\n}\n","import * as React from 'react';\nimport { CSSProperties, memo } from 'react';\nimport { areEqual } from 'react-window';\nimport { OptionComponent } from './option';\nimport { MenuComponentProps } from './typings';\nimport { equal, isArray } from './utils';\n\ninterface MenuRowProps {\n    index: number;\n    style: CSSProperties;\n    data: MenuComponentProps;\n}\n\nexport const MenuRow = memo(({ index, style, data }: MenuRowProps) => {\n    const {\n        options = [],\n        labelComponent,\n        selectedIndex,\n        optionComponent,\n        rowHeight,\n        search,\n        onSelect\n    } = data;\n    const option = options[index];\n    const currentValue = isArray(data.value) ? data.value : [data.value];\n    const Component = optionComponent || OptionComponent;\n\n    return (\n        <div style={style}>\n            <Component\n                option={option}\n                labelComponent={labelComponent}\n                height={rowHeight}\n                active={currentValue.some(val => equal(val, option.value))}\n                selected={selectedIndex === index}\n                search={search}\n                onSelect={onSelect}\n            />\n        </div>\n    );\n}, areEqual);\n","import { bind } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { SelectLabel } from './label';\nimport { OptionComponentProps } from './typings';\n\ninterface OptionItemProps {\n    active?: OptionComponentProps['active'];\n    selected?: OptionComponentProps['selected'];\n    height?: OptionComponentProps['height'];\n}\n\nexport class OptionComponent extends React.PureComponent<OptionComponentProps> {\n    public static OptionItem = styled.div`\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        flex: 1;\n        height: ${(props: OptionItemProps) => props.height || 32}px;\n        padding: 0 10px;\n        min-width: 0;\n        cursor: pointer;\n        box-sizing: border-box;\n        background-color: ${(props: OptionItemProps) =>\n            props.active ? '#ddd' : props.selected ? '#eee' : '#fff'};\n\n        &:hover {\n            background-color: ${(props: OptionItemProps) =>\n                props.active ? '#ddd' : '#eee'};\n        }\n    `;\n\n    public render(): React.ReactNode {\n        const { OptionItem } = OptionComponent;\n        const { active, selected, labelComponent, option, height } = this.props;\n        const Label = (labelComponent ? labelComponent : SelectLabel) as any;\n        const className = [\n            'option',\n            this.props.className,\n            selected ? 'selected' : null,\n            active ? 'active' : null\n        ].filter(v => Boolean(v));\n\n        return (\n            <OptionItem\n                className={className.join(' ')}\n                selected={selected}\n                active={active}\n                height={height}\n                onClick={this.onClick}\n            >\n                <Label type=\"option\" active={active} {...option}>\n                    {option.label}\n                </Label>\n            </OptionItem>\n        );\n    }\n\n    @bind\n    private onClick(): void {\n        this.props.onSelect(this.props.option.value, this.props.option);\n    }\n}\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\n\nconst id = 'react-slct-style';\n\nfunction create() {\n    const ReactSlctStyle = createGlobalStyle`\n        .react-slct, .react-slct-menu {\n            --react-slct-error-color: #ff5c5c; \n        }\n    `;\n    const reactSlctDiv = document.createElement('div');\n\n    reactSlctDiv.id = id;\n    document.body.appendChild(reactSlctDiv);\n\n    render(<ReactSlctStyle />, reactSlctDiv);\n}\n\nif (!document.getElementById(id)) {\n    create();\n}\n"]}