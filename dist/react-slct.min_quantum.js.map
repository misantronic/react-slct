{"version":3,"sources":["src/menu-container.tsx"],"names":["React","$fsx","r","react_dom_1","styled_components_1","config_1","utils_1","getMenuPosition","rect","menuHeight","height","top","getWindowInnerHeight","MenuOverlay","default","div","MenuWrapper","props","error","ReactSlctColors","border","exports","MenuContainer","onClick","children","className","filter","c","join","document","getDocument","window","getWindow","menuOverlay","useRef","menuWrapper","menuOverlayRect","setMenuOverlayRect","useState","menuWrapperRect","setMenuWrapperRect","style","useMemo","menuLeft","menuTop","menuWidth","width","scrollY","_a","menuPosition","getContainerTop","left","numWidth","Number","innerWidth","Math","max","visibility","undefined","calcMenuOverlay","current","clientRect","getBoundingClientRect","round","calcMenuWrapper","useEffect","onRef","call","onRect","onViewportChange","e","target","closest","allowRectChange","addEventListener","removeEventListener","onStyle","createElement","ref","createPortal","data-role","body"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport { ReactSlctColors } from './config';\nimport { MenuContainerProps, Rect } from './typings';\nimport { getDocument, getWindow, getWindowInnerHeight } from './utils';\n\ninterface MenuWrapperProps {\n    rect?: Rect;\n    menuHeight?: MenuContainerProps['menuHeight'];\n    menuPosition?: MenuContainerProps['menuPosition'];\n    error?: boolean;\n}\n\nfunction getMenuPosition({\n    rect,\n    menuHeight = 186\n}: MenuWrapperProps): 'top' | 'bottom' {\n    if (!rect) {\n        return 'bottom';\n    }\n\n    const { height } = rect;\n\n    if (height === 'auto' || menuHeight === 'auto') {\n        return 'bottom';\n    }\n\n    if (\n        rect.top + height + menuHeight <= getWindowInnerHeight() ||\n        rect.top < menuHeight / 2\n    ) {\n        return 'bottom';\n    }\n\n    return 'top';\n}\n\nfunction getContainerTop(props: MenuWrapperProps): number {\n    const { rect } = props;\n    const window = getWindow();\n\n    if (!rect) {\n        return 0;\n    }\n\n    const menuHeight = (props.menuHeight !== 'auto' && props.menuHeight) || 186;\n    const height = rect.height === 'auto' ? 32 : rect.height;\n    const scrollY = window?.scrollY ?? 0;\n    const menuPosition = props.menuPosition || getMenuPosition(props);\n\n    switch (menuPosition) {\n        case 'top':\n            return rect.top - menuHeight + 1 + scrollY;\n        case 'bottom':\n            return rect.top + height - 1 + scrollY;\n    }\n}\n\nconst MenuOverlay = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    pointer-events: none;\n`;\n\n// position this container fixed is not working well on mobile-devices\n// @see https://medium.com/@im_rahul/safari-and-position-fixed-978122be5f29\nconst MenuWrapper = styled.div<MenuWrapperProps>`\n    position: absolute;\n    z-index: 9999;\n    background: #fff;\n    box-sizing: border-box;\n    box-shadow: ${(props) =>\n        getMenuPosition(props) === 'bottom'\n            ? '0 2px 5px rgba(0, 0, 0, 0.1)'\n            : '0 -2px 5px rgba(0, 0, 0, 0.1)'};\n\n    .react-slct-menu-list {\n        box-sizing: border-box;\n        border-width: 1px;\n        border-style: solid;\n        border-color: ${(props) =>\n            props.error ? ReactSlctColors.error : ReactSlctColors.border};\n        background-color: #fff;\n\n        &:focus {\n            outline: none;\n        }\n    }\n`;\n\nexport function MenuContainer(props: MenuContainerProps) {\n    const { error, onClick, children } = props;\n    const className = ['react-slct-menu', props.className]\n        .filter((c) => c)\n        .join(' ');\n    const document = getDocument();\n    const window = getWindow();\n    const menuOverlay = React.useRef<HTMLDivElement | null>(null);\n    const menuWrapper = React.useRef<HTMLDivElement | null>(null);\n    const [menuOverlayRect, setMenuOverlayRect] = React.useState<Rect>();\n    const [menuWrapperRect, setMenuWrapperRect] = React.useState<Rect>();\n\n    const style = React.useMemo<Rect>(() => {\n        const { menuLeft, menuTop, menuWidth, menuHeight } = props;\n        let width =\n            menuWidth && menuWidth !== 'auto'\n                ? menuWidth\n                : menuOverlayRect?.width || 'auto';\n        let height =\n            menuHeight && menuHeight !== 'auto'\n                ? menuHeight\n                : menuWrapperRect?.height || 'auto';\n        let top =\n            menuTop ??\n            getContainerTop({\n                rect: menuOverlayRect,\n                menuHeight: height,\n                menuPosition: props.menuPosition\n            });\n        let left = menuLeft ?? menuOverlayRect?.left ?? 0;\n\n        if (window) {\n            const numWidth = Number(width);\n\n            if (numWidth > window.innerWidth) {\n                width = window.innerWidth - 20;\n            }\n\n            if (left + numWidth > window.innerWidth) {\n                left = Math.max(10, window.innerWidth - numWidth - 20);\n            }\n        }\n\n        if (top < 0) {\n            if (height !== 'auto') {\n                height += top;\n                top = 0;\n            }\n        }\n\n        const visibility = top === 0 && left === 0 ? 'hidden' : undefined;\n\n        return { top, left, width, height, visibility };\n    }, [\n        props.menuLeft,\n        props.menuTop,\n        props.menuWidth,\n        props.menuHeight,\n        menuOverlayRect,\n        menuWrapperRect\n    ]);\n\n    function calcMenuOverlay() {\n        if (menuOverlay.current) {\n            const clientRect = menuOverlay.current.getBoundingClientRect();\n\n            setMenuOverlayRect({\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            });\n        }\n    }\n\n    function calcMenuWrapper() {\n        if (menuWrapper.current) {\n            const clientRect = menuWrapper.current.getBoundingClientRect();\n\n            setMenuWrapperRect({\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            });\n        }\n    }\n\n    React.useEffect(calcMenuOverlay, [menuOverlay.current]);\n\n    React.useEffect(() => {\n        calcMenuWrapper();\n\n        if (menuWrapper.current) {\n            props.onRef?.(menuWrapper.current);\n        }\n    }, [menuWrapper.current]);\n\n    React.useEffect(() => {\n        props.onRect?.(menuOverlayRect, menuWrapperRect);\n    }, [menuOverlayRect, menuWrapperRect]);\n\n    React.useEffect(() => {\n        window?.addEventListener('scroll', onViewportChange, true);\n        window?.addEventListener('resize', onViewportChange, true);\n\n        function allowRectChange(e) {\n            if (e.target.closest && !e.target.closest('.react-slct-menu')) {\n                return false;\n            }\n\n            return true;\n        }\n\n        function onViewportChange(e: Event) {\n            if (allowRectChange(e)) {\n                calcMenuOverlay();\n                calcMenuWrapper();\n            }\n        }\n\n        return () => {\n            window?.removeEventListener('resize', onViewportChange, true);\n            window?.removeEventListener('scroll', onViewportChange, true);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (style) {\n            props.onStyle?.(style);\n        }\n    }, [style]);\n\n    return (\n        <MenuOverlay ref={menuOverlay}>\n            {document && style\n                ? createPortal(\n                      <MenuWrapper\n                          data-role=\"menu\"\n                          className={className}\n                          error={error}\n                          ref={menuWrapper}\n                          onClick={onClick}\n                          rect={menuOverlayRect}\n                          style={style}\n                      >\n                          {children}\n                      </MenuWrapper>,\n                      document.body\n                  )\n                : null}\n        </MenuOverlay>\n    );\n}\n"]}