{"version":3,"sources":["src/index.tsx","src/menu.tsx","src/menu-container.tsx"],"names":["React","$fsx","r","styled_components_1","menu_1","Object","defineProperty","exports","enumerable","get","Menu","menu_container_1","typings_1","LabelComponentProps","MenuComponentProps","Option","SelectProps","utils_1","keys","value_1","option_1","OptionComponent","typings_2","OptionComponentProps","ValueComponentMultiProps","ValueComponentSingleProps","SelectStaticControl","value_component_multi_1","ValueComponentMulti","value_component_single_1","ValueComponentSingle","tslib_1","__exportStar","Container","default","div","props","disabled","NativeSelect","select","native","css","Select","forwardRef","ref","useRef","open","setOpen","useState","blindText","setBlindText","selectedIndex","setSelectedIndex","undefined","search","setSearch","focused","setFocused","blindTextTimeout","nativeSelect","className","creatable","clearable","placeholder","value","error","menuComponent","labelComponent","optionComponent","valueComponentSingle","valueComponentMulti","arrowComponent","clearComponent","hideSelectedOptions","equalCompareProp","multi","emptyText","rowHeight","menuWidth","menuHeight","menuPosition","keepSearchOnBlur","required","creatableText","searchable","document","getDocument","options","newOptions","showCreate","some","option","label","filter","replaceUmlauts","toLowerCase","includes","getOptions","toggleMenu","openMenu","closeMenu","findIndex","equal","_a","onOpen","call","removeDocumentListener","addEventListener","onDocumentClick","callback","onClose","createOption","cb","onCreate","removeEventListener","cleanBlindText","current","setTimeout","findOptionIndex","val","index","String","onChangeNativeSelect","e","currentTarget","onChange","onClear","values","Array","from","selectedOptions","map","htmlOption","onOptionSelect","optionWasCreated","selectOnNative","isArray","createValue","find","optionIsCreatable","Boolean","useEffect","newSelectedIndex","startsWith","handleBlindTextUpdate","control","close","getValue","Function","useCallback","target","closest","contains","valueOptions","getValueOptions","children","showPlaceholder","length","MenuContainer","onToggle","onRef","renderChildren","classNames","c","createElement","join","data-role","onKeyUp","keyCode","ARROW_UP","ARROW_DOWN","ENTER","newValue","ESC","onKeyDown","TAB","BACKSPACE","clearTimeout","slice","SPACE","key","fromCodePoint","test","handleBlindText","dataRole","propDisabled","multiple","tabIndex","i","toKey","renderNativeSelect","Value","mobile","valueIconComponent","onClick","onSearch","onSearchFocus","onSearchBlur","onOptionRemove","onSelect","react_1","react_window_1","config_1","label_1","menu_row_1","EmptyOptionItem","OptionItem","ReactSlctColors","border","Empty","SelectLabel","currentValue","useMemo","rect","setRect","style","setStyle","list","width","assumedHeight","Math","min","max","actualHeight","height","scrollToItem","itemData","assign","item","Set","onRect","onStyle","MenuContent","itemCount","FixedSizeList","itemSize","MenuRow","renderList","react_dom_1","getMenuPosition","top","getWindowInnerHeight","MenuOverlay","MenuWrapper","window","getWindow","menuOverlay","menuWrapper","menuOverlayRect","setMenuOverlayRect","menuWrapperRect","setMenuWrapperRect","menuLeft","menuTop","scrollY","getContainerTop","left","numWidth","Number","innerWidth","calcMenuOverlay","clientRect","getBoundingClientRect","round","calcMenuWrapper","onViewportChange","allowRectChange","createPortal","body"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Menu } from './menu';\nimport { MenuContainer } from './menu-container';\nimport {\n    LabelComponentProps,\n    MenuComponentProps,\n    Option,\n    SelectProps\n} from './typings';\nimport {\n    equal,\n    getDocument,\n    getValueOptions,\n    isArray,\n    keys,\n    replaceUmlauts,\n    toKey\n} from './utils';\nimport { Value } from './value';\nexport { OptionComponent } from './option';\nexport {\n    OptionComponentProps,\n    ValueComponentMultiProps,\n    ValueComponentSingleProps,\n    SelectStaticControl\n} from './typings';\nexport { ValueComponentMulti } from './value-component-multi';\nexport { ValueComponentSingle } from './value-component-single';\nexport * from './config';\nexport {\n    SelectProps,\n    Menu,\n    MenuComponentProps,\n    LabelComponentProps,\n    Option,\n    keys\n};\n\nconst Container = styled.div`\n    display: flex;\n    position: relative;\n    cursor: default;\n    width: 100%;\n    box-sizing: border-box;\n    pointer-events: ${(props: { disabled?: boolean }) =>\n        props.disabled ? 'none' : 'auto'};\n    opacity: ${(props: { disabled?: boolean }) => (props.disabled ? 0.75 : 1)};\n    user-select: none;\n`;\n\nconst NativeSelect = styled.select`\n    display: block;\n    opacity: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    ${(props: { native?: boolean }) =>\n        props.native\n            ? css`\n                  z-index: 1;\n              `\n            : css`\n                  pointer-events: none;\n                  z-index: auto;\n              `};\n`;\n\nfunction SelectImpl<T = any>(\n    props: SelectProps<T>,\n    ref: React.Ref<HTMLDivElement> | null\n): JSX.Element | null {\n    if (!ref) {\n        ref = React.useRef<HTMLDivElement>(null);\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [blindText, setBlindText] = React.useState('');\n    const [selectedIndex, setSelectedIndex] = React.useState<\n        number | undefined\n    >(undefined);\n    const [search, setSearch] = React.useState<string | undefined>(undefined);\n    const [focused, setFocused] = React.useState(false);\n    const blindTextTimeout = React.useRef(0);\n    const nativeSelect = React.useRef<HTMLSelectElement>(null);\n\n    const {\n        className,\n        creatable,\n        clearable,\n        placeholder,\n        value,\n        disabled,\n        error,\n        menuComponent,\n        labelComponent,\n        optionComponent,\n        valueComponentSingle,\n        valueComponentMulti,\n        arrowComponent,\n        clearComponent,\n        hideSelectedOptions,\n        equalCompareProp,\n        multi,\n        native,\n        emptyText,\n        rowHeight,\n        menuWidth,\n        menuHeight,\n        menuPosition,\n        keepSearchOnBlur,\n        required,\n        creatableText\n    } = props;\n    const searchable = props.searchable || creatable;\n    const document = getDocument();\n    const options = getOptions();\n\n    React.useEffect(() => {\n        if (blindText) {\n            handleBlindTextUpdate();\n        }\n    }, [blindText]);\n\n    React.useEffect(() => {\n        if (props.control) {\n            const ref = { close: () => closeMenu(getValue()), open: openMenu };\n\n            if (props.control instanceof Function) {\n                props.control(ref);\n            } else if (props.control instanceof Object) {\n                props.control.current = ref;\n            }\n        }\n    }, [props.control]);\n\n    function getOptions(): Option<T>[] {\n        let newOptions = props.options || [];\n        const showCreate =\n            creatable &&\n            !newOptions.some((option) => {\n                const { value, label } = option;\n\n                return (\n                    (typeof value === 'string' && value === search) ||\n                    label === search\n                );\n            });\n\n        if (search) {\n            newOptions = newOptions.filter((option) =>\n                replaceUmlauts(option.label)\n                    .toLowerCase()\n                    .includes(replaceUmlauts(search).toLowerCase())\n            );\n        }\n\n        if (showCreate && search) {\n            const label = creatableText\n                ? typeof creatableText === 'string'\n                    ? creatableText\n                    : creatableText(search)\n                : `Create \"${search}\"`;\n\n            newOptions = [\n                {\n                    label,\n                    value: search as any,\n                    creatable: true\n                },\n                ...newOptions\n            ];\n        }\n\n        return newOptions;\n    }\n\n    function toggleMenu(): void {\n        const newOpen = !open;\n\n        if (newOpen) {\n            openMenu();\n        } else {\n            closeMenu(props.value);\n        }\n    }\n\n    function openMenu(): void {\n        const selectedIndex = props.hideSelectedOptions\n            ? undefined\n            : options.findIndex((option) =>\n                  equal(option.value, props.value, props.equalCompareProp)\n              );\n        const keepSearchOnBlur = props.keepSearchOnBlur && !props.value;\n\n        setOpen(true);\n        setSearch(keepSearchOnBlur ? search : undefined);\n        setSelectedIndex(selectedIndex);\n        props.onOpen?.();\n\n        addDocumentListener();\n    }\n\n    function closeMenu(value: any | any[], callback = () => {}): void {\n        const keepSearchOnBlur = props.keepSearchOnBlur && !value;\n\n        removeDocumentListener();\n        setOpen(false);\n        setSearch(keepSearchOnBlur ? search : undefined);\n        setSelectedIndex(undefined);\n        props.onClose?.();\n\n        callback();\n    }\n\n    function createOption(value: string, cb?: () => void): void {\n        if (props.onCreate) {\n            closeMenu(value, () => {\n                props.onCreate?.(value);\n                cb?.();\n            });\n        }\n    }\n\n    function addDocumentListener(): void {\n        removeDocumentListener();\n\n        document?.addEventListener('click', onDocumentClick);\n    }\n\n    function removeDocumentListener(): void {\n        document?.removeEventListener('click', onDocumentClick);\n    }\n\n    function cleanBlindText(): void {\n        blindTextTimeout.current = setTimeout(() => setBlindText(''), 700);\n    }\n\n    function findOptionIndex(val: any) {\n        let index = options.findIndex((option) => option.value === val);\n\n        if (index === -1) {\n            if (typeof val === 'object') {\n                index = options.findIndex((option) =>\n                    equal(option.value, val, props.equalCompareProp)\n                );\n            }\n\n            if (index === -1) {\n                return '';\n            }\n        }\n\n        return String(index);\n    }\n\n    function onChangeNativeSelect(e: React.SyntheticEvent<HTMLSelectElement>) {\n        const { currentTarget } = e;\n\n        if (props.onChange) {\n            if (currentTarget.value === '') {\n                onClear();\n            } else {\n                const values = Array.from(currentTarget.selectedOptions).map(\n                    (htmlOption) => options[htmlOption.index - 1].value\n                );\n\n                if (multi) {\n                    props.onChange(values as any);\n                } else {\n                    props.onChange(values[0] as any);\n                }\n            }\n        }\n    }\n\n    function onSearchFocus() {\n        if (!open && !focused && !native) {\n            openMenu();\n        }\n\n        setFocused(true);\n    }\n\n    function onSearchBlur() {\n        setFocused(false);\n    }\n\n    function onOptionSelect(value: any | any[], option?: Option<T>): void {\n        const { current } = nativeSelect;\n        let optionWasCreated = false;\n\n        const selectOnNative = () => {\n            if (current) {\n                current.value =\n                    isArray(value) && multi\n                        ? (value.map(findOptionIndex) as any)\n                        : findOptionIndex(value);\n            }\n\n            setFocused(true);\n            closeMenu(value, () => props.onChange?.(value, option));\n        };\n\n        if (creatable) {\n            const createValue = (val: any) => {\n                const option = options.find(\n                    (option) =>\n                        optionIsCreatable(option) && option.value === val\n                );\n\n                if (option) {\n                    optionWasCreated = true;\n                    createOption(option.value as any, selectOnNative);\n                }\n            };\n\n            if (isArray(value) && multi) {\n                value.map(createValue);\n            } else {\n                createValue(value);\n            }\n        }\n\n        if (!optionWasCreated) {\n            selectOnNative();\n        }\n    }\n\n    function onOptionRemove(value: any): void {\n        if (isArray(props.value) && props.multi) {\n            const values = props.value.filter(\n                (val) => !equal(val, value, props.equalCompareProp)\n            );\n\n            onOptionSelect(values);\n        }\n    }\n\n    function onClear() {\n        onOptionSelect(props.multi ? [] : undefined);\n    }\n\n    function onSearch(search: string): void {\n        setSearch(search);\n        setOpen(true);\n\n        if (options.length === 1 || (props.creatable && search)) {\n            setSelectedIndex(0);\n        } else {\n            setSelectedIndex(undefined);\n        }\n\n        props.onSearch?.(search);\n    }\n\n    function optionIsCreatable(option: Option<T>): boolean {\n        return (\n            creatable && option.creatable && Boolean(props.onCreate && search)\n        );\n    }\n\n    const onDocumentClick = React.useCallback((e) => {\n        const { target } = e;\n\n        if (target.closest('.react-slct-menu')) {\n            return;\n        }\n\n        if (typeof ref === 'object' && !ref?.current?.contains(target)) {\n            closeMenu(props.value);\n        }\n    }, []);\n\n    function onKeyDown({ keyCode }: React.KeyboardEvent): void {\n        switch (keyCode) {\n            case keys.TAB:\n                if (open) {\n                    closeMenu(props.value);\n                }\n                break;\n        }\n\n        if (!searchable && !creatable) {\n            handleBlindText(keyCode);\n        }\n    }\n\n    function onKeyUp({ keyCode }: React.KeyboardEvent): void {\n        let newSelectedIndex = selectedIndex;\n\n        switch (keyCode) {\n            case keys.ARROW_UP:\n                if (open) {\n                    if (newSelectedIndex !== undefined) {\n                        newSelectedIndex = newSelectedIndex - 1;\n\n                        if (newSelectedIndex < 0) {\n                            newSelectedIndex = options.length - 1;\n                        }\n                    }\n\n                    setSelectedIndex(newSelectedIndex);\n                } else {\n                    openMenu();\n                }\n                break;\n            case keys.ARROW_DOWN:\n                if (open) {\n                    if (\n                        newSelectedIndex === undefined ||\n                        newSelectedIndex === options.length - 1\n                    ) {\n                        newSelectedIndex = 0;\n                    } else {\n                        newSelectedIndex = newSelectedIndex + 1;\n                    }\n\n                    setSelectedIndex(newSelectedIndex);\n                } else {\n                    openMenu();\n                }\n                break;\n            case keys.ENTER:\n                if (selectedIndex === 0 && optionIsCreatable(options[0])) {\n                    createOption(search!);\n                } else if (\n                    newSelectedIndex !== undefined &&\n                    options[newSelectedIndex]\n                ) {\n                    const option = options[newSelectedIndex];\n                    const newValue = option.value;\n\n                    onOptionSelect(\n                        isArray(value) && multi\n                            ? [...value, newValue]\n                            : newValue,\n                        option\n                    );\n                }\n                break;\n            case keys.ESC:\n                if (open) {\n                    closeMenu(value);\n                }\n                break;\n        }\n    }\n\n    function handleBlindText(keyCode: number): void {\n        if (keyCode === keys.BACKSPACE && blindText.length) {\n            clearTimeout(blindTextTimeout.current);\n\n            setBlindText(blindText.slice(0, blindText.length - 1));\n            cleanBlindText();\n        } else if (keyCode === keys.SPACE) {\n            clearTimeout(blindTextTimeout.current);\n\n            setBlindText(blindText + ' ');\n            cleanBlindText();\n        } else {\n            const key = String.fromCodePoint(keyCode);\n\n            if (/\\w/.test(key)) {\n                clearTimeout(blindTextTimeout.current);\n\n                setBlindText(blindText + key);\n                cleanBlindText();\n            }\n        }\n    }\n\n    function handleBlindTextUpdate(): void {\n        if (open) {\n            const newSelectedIndex = options.findIndex((option) =>\n                option.label.toLowerCase().startsWith(blindText.toLowerCase())\n            );\n\n            if (newSelectedIndex >= 0) {\n                setSelectedIndex(newSelectedIndex);\n            }\n        } else if (!multi) {\n            if (blindText) {\n                const option = options.find((option) =>\n                    option.label\n                        .toLowerCase()\n                        .startsWith(blindText.toLowerCase())\n                );\n\n                if (option) {\n                    onOptionSelect(option.value, option);\n                }\n            } else {\n                onOptionSelect(undefined);\n            }\n        }\n    }\n\n    function getValue(): T | T[] | undefined {\n        const valueOptions = getValueOptions(\n            props.options || [],\n            props.value,\n            props.multi,\n            props.equalCompareProp\n        );\n        return !multi\n            ? props.value\n            : valueOptions.map((option) => option.value);\n    }\n\n    function renderChildren(): JSX.Element | null {\n        const value = getValue();\n        const showPlaceholder =\n            !search &&\n            (isArray(value) && multi\n                ? value.length === 0\n                : value === undefined || value === null);\n\n        if (!props.children) {\n            return null;\n        }\n\n        return props.children({\n            options,\n            open,\n            value,\n            MenuContainer,\n            placeholder: showPlaceholder ? placeholder : undefined,\n            onToggle: toggleMenu,\n            onClose: () => closeMenu(value),\n            onOpen: openMenu,\n            onRef: ref\n        });\n    }\n\n    function renderNativeSelect(): React.ReactNode {\n        const dataRole = props['data-role']\n            ? `select-${props['data-role']}`\n            : undefined;\n        const clearable = props.clearable && native;\n        const value =\n            isArray(props.value) && multi\n                ? props.value.map(findOptionIndex)\n                : findOptionIndex(props.value || '');\n        const propDisabled = disabled ? disabled : required ? false : !native;\n\n        return (\n            <NativeSelect\n                ref={nativeSelect as any}\n                multiple={multi}\n                value={value}\n                disabled={propDisabled}\n                required={required}\n                native={native}\n                tabIndex={-1}\n                data-role={dataRole}\n                onChange={onChangeNativeSelect}\n            >\n                <option value=\"\" disabled={!clearable}>\n                    {placeholder}\n                </option>\n                {options.map((option, i) => (\n                    <option\n                        key={toKey(option.value, props.equalCompareProp)}\n                        value={`${i}`}\n                        disabled={option.disabled}\n                    >\n                        {option.label}\n                    </option>\n                ))}\n            </NativeSelect>\n        );\n    }\n\n    if (props.children) {\n        return renderChildren();\n    }\n\n    const classNames = [\n        'react-slct',\n        className,\n        open && 'open',\n        error && 'has-error'\n    ].filter((c) => Boolean(c));\n\n    return (\n        <Container\n            className={classNames.join(' ')}\n            disabled={disabled}\n            ref={ref}\n            data-role={props['data-role']}\n            onKeyUp={onKeyUp}\n            onKeyDown={onKeyDown}\n        >\n            {renderNativeSelect()}\n            <Value\n                clearable={clearable}\n                searchable={searchable}\n                open={open}\n                disabled={disabled}\n                multi={multi}\n                mobile={native}\n                focused={focused}\n                options={props.options}\n                placeholder={placeholder}\n                error={error}\n                value={value}\n                search={search}\n                keepSearchOnBlur={keepSearchOnBlur}\n                equalCompareProp={equalCompareProp}\n                labelComponent={labelComponent}\n                valueComponentSingle={valueComponentSingle}\n                valueComponentMulti={valueComponentMulti}\n                arrowComponent={arrowComponent}\n                clearComponent={clearComponent}\n                valueIconComponent={props.valueIconComponent}\n                onClear={onClear}\n                onClick={toggleMenu}\n                onSearch={onSearch}\n                onSearchFocus={onSearchFocus}\n                onSearchBlur={onSearchBlur}\n                onOptionRemove={onOptionRemove}\n            />\n            <Menu\n                open={open}\n                options={options}\n                value={value}\n                multi={multi}\n                error={error}\n                search={search}\n                selectedIndex={selectedIndex}\n                menuComponent={menuComponent}\n                labelComponent={labelComponent}\n                optionComponent={optionComponent}\n                hideSelectedOptions={hideSelectedOptions}\n                equalCompareProp={equalCompareProp}\n                emptyText={emptyText}\n                rowHeight={rowHeight}\n                menuWidth={menuWidth}\n                menuHeight={menuHeight}\n                menuPosition={menuPosition}\n                onSelect={onOptionSelect}\n            />\n        </Container>\n    );\n}\n\nexport const Select = React.forwardRef<HTMLDivElement, SelectProps<any>>(\n    SelectImpl\n);\n","import * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { FixedSizeList } from 'react-window';\nimport styled from 'styled-components';\nimport { ReactSlctColors } from './config';\nimport { SelectLabel } from './label';\nimport { MenuContainer } from './menu-container';\nimport { MenuRow } from './menu-row';\nimport { OptionComponent } from './option';\nimport { MenuComponentProps, Option, Rect } from './typings';\nimport { equal, isArray } from './utils';\n\nconst EmptyOptionItem = styled(OptionComponent.OptionItem)`\n    height: 100%;\n    border: 1px solid ${() => ReactSlctColors.border};\n`;\n\nconst Empty = (props: { emptyText?: string }) => (\n    <EmptyOptionItem>\n        <SelectLabel>\n            <i>{props.emptyText || 'No results'}</i>\n        </SelectLabel>\n    </EmptyOptionItem>\n);\n\nexport function Menu(props: MenuComponentProps) {\n    const {\n        rowHeight = 32,\n        selectedIndex,\n        open,\n        error,\n        menuWidth,\n        menuHeight,\n        menuPosition,\n        multi,\n        hideSelectedOptions\n    } = props;\n    const currentValue =\n        isArray(props.value) && multi ? props.value : [props.value];\n    const options = React.useMemo(\n        () =>\n            (props.options || []).filter((option) => {\n                if (hideSelectedOptions) {\n                    const selected = currentValue.some((val) =>\n                        equal(val, option.value, props.equalCompareProp)\n                    );\n\n                    if (selected) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }),\n        [\n            props.options,\n            props.equalCompareProp,\n            hideSelectedOptions,\n            currentValue\n        ]\n    );\n    const [rect, setRect] = useState<Rect>();\n    const [style, setStyle] = useState<Rect>();\n    const list = useRef<FixedSizeList>(null);\n    const width = menuWidth || (rect && rect.width !== 'auto' ? rect.width : 0);\n    const assumedHeight = Math.min(\n        Math.max(options.length * rowHeight, rowHeight) + 2,\n        menuHeight || 185\n    );\n    const actualHeight =\n        (style?.height !== 'auto' && style?.height) || assumedHeight;\n\n    useEffect(() => {\n        if (\n            open &&\n            list.current &&\n            selectedIndex !== undefined &&\n            selectedIndex !== -1\n        ) {\n            list.current.scrollToItem(selectedIndex, 'center');\n        }\n    }, [open, selectedIndex]);\n\n    const itemData = React.useMemo(() => {\n        return {\n            ...props,\n            options,\n            onSelect: (value: any, option: Option) => {\n                if (isArray(props.value) && props.multi) {\n                    const found = props.value.some((item) =>\n                        equal(item, value, props.equalCompareProp)\n                    );\n                    const values = found\n                        ? props.value.filter(\n                              (item) =>\n                                  !equal(item, value, props.equalCompareProp)\n                          )\n                        : Array.from(new Set([...props.value, value]));\n\n                    props.onSelect(values, option);\n                } else {\n                    props.onSelect(value, option);\n                }\n            }\n        };\n    }, [\n        options.length,\n        props.search,\n        props.rowHeight,\n        props.selectedIndex,\n        props.labelComponent,\n        props.optionComponent,\n        props.value\n    ]);\n\n    function renderList() {\n        const MenuContent = props.menuComponent;\n        const itemCount = options.length;\n\n        if (MenuContent) {\n            return <MenuContent {...props} />;\n        }\n\n        if (itemCount === 0) {\n            return <Empty emptyText={props.emptyText} />;\n        }\n\n        return (\n            <FixedSizeList\n                className=\"react-slct-menu-list\"\n                ref={list}\n                width=\"100%\"\n                height={actualHeight}\n                itemSize={rowHeight}\n                itemCount={itemCount}\n                itemData={itemData}\n            >\n                {MenuRow}\n            </FixedSizeList>\n        );\n    }\n\n    return open ? (\n        <MenuContainer\n            error={error}\n            menuWidth={width}\n            menuHeight={assumedHeight}\n            menuPosition={menuPosition}\n            onRect={setRect}\n            onStyle={setStyle}\n        >\n            {renderList()}\n        </MenuContainer>\n    ) : null;\n}\n","import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport { ReactSlctColors } from './config';\nimport { MenuContainerProps, Rect } from './typings';\nimport { getDocument, getWindow, getWindowInnerHeight } from './utils';\n\ninterface MenuWrapperProps {\n    rect?: Rect;\n    menuHeight?: MenuContainerProps['menuHeight'];\n    menuPosition?: MenuContainerProps['menuPosition'];\n    error?: boolean;\n}\n\nfunction getMenuPosition({\n    rect,\n    menuHeight = 186\n}: MenuWrapperProps): 'top' | 'bottom' {\n    if (!rect) {\n        return 'bottom';\n    }\n\n    const { height } = rect;\n\n    if (height === 'auto' || menuHeight === 'auto') {\n        return 'bottom';\n    }\n\n    if (\n        rect.top + height + menuHeight <= getWindowInnerHeight() ||\n        rect.top < menuHeight / 2\n    ) {\n        return 'bottom';\n    }\n\n    return 'top';\n}\n\nfunction getContainerTop(props: MenuWrapperProps): number {\n    const { rect } = props;\n    const window = getWindow();\n\n    if (!rect) {\n        return 0;\n    }\n\n    const menuHeight = (props.menuHeight !== 'auto' && props.menuHeight) || 186;\n    const height = rect.height === 'auto' ? 32 : rect.height;\n    const scrollY = window?.scrollY ?? 0;\n    const menuPosition = props.menuPosition || getMenuPosition(props);\n\n    switch (menuPosition) {\n        case 'top':\n            return rect.top - menuHeight + 1 + scrollY;\n        case 'bottom':\n            return rect.top + height - 1 + scrollY;\n    }\n}\n\nconst MenuOverlay = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    pointer-events: none;\n`;\n\n// position this container fixed is not working well on mobile-devices\n// @see https://medium.com/@im_rahul/safari-and-position-fixed-978122be5f29\nconst MenuWrapper = styled.div`\n    position: absolute;\n    z-index: 9999;\n    background: #fff;\n    box-sizing: border-box;\n    box-shadow: ${(props: MenuWrapperProps) =>\n        getMenuPosition(props) === 'bottom'\n            ? '0 2px 5px rgba(0, 0, 0, 0.1)'\n            : '0 -2px 5px rgba(0, 0, 0, 0.1)'};\n\n    .react-slct-menu-list {\n        box-sizing: border-box;\n        border-width: 1px;\n        border-style: solid;\n        border-color: ${(props: MenuWrapperProps) =>\n            props.error ? ReactSlctColors.error : ReactSlctColors.border};\n        background-color: #fff;\n\n        &:focus {\n            outline: none;\n        }\n    }\n`;\n\nexport function MenuContainer(props: MenuContainerProps) {\n    const { error, onClick, children } = props;\n    const className = ['react-slct-menu', props.className]\n        .filter((c) => c)\n        .join(' ');\n    const document = getDocument();\n    const window = getWindow();\n    const menuOverlay = React.useRef<HTMLDivElement | null>(null);\n    const menuWrapper = React.useRef<HTMLDivElement | null>(null);\n    const [menuOverlayRect, setMenuOverlayRect] = React.useState<Rect>();\n    const [menuWrapperRect, setMenuWrapperRect] = React.useState<Rect>();\n\n    const style = React.useMemo<Rect>(() => {\n        const { menuLeft, menuTop, menuWidth, menuHeight } = props;\n        let width =\n            menuWidth && menuWidth !== 'auto'\n                ? menuWidth\n                : menuOverlayRect?.width || 'auto';\n        let height =\n            menuHeight && menuHeight !== 'auto'\n                ? menuHeight\n                : menuWrapperRect?.height || 'auto';\n        let top =\n            menuTop ??\n            getContainerTop({\n                rect: menuOverlayRect,\n                menuHeight: height,\n                menuPosition: props.menuPosition\n            });\n        let left = menuLeft ?? menuOverlayRect?.left ?? 0;\n\n        if (window) {\n            const numWidth = Number(width);\n\n            if (numWidth > window.innerWidth) {\n                width = window.innerWidth - 20;\n            }\n\n            if (left + numWidth > window.innerWidth) {\n                left = Math.max(10, window.innerWidth - numWidth - 20);\n            }\n        }\n\n        if (top < 0) {\n            if (height !== 'auto') {\n                height += top;\n                top = 0;\n            }\n        }\n\n        return { top, left, width, height };\n    }, [\n        props.menuLeft,\n        props.menuTop,\n        props.menuWidth,\n        props.menuHeight,\n        menuOverlayRect,\n        menuWrapperRect\n    ]);\n\n    function calcMenuOverlay() {\n        if (menuOverlay.current) {\n            const clientRect = menuOverlay.current.getBoundingClientRect();\n\n            setMenuOverlayRect({\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            });\n        }\n    }\n\n    function calcMenuWrapper() {\n        if (menuWrapper.current) {\n            const clientRect = menuWrapper.current.getBoundingClientRect();\n\n            setMenuWrapperRect({\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            });\n        }\n    }\n\n    React.useEffect(calcMenuOverlay, [menuOverlay.current]);\n\n    React.useEffect(() => {\n        calcMenuWrapper();\n\n        if (menuWrapper.current) {\n            props.onRef?.(menuWrapper.current);\n        }\n    }, [menuWrapper.current]);\n\n    React.useEffect(() => {\n        props.onRect?.(menuOverlayRect, menuWrapperRect);\n    }, [menuOverlayRect, menuWrapperRect]);\n\n    React.useEffect(() => {\n        window?.addEventListener('scroll', onViewportChange, true);\n        window?.addEventListener('resize', onViewportChange, true);\n\n        function allowRectChange(e) {\n            if (e.target.closest && !e.target.closest('.react-slct-menu')) {\n                return false;\n            }\n\n            return true;\n        }\n\n        function onViewportChange(e: Event) {\n            if (allowRectChange(e)) {\n                calcMenuOverlay();\n                calcMenuWrapper();\n            }\n        }\n\n        return () => {\n            window?.removeEventListener('resize', onViewportChange, true);\n            window?.removeEventListener('scroll', onViewportChange, true);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (style) {\n            props.onStyle?.(style);\n        }\n    }, [style]);\n\n    return (\n        <MenuOverlay ref={menuOverlay}>\n            {document && style\n                ? createPortal(\n                      <MenuWrapper\n                          data-role=\"menu\"\n                          className={className}\n                          error={error}\n                          ref={menuWrapper}\n                          onClick={onClick}\n                          rect={menuOverlayRect}\n                          style={style}\n                      >\n                          {children}\n                      </MenuWrapper>,\n                      document.body\n                  )\n                : null}\n        </MenuOverlay>\n    );\n}\n"]}