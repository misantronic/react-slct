{"version":3,"sources":["src/index.tsx","src/utils.ts"],"names":["lodash_decorators_1","$fsx","r","React","styled_components_1","menu_1","exports","Menu","menu_container_1","typings_1","LabelComponentProps","MenuComponentProps","Option","SelectProps","utils_1","keys","value_1","option_1","OptionComponent","typings_2","OptionComponentProps","ValueComponentMultiProps","ValueComponentSingleProps","value_component_multi_1","ValueComponentMulti","value_component_single_1","ValueComponentSingle","Select","PureComponent","[object Object]","props","super","this","container","nativeSelect","createRef","state","open","blindText","options","search","creatable","creatableText","showCreate","some","option","value","label","filter","replaceUmlauts","toLowerCase","includes","document","getDocument","Boolean","onCreate","_","prevState","handleBlindTextUpdate","removeDocumentListener","Container","className","clearable","placeholder","disabled","error","menuComponent","labelComponent","optionComponent","valueComponentSingle","valueComponentMulti","arrowComponent","clearComponent","hideSelectedOptions","equalCompareProp","multi","native","emptyText","rowHeight","menuWidth","menuHeight","keepSearchOnBlur","selectedIndex","focused","searchable","children","renderChildren","classNames","c","createElement","join","ref","onContainerRef","data-role","onKeyUp","onKeyDown","renderNativeSelect","Value","mobile","onClear","onClick","toggleMenu","onSearch","onSearchFocus","onSearchBlur","onOptionRemove","onSelect","onOptionSelect","NativeSelect","required","dataRole","undefined","isArray","map","findOptionIndex","propDisabled","multiple","tabIndex","onChange","onChangeNativeSelect","i","key","toKey","valueOptions","getValueOptions","showPlaceholder","length","MenuContainer","onToggle","onClose","closeMenu","onOpen","openMenu","onRef","findIndex","equal","setState","addDocumentListener","callback","cb","addEventListener","onDocumentClick","removeEventListener","blindTextTimeout","setTimeout","val","index","String","e","currentTarget","values","Array","from","selectedOptions","htmlOption","current","optionWasCreated","selectOnNative","createValue","find","optionIsCreatable","createOption","target","closest","contains","keyCode","TAB","handleBlindText","ARROW_UP","ARROW_DOWN","ENTER","newValue","ESC","BACKSPACE","clearTimeout","slice","cleanBlindText","SPACE","fromCodePoint","test","el","startsWith","default","div","select","css","tslib_1","__decorate","bind","debounce","SyntheticEvent","_a","Object","_b","KeyboardEvent","_c","_d","valueA","valueB","toJSON","JSON","stringify","getWindow","window","jsonObject","str","replace","getWindowInnerHeight","defaultHeight","innerHeight"],"mappings":"oHAAAA,EAAAC,EAAAC,EAAA,qBACAC,EAAAF,EAAAC,EAAA,SACAE,EAAAH,EAAAC,EAAA,qBACAD,EAAAC,EAAA,GACA,MAAAG,EAAAJ,EAAAC,EAAA,GA8BII,EAAAC,KA9BKF,EAAAE,KACT,MAAAC,EAAAP,EAAAC,EAAA,GACAO,EAAAR,EAAAC,EAAA,GA8BII,EAAAI,oBA7BAD,EAAAC,oBA4BAJ,EAAAK,mBA3BAF,EAAAE,mBA6BAL,EAAAM,OA5BAH,EAAAG,OAwBAN,EAAAO,YAvBAJ,EAAAI,YAGJ,MAAAC,EAAAb,EAAAC,EAAA,GAyBII,EAAAS,KApBAD,EAAAC,KAIJ,MAAAC,EAAAf,EAAAC,EAAA,GAEA,IAAAe,EAAAhB,EAAAC,EAAA,GAASI,EAAAY,gBAAAD,EAAAC,gBACT,IAAAC,EAAAlB,EAAAC,EAAA,GACII,EAAAc,qBAAAD,EAAAC,qBACAd,EAAAe,yBAAAF,EAAAE,yBACAf,EAAAgB,0BAAAH,EAAAG,0BAEJ,IAAAC,EAAAtB,EAAAC,EAAA,IAASI,EAAAkB,oBAAAD,EAAAC,oBACT,IAAAC,EAAAxB,EAAAC,EAAA,IAASI,EAAAoB,qBAAAD,EAAAC,qBAUT,MAAaC,UAAwBxB,EAAMyB,cAwCvCC,YAAYC,GACRC,MAAMD,GAJFE,KAAAC,UAAmC,KAMvCD,KAAKE,aAAe/B,EAAMgC,YAE1BH,KAAKI,MAAQ,CACTC,MAAM,EACNC,UAAW,IAInBC,cACI,MAAMC,OAAEA,GAAWR,KAAKI,OAClBK,UAAEA,EAAAC,cAAWA,GAAkBV,KAAKF,MAC1C,IAAIS,EAAUP,KAAKF,MAAMS,SAAW,GACpC,MAAMI,EACFF,IACCF,EAAQK,KAAKC,IACV,MAAMC,MAAEA,EAAAC,MAAOA,GAAUF,EAGzB,OAAOC,IAAUN,GAAUO,IAAUP,IAW7C,GARIA,IACAD,EAAUA,EAAQS,OAAOH,GACrB/B,EAAAmC,eAAeJ,EAAOE,OACjBG,cACAC,SAASrC,EAAAmC,eAAeT,GAAQU,iBAIzCP,GAAcH,EAAQ,CAOtBD,EAAU,CACN,CACIQ,MARML,EACiB,iBAAlBA,EACHA,EACAA,EAAcF,GAClB,WAAWA,KAKTM,MAAON,EACPC,WAAW,MAEZF,GAIX,OAAOA,EAGXa,eACI,OAAOtC,EAAAuC,cAGHxB,kBAAkBgB,GACtB,OACIb,KAAKF,MAAMW,WACXI,EAAOJ,WACPa,QAAQtB,KAAKF,MAAMyB,UAAYvB,KAAKI,MAAMI,QAI3CX,mBAAmB2B,EAAGC,GAErBzB,KAAKI,MAAME,WACXmB,EAAUnB,YAAcN,KAAKI,MAAME,WAEnCN,KAAK0B,wBAIN7B,uBACHG,KAAK2B,yBAGF9B,SACH,MAAM+B,UAAEA,GAAcjC,GAChBkC,UACFA,EAAAtB,QACAA,EAAAE,UACAA,EAAAqB,UACAA,EAAAC,YACAA,EAAAjB,MACAA,EAAAkB,SACAA,EAAAC,MACAA,EAAAC,cACAA,EAAAC,eACAA,EAAAC,gBACAA,EAAAC,qBACAA,EAAAC,oBACAA,EAAAC,eACAA,EAAAC,eACAA,EAAAC,oBACAA,EAAAC,iBACAA,EAAAC,MACAA,EAAAC,OACAA,EAAAC,UACAA,EAAAC,UACAA,EAAAC,UACAA,EAAAC,WACAA,EAAAC,iBACAA,GACAjD,KAAKF,OACHO,KAAEA,EAAAG,OAAMA,EAAA0C,cAAQA,EAAAC,QAAeA,GAAYnD,KAAKI,MAChDgD,EAAapD,KAAKF,MAAMsD,YAAc3C,EAE5C,GAAIT,KAAKF,MAAMuD,SACX,OAAOrD,KAAKsD,iBAGhB,MAAMC,EAAa,CACf,aACA1B,EACAxB,GAAQ,OACR4B,GAAS,aACXjB,OAAOwC,GAAKlC,QAAQkC,IAEtB,OACIrF,EAAAsF,cAAC7B,EAAS,CACNC,UAAW0B,EAAWG,KAAK,KAC3B1B,SAAUA,EACV2B,IAAK3D,KAAK4D,eAAqBC,YACpB7D,KAAKF,MAAM,aACtBgE,QAAS9D,KAAK8D,QACdC,UAAW/D,KAAK+D,WAEf/D,KAAKgE,qBACN7F,EAAAsF,cAACzE,EAAAiF,MAAK,CACFnC,UAAWA,EACXsB,WAAYA,EACZ/C,KAAMA,EACN2B,SAAUA,EACVW,MAAOA,EACPuB,OAAQtB,EACRO,QAASA,EACT5C,QAASA,EACTwB,YAAaA,EACbE,MAAOA,EACPnB,MAAOA,EACPN,OAAQA,EACRyC,iBAAkBA,EAClBP,iBAAkBA,EAClBP,eAAgBA,EAChBE,qBAAsBA,EACtBC,oBAAqBA,EACrBC,eAAgBA,EAChBC,eAAgBA,EAChB2B,QAASnE,KAAKmE,QACdC,QAASpE,KAAKqE,WACdC,SAAUtE,KAAKsE,SACfC,cAAevE,KAAKuE,cACpBC,aAAcxE,KAAKwE,aACnBC,eAAgBzE,KAAKyE,iBAEzBtG,EAAAsF,cAACpF,EAAAE,KAAI,CACD8B,KAAMA,EACNE,QAASP,KAAKO,QACdO,MAAOA,EACP6B,MAAOA,EACPV,MAAOA,EACPzB,OAAQA,EACR0C,cAAeA,EACfhB,cAAeA,EACfC,eAAgBA,EAChBC,gBAAiBA,EACjBK,oBAAqBA,EACrBC,iBAAkBA,EAClBG,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,WAAYA,EACZ0B,SAAU1E,KAAK2E,kBAMvB9E,qBACJ,MAAM+E,aAAEA,GAAiBjF,GACnBiD,OAAEA,EAAAb,YAAQA,EAAAY,MAAaA,EAAAkC,SAAOA,EAAA7C,SAAUA,GAAahC,KAAKF,MAC1DgF,EAAW9E,KAAKF,MAAM,aACtB,UAAUE,KAAKF,MAAM,oBACrBiF,EACAjD,EAAY9B,KAAKF,MAAMgC,WAAac,EACpC9B,EACFhC,EAAAkG,QAAQhF,KAAKF,MAAMgB,QAAU6B,EACvB3C,KAAKF,MAAMgB,MAAMmE,IAAIjF,KAAKkF,iBAC1BlF,KAAKkF,gBAAgBlF,KAAKF,MAAMgB,OAAS,IAC7CqE,OACWJ,IAAb/C,EAAyBA,GAAW6C,IAAoBjC,EAE5D,OACIzE,EAAAsF,cAACmB,EAAY,CACTjB,IAAK3D,KAAKE,aACVkF,SAAUzC,EACV7B,MAAOA,EACPkB,SAAUmD,EACVN,SAAUA,EACVjC,OAAQA,EACRyC,UAAW,EAACxB,YACDiB,EACXQ,SAAUtF,KAAKuF,sBAEfpH,EAAAsF,cAAA,SAAA,CAAQ3C,MAAM,GAAGkB,UAAWF,GACvBC,GAEJ/B,KAAKO,QAAQ0E,IAAI,CAACpE,EAAQ2E,IACvBrH,EAAAsF,cAAA,SAAA,CACIgC,IAAK3G,EAAA4G,MAAM7E,EAAOC,MAAOd,KAAKF,MAAM4C,kBACpC5B,MAAO,GAAG0E,IACVxD,SAAUnB,EAAOmB,UAEhBnB,EAAOE,SAOpBlB,iBACJ,MAAMU,QAAEA,EAAAwB,YAASA,EAAAY,MAAaA,EAAAU,SAAOA,GAAarD,KAAKF,OACjDO,KAAEA,EAAAG,OAAMA,GAAWR,KAAKI,MACxBuF,EAAe7G,EAAA8G,gBACjBrF,GAAW,GACXP,KAAKF,MAAMgB,MACXd,KAAKF,MAAM6C,MACX3C,KAAKF,MAAM4C,kBAET5B,EAA8B6B,EAE9BgD,EAAaV,IAAIpE,GAAUA,EAAOC,OADlCd,KAAKF,MAAMgB,MAEX+E,GACDrF,IACA1B,EAAAkG,QAAQlE,IAAU6B,EACI,IAAjB7B,EAAMgF,OACNhF,MAAAA,GAEV,OAAKuC,EAIEA,EAAS,CACZ9C,QAASP,KAAKO,QACdF,KAAAA,EACAS,MAAAA,EACAiF,cAAAvH,EAAAuH,cACAhE,YAAa8D,EAAkB9D,OAAcgD,EAC7CiB,SAAU,IAAMhG,KAAKqE,aACrB4B,QAAS,IAAMjG,KAAKkG,UAAUpF,GAC9BqF,OAAQ,IAAMnG,KAAKoG,WACnBC,MAAO1C,GAAQ3D,KAAKC,UAAY0D,IAZzB,KAiBP9D,cACUG,KAAKI,MAAMC,KAGrBL,KAAKoG,WAELpG,KAAKkG,UAAUlG,KAAKF,MAAMgB,OAK1BjB,WACJ,MAAMqD,EAAgBlD,KAAKF,MAAM2C,yBAC3BsC,EACA/E,KAAKO,QAAQ+F,UAAUzF,GACnB/B,EAAAyH,MACI1F,EAAOC,MACPd,KAAKF,MAAMgB,MACXd,KAAKF,MAAM4C,mBAGnBO,EACFjD,KAAKF,MAAMmD,mBAAqBjD,KAAKF,MAAMgB,MAE/Cd,KAAKwG,SACD,CACInG,MAAM,EACNG,OAAQyC,EAAmBjD,KAAKI,MAAMI,YAASuE,EAC/C7B,cAAAA,GAEJ,KACQlD,KAAKF,MAAMqG,QACXnG,KAAKF,MAAMqG,SAGfnG,KAAKyG,wBAMT5G,UAAUiB,EAAoB4F,EAAW,UAC7C,MAAMzD,EAAmBjD,KAAKF,MAAMmD,mBAAqBnC,EAEzDd,KAAK2B,yBACL3B,KAAKwG,SACD,CACInG,MAAM,EACNG,OAAQyC,EAAmBjD,KAAKI,MAAMI,YAASuE,EAC/C7B,mBAAe6B,GAEnB,KACQ/E,KAAKF,MAAMmG,SACXjG,KAAKF,MAAMmG,UAGfS,MAKJ7G,aAAaiB,EAAe6F,GAChC,MAAMpF,SAAEA,GAAavB,KAAKF,MAEtByB,GACAvB,KAAKkG,UAAUpF,EAAO,KAClBS,EAAST,GAEL6F,GACAA,MAMR9G,sBACJG,KAAK2B,yBAED3B,KAAKoB,UACLpB,KAAKoB,SAASwF,iBAAiB,QAAS5G,KAAK6G,iBAI7ChH,yBACAG,KAAKoB,UACLpB,KAAKoB,SAAS0F,oBAAoB,QAAS9G,KAAK6G,iBAKhDhH,iBACJG,KAAK+G,iBAAmBC,WACpB,IAAMhH,KAAKwG,SAAS,CAAElG,UAAW,KACjC,KAKAT,gBAAgBoH,GACpB,IAAIC,EAAQlH,KAAKO,QAAQ+F,UAAUzF,GAAUA,EAAOC,QAAUmG,GAE9D,OAAe,IAAXC,IACmB,iBAARD,IACPC,EAAQlH,KAAKO,QAAQ+F,UAAUzF,GAC3B/B,EAAAyH,MAAM1F,EAAOC,MAAOmG,EAAKjH,KAAKF,MAAM4C,qBAI7B,IAAXwE,GACO,GAIRC,OAAOD,GAIVrH,qBACJuH,GAEA,MAAM9B,SAAEA,EAAA3C,MAAUA,GAAU3C,KAAKF,OAC3BuH,cAAEA,GAAkBD,EAE1B,GAAI9B,EACA,GAA4B,KAAxB+B,EAAcvG,MACdd,KAAKmE,cACF,CACH,MAAMmD,EAASC,MAAMC,KAAKH,EAAcI,iBAAiBxC,IACrDyC,GAAc1H,KAAKO,QAAQmH,EAAWR,MAAQ,GAAGpG,OAIjDwE,EADA3C,EACS2E,EAEAA,EAAO,KAOxBzH,gBACJ,MAAMQ,KAAEA,EAAA8C,QAAMA,GAAYnD,KAAKI,MAE1BC,GAAS8C,GAAYnD,KAAKF,MAAM8C,QACjC5C,KAAKoG,WAGTpG,KAAKwG,SAAS,CAAErD,SAAS,IAIrBtD,eACJG,KAAKwG,SAAS,CAAErD,SAAS,IAIrBtD,eAAeiB,EAAoBD,GACvC,MAAM8G,QAAEA,GAAY3H,KAAKE,cACnByC,MAAEA,EAAA2C,SAAOA,EAAA7E,UAAUA,GAAcT,KAAKF,MAC5C,IAAI8H,GAAmB,EAEvB,MAAMC,EAAiB,KACfF,IACAA,EAAQ7G,MACJhC,EAAAkG,QAAQlE,IAAU6B,EACX7B,EAAMmE,IAAIjF,KAAKkF,iBAChBlF,KAAKkF,gBAAgBpE,IAGnCd,KAAKwG,SAAS,CAAErD,SAAS,GAAQ,IAC7BnD,KAAKkG,UAAUpF,EAAO,IAAMwE,GAAYA,EAASxE,EAAOD,MAIhE,GAAIJ,EAAW,CACX,MAAMqH,EAAcb,IAChB,MAAMpG,EAASb,KAAKO,QAAQwH,KACxBlH,GACIb,KAAKgI,kBAAkBnH,IAAWA,EAAOC,QAAUmG,GAGvDpG,IACA+G,GAAmB,EACnB5H,KAAKiI,aAAapH,EAAOC,MAAc+G,KAI3C/I,EAAAkG,QAAQlE,IAAU6B,EAClB7B,EAAMmE,IAAI6C,GAEVA,EAAYhH,GAIf8G,GACDC,IAKAhI,eAAeiB,GACnB,GAAIhC,EAAAkG,QAAQhF,KAAKF,MAAMgB,QAAUd,KAAKF,MAAM6C,MAAO,CAC/C,MAAM2E,EAAStH,KAAKF,MAAMgB,MAAME,OAC5BiG,IAAQnI,EAAAyH,MAAMU,EAAKnG,EAAOd,KAAKF,MAAM4C,mBAGzC1C,KAAK2E,eAAe2C,IAKpBzH,UACJG,KAAK2E,eAAe3E,KAAKF,MAAM6C,MAAQ,QAAKoC,GAIxClF,SAASW,GACbR,KAAKwG,SAAS,CAAEhG,OAAAA,GAAU,KACM,IAAxBR,KAAKO,QAAQuF,QAAiB9F,KAAKF,MAAMW,WAAaD,EACtDR,KAAKwG,SAAS,CAAEtD,cAAe,IAE/BlD,KAAKwG,SAAS,CAAEtD,mBAAe6B,IAG/B/E,KAAKF,MAAMwE,UACXtE,KAAKF,MAAMwE,SAAS9D,KAMxBX,gBAAgBuH,GACpB,MAAMc,OAAEA,GAAWd,EAEfc,EAAOC,QAAQ,qBAIfnI,KAAKC,YAAcD,KAAKC,UAAUmI,SAASF,IAC3ClI,KAAKkG,UAAUlG,KAAKF,MAAMgB,OAK1BjB,WAAUwI,QAAEA,IAChB,MAAMjF,WAAEA,EAAA3C,UAAYA,GAAcT,KAAKF,MAEvC,OAAQuI,GACJ,KAAKvJ,EAAAC,KAAKuJ,IACFtI,KAAKI,MAAMC,MACXL,KAAKkG,UAAUlG,KAAKF,MAAMgB,OAKjCsC,GAAe3C,GAChBT,KAAKuI,gBAAgBF,GAKrBxI,SAAQwI,QAAEA,IACd,MAAM7H,OAAEA,EAAAH,KAAQA,GAASL,KAAKI,OACxBU,MAAEA,EAAA6B,MAAOA,GAAU3C,KAAKF,MAC9B,IAAIoD,EAAgBlD,KAAKI,MAAM8C,cAE/B,OAAQmF,GACJ,KAAKvJ,EAAAC,KAAKyJ,SACFnI,QACsB0E,IAAlB7B,IACAA,GAAgC,EAE5BA,EAAgB,IAChBA,EAAgBlD,KAAKO,QAAQuF,OAAS,IAI9C9F,KAAKwG,SAAS,CAAEtD,cAAAA,KAEhBlD,KAAKoG,WAET,MACJ,KAAKtH,EAAAC,KAAK0J,WACFpI,QAEsB0E,IAAlB7B,GACAA,IAAkBlD,KAAKO,QAAQuF,OAAS,EAExC5C,EAAgB,EAEhBA,GAAgC,EAGpClD,KAAKwG,SAAS,CAAEtD,cAAAA,KAEhBlD,KAAKoG,WAET,MACJ,KAAKtH,EAAAC,KAAK2J,MACN,GACiC,IAA7B1I,KAAKI,MAAM8C,eACXlD,KAAKgI,kBAAkBhI,KAAKO,QAAQ,IAEpCP,KAAKiI,aAAazH,QACf,QACeuE,IAAlB7B,GACAlD,KAAKO,QAAQ2C,GACf,CACE,MAAMrC,EAASb,KAAKO,QAAQ2C,GACtByF,EAAW9H,EAAOC,MAExBd,KAAK2E,eACD7F,EAAAkG,QAAQlE,IAAU6B,EACZ,IAAI7B,EAAO6H,GACXA,EACN9H,GAGR,MACJ,KAAK/B,EAAAC,KAAK6J,IACFvI,GACAL,KAAKkG,UAAUpF,IAMvBjB,gBAAgBwI,GACpB,MAAM/H,UAAEA,GAAcN,KAAKI,MAE3B,GAAIiI,IAAYvJ,EAAAC,KAAK8J,WAAavI,EAAUwF,OACxCgD,aAAa9I,KAAK+G,kBAElB/G,KAAKwG,SACD,CACIlG,UAAWA,EAAUyI,MAAM,EAAGzI,EAAUwF,OAAS,IAErD9F,KAAKgJ,qBAEN,GAAIX,IAAYvJ,EAAAC,KAAKkK,MACxBH,aAAa9I,KAAK+G,kBAElB/G,KAAKwG,SACD,CACIlG,UAAWA,EAAY,KAE3BN,KAAKgJ,oBAEN,CACH,MAAMvD,EAAM0B,OAAO+B,cAAcb,GAE7B,KAAKc,KAAK1D,KACVqD,aAAa9I,KAAK+G,kBAElB/G,KAAKwG,SACD,CACIlG,UAAWA,EAAYmF,GAE3BzF,KAAKgJ,kBAObnJ,eAAeuJ,GACnBpJ,KAAKC,UAAYmJ,EAGbvJ,wBACJ,MAAMQ,KAAEA,EAAAC,UAAMA,GAAcN,KAAKI,OAC3BuC,MAAEA,GAAU3C,KAAKF,MAEvB,GAAIO,EAAM,CACN,MAAM6C,EAAgBlD,KAAKO,QAAQ+F,UAAUzF,GACzCA,EAAOE,MAAMG,cAAcmI,WAAW/I,EAAUY,gBAGhDgC,GAAiB,GACjBlD,KAAKwG,SAAS,CAAEtD,cAAAA,SAEjB,IAAKP,EACR,GAAIrC,EAAW,CACX,MAAMO,EAASb,KAAKO,QAAQwH,KAAKlH,GAC7BA,EAAOE,MACFG,cACAmI,WAAW/I,EAAUY,gBAG1BL,GACAb,KAAK2E,eAAe9D,EAAOC,MAAOD,QAGtCb,KAAK2E,oBAAeI,IA/qBjBpF,EAAAiC,UAAYxD,EAAAkL,QAAOC,GAAG;;;;;;0BAMfzJ,GACdA,EAAMkC,SAAW,OAAS;mBACnBlC,GACPA,EAAMkC,SAAW,IAAO;;MAIjBrC,EAAAiF,aAAexG,EAAAkL,QAAOE,MAAM;;;;;;;;UAQrC1J,GACEA,EAAM8C,OACAxE,EAAAqL,GAAG;;oBAGHrL,EAAAqL,GAAG;;;;MA2QjBC,EAAAC,WAAA,CADC3L,EAAA4L,wJAYDF,EAAAC,WAAA,CADC3L,EAAA6L,SAAS,oJA+BVH,EAAAC,WAAA,CADC3L,EAAA6L,SAAS,kKAkDVH,EAAAC,WAAA,CADC3L,EAAA4L,4JASDF,EAAAC,WAAA,CADC3L,EAAA4L,mKAoBDF,EAAAC,WAAA,CADC3L,EAAA4L,4EAE0B,0BAAf,IAALzL,GAAAA,EAAM2L,gBAAcC,EAAAC,4FAuB3BN,EAAAC,WAAA,CADC3L,EAAA4L,2JAYDF,EAAAC,WAAA,CADC3L,EAAA4L,0JAMDF,EAAAC,WAAA,CADC3L,EAAA4L,mFACyD,0BAAA,IAANnL,EAAAG,QAAAH,EAAAG,QAAMqL,EAAAD,sFA4C1DN,EAAAC,WAAA,CADC3L,EAAA4L,kKAYDF,EAAAC,WAAA,CADC3L,EAAA4L,qJAMDF,EAAAC,WAAA,CADC3L,EAAA4L,4JAgBDF,EAAAC,WAAA,CADC3L,EAAA4L,mKAcDF,EAAAC,WAAA,CADC3L,EAAA4L,4EACiD,0BAAd,IAALzL,GAAAA,EAAM+L,eAAaC,EAAAH,iFAiBlDN,EAAAC,WAAA,CADC3L,EAAA4L,4EAC+C,0BAAd,IAALzL,GAAAA,EAAM+L,eAAaE,EAAAJ,+EAwGhDN,EAAAC,WAAA,CADC3L,EAAA4L,kKAtpBLtL,EAAAqB,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0lGClBA,SAAgB4G,EACZ8D,EACAC,EACA5H,EAAkC,MAElC,OAAI2H,IAAWC,MAIVD,IAAWC,KAIM,iBAAXD,GAAyC,iBAAXC,OAEjC5H,QAC6BqC,IAA7BsF,EAAO3H,IACsB,OAA7B2H,EAAO3H,SACsBqC,IAA7BuF,EAAO5H,IACsB,OAA7B4H,EAAO5H,IACP2H,EAAO3H,KAAsB4H,EAAO5H,MAKpC2H,EAAOE,QAAUD,EAAOC,OAEpBC,KAAKC,UAAUJ,EAAOE,YACtBC,KAAKC,UAAUH,EAAOC,UAIvBC,KAAKC,UAAUJ,KAAYG,KAAKC,UAAUH,MAiCzD,SAAgBtF,EAAiBiC,GAC7B,QAAIM,MAAMvC,QAAQiC,OAKdA,IAAOA,EAAIhC,KAenB,SAAgByF,IACZ,GAAsB,oBAAXC,OACP,OAAOA,wDA7GfrM,EAAAoH,MAAA,SACI5E,EACA4B,EAAkC,MAElC,GAAqB,iBAAV5B,EACP,OAAOA,EAGX,GAAIA,GAA0B,iBAAVA,EAAoB,CACpC,MAAM8J,EAAa9J,EAAMyJ,OAASzJ,EAAMyJ,SAAWzJ,EAEnD,OAAI4B,GAAoBkI,EAAWlI,GACxBkI,EAAWlI,GAGf8H,KAAKC,UAAUG,GAG1B,OAAOJ,KAAKC,UAAU3J,IAG1BxC,EAAAiI,MAAAA,EAsCAjI,EAAA2C,eAAA,SAA+B4J,GAC3B,OAAOA,EACFC,QAAQ,IAAK,KACbA,QAAQ,IAAK,KACbA,QAAQ,IAAK,KACbA,QAAQ,IAAK,KACbA,QAAQ,IAAK,KACbA,QAAQ,IAAK,MAGtBxM,EAAAsH,gBAAA,SACIrF,EACAO,EACA6B,EACAD,GAEA,OAAOnC,EAAQS,OAAOH,GACdmE,EAAQlE,IAAU6B,EACX7B,EAAMF,KAAKqG,GACdV,EAAM1F,EAAOC,MAAOmG,EAAKvE,IAGtB6D,EAAM1F,EAAOC,MAAOA,EAAO4B,KAK9CpE,EAAA0G,QAAAA,EAaA1G,EAAA+C,YAAA,WACI,GAAwB,oBAAbD,SACP,OAAOA,UAMf9C,EAAAoM,UAAAA,EAQApM,EAAAyM,qBAAA,SAAqCC,EAAgB,KACjD,MAAML,EAASD,IAEf,OAAIC,EACOA,EAAOM,YAGXD,GAGE1M,EAAAS,KAAO,CAChByJ,SAAU,GACVC,WAAY,GACZC,MAAO,GACPJ,IAAK,EACLM,IAAK,GACLC,UAAW,EACXI,MAAO","sourcesContent":["import { bind, debounce } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport './global-stylings';\nimport { Menu } from './menu';\nimport { MenuContainer } from './menu-container';\nimport {\n    LabelComponentProps,\n    MenuComponentProps,\n    Option,\n    SelectProps,\n    SelectState\n} from './typings';\nimport {\n    equal,\n    getDocument,\n    getValueOptions,\n    isArray,\n    keys,\n    replaceUmlauts,\n    toKey\n} from './utils';\nimport { Value } from './value';\n\nexport { OptionComponent } from './option';\nexport {\n    OptionComponentProps,\n    ValueComponentMultiProps,\n    ValueComponentSingleProps\n} from './typings';\nexport { ValueComponentMulti } from './value-component-multi';\nexport { ValueComponentSingle } from './value-component-single';\nexport {\n    SelectProps,\n    Menu,\n    MenuComponentProps,\n    LabelComponentProps,\n    Option,\n    keys\n};\n\nexport class Select<T = any> extends React.PureComponent<\n    SelectProps<T>,\n    SelectState\n> {\n    private static Container = styled.div`\n        display: flex;\n        position: relative;\n        cursor: default;\n        width: 100%;\n        box-sizing: border-box;\n        pointer-events: ${(props: { disabled?: boolean }) =>\n            props.disabled ? 'none' : 'auto'};\n        opacity: ${(props: { disabled?: boolean }) =>\n            props.disabled ? 0.75 : 1};\n        user-select: none;\n    `;\n\n    private static NativeSelect = styled.select`\n        display: block;\n        opacity: 0;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        ${(props: { native?: boolean }) =>\n            props.native\n                ? css`\n                      z-index: 1;\n                  `\n                : css`\n                      pointer-events: none;\n                      z-index: auto;\n                  `};\n    `;\n\n    private nativeSelect: React.RefObject<HTMLSelectElement>;\n    private container: HTMLDivElement | null = null;\n    private blindTextTimeout!: number;\n\n    constructor(props: SelectProps) {\n        super(props);\n\n        this.nativeSelect = React.createRef();\n\n        this.state = {\n            open: false,\n            blindText: ''\n        };\n    }\n\n    private get options(): Option<T>[] {\n        const { search } = this.state;\n        const { creatable, creatableText } = this.props;\n        let options = this.props.options || [];\n        const showCreate =\n            creatable &&\n            !options.some(option => {\n                const { value, label } = option;\n\n                // @ts-ignore\n                return value === search || label === search;\n            });\n\n        if (search) {\n            options = options.filter(option =>\n                replaceUmlauts(option.label)\n                    .toLowerCase()\n                    .includes(replaceUmlauts(search).toLowerCase())\n            );\n        }\n\n        if (showCreate && search) {\n            const label = creatableText\n                ? typeof creatableText === 'string'\n                    ? creatableText\n                    : creatableText(search)\n                : `Create \"${search}\"`;\n\n            options = [\n                {\n                    label,\n                    value: search as any,\n                    creatable: true\n                },\n                ...options\n            ];\n        }\n\n        return options;\n    }\n\n    private get document() {\n        return getDocument();\n    }\n\n    private optionIsCreatable(option: Option<T>): boolean {\n        return (\n            this.props.creatable &&\n            option.creatable &&\n            Boolean(this.props.onCreate && this.state.search)\n        );\n    }\n\n    public componentDidUpdate(_, prevState: SelectState): void {\n        if (\n            this.state.blindText &&\n            prevState.blindText !== this.state.blindText\n        ) {\n            this.handleBlindTextUpdate();\n        }\n    }\n\n    public componentWillUnmount(): void {\n        this.removeDocumentListener();\n    }\n\n    public render(): React.ReactNode {\n        const { Container } = Select;\n        const {\n            className,\n            options,\n            creatable,\n            clearable,\n            placeholder,\n            value,\n            disabled,\n            error,\n            menuComponent,\n            labelComponent,\n            optionComponent,\n            valueComponentSingle,\n            valueComponentMulti,\n            arrowComponent,\n            clearComponent,\n            hideSelectedOptions,\n            equalCompareProp,\n            multi,\n            native,\n            emptyText,\n            rowHeight,\n            menuWidth,\n            menuHeight,\n            keepSearchOnBlur\n        } = this.props;\n        const { open, search, selectedIndex, focused } = this.state;\n        const searchable = this.props.searchable || creatable;\n\n        if (this.props.children) {\n            return this.renderChildren();\n        }\n\n        const classNames = [\n            'react-slct',\n            className,\n            open && 'open',\n            error && 'has-error'\n        ].filter(c => Boolean(c));\n\n        return (\n            <Container\n                className={classNames.join(' ')}\n                disabled={disabled}\n                ref={this.onContainerRef as any}\n                data-role={this.props['data-role']}\n                onKeyUp={this.onKeyUp}\n                onKeyDown={this.onKeyDown}\n            >\n                {this.renderNativeSelect()}\n                <Value\n                    clearable={clearable}\n                    searchable={searchable}\n                    open={open}\n                    disabled={disabled}\n                    multi={multi}\n                    mobile={native}\n                    focused={focused}\n                    options={options}\n                    placeholder={placeholder}\n                    error={error}\n                    value={value}\n                    search={search}\n                    keepSearchOnBlur={keepSearchOnBlur}\n                    equalCompareProp={equalCompareProp}\n                    labelComponent={labelComponent}\n                    valueComponentSingle={valueComponentSingle}\n                    valueComponentMulti={valueComponentMulti}\n                    arrowComponent={arrowComponent}\n                    clearComponent={clearComponent}\n                    onClear={this.onClear}\n                    onClick={this.toggleMenu}\n                    onSearch={this.onSearch}\n                    onSearchFocus={this.onSearchFocus}\n                    onSearchBlur={this.onSearchBlur}\n                    onOptionRemove={this.onOptionRemove}\n                />\n                <Menu\n                    open={open}\n                    options={this.options}\n                    value={value}\n                    multi={multi}\n                    error={error}\n                    search={search}\n                    selectedIndex={selectedIndex}\n                    menuComponent={menuComponent}\n                    labelComponent={labelComponent}\n                    optionComponent={optionComponent}\n                    hideSelectedOptions={hideSelectedOptions}\n                    equalCompareProp={equalCompareProp}\n                    emptyText={emptyText}\n                    rowHeight={rowHeight}\n                    menuWidth={menuWidth}\n                    menuHeight={menuHeight}\n                    onSelect={this.onOptionSelect}\n                />\n            </Container>\n        );\n    }\n\n    private renderNativeSelect(): React.ReactNode {\n        const { NativeSelect } = Select;\n        const { native, placeholder, multi, required, disabled } = this.props;\n        const dataRole = this.props['data-role']\n            ? `select-${this.props['data-role']}`\n            : undefined;\n        const clearable = this.props.clearable && native;\n        const value =\n            isArray(this.props.value) && multi\n                ? this.props.value.map(this.findOptionIndex)\n                : this.findOptionIndex(this.props.value || '');\n        const propDisabled =\n            disabled !== undefined ? disabled : required ? false : !native;\n\n        return (\n            <NativeSelect\n                ref={this.nativeSelect as any}\n                multiple={multi}\n                value={value}\n                disabled={propDisabled}\n                required={required}\n                native={native}\n                tabIndex={-1}\n                data-role={dataRole}\n                onChange={this.onChangeNativeSelect}\n            >\n                <option value=\"\" disabled={!clearable}>\n                    {placeholder}\n                </option>\n                {this.options.map((option, i) => (\n                    <option\n                        key={toKey(option.value, this.props.equalCompareProp)}\n                        value={`${i}`}\n                        disabled={option.disabled}\n                    >\n                        {option.label}\n                    </option>\n                ))}\n            </NativeSelect>\n        );\n    }\n\n    private renderChildren(): React.ReactNode {\n        const { options, placeholder, multi, children } = this.props;\n        const { open, search } = this.state;\n        const valueOptions = getValueOptions(\n            options || [],\n            this.props.value,\n            this.props.multi,\n            this.props.equalCompareProp\n        );\n        const value: T | T[] | undefined = !multi\n            ? this.props.value\n            : valueOptions.map(option => option.value);\n        const showPlaceholder =\n            !search &&\n            (isArray(value) && multi\n                ? value.length === 0\n                : value === undefined || value === null);\n\n        if (!children) {\n            return null;\n        }\n\n        return children({\n            options: this.options,\n            open,\n            value,\n            MenuContainer,\n            placeholder: showPlaceholder ? placeholder : undefined,\n            onToggle: () => this.toggleMenu(),\n            onClose: () => this.closeMenu(value),\n            onOpen: () => this.openMenu(),\n            onRef: ref => (this.container = ref)\n        });\n    }\n\n    @bind\n    private toggleMenu(): void {\n        const open = !this.state.open;\n\n        if (open) {\n            this.openMenu();\n        } else {\n            this.closeMenu(this.props.value);\n        }\n    }\n\n    @debounce(0)\n    private openMenu(): void {\n        const selectedIndex = this.props.hideSelectedOptions\n            ? undefined\n            : this.options.findIndex(option =>\n                  equal(\n                      option.value,\n                      this.props.value,\n                      this.props.equalCompareProp\n                  )\n              );\n        const keepSearchOnBlur =\n            this.props.keepSearchOnBlur && !this.props.value;\n\n        this.setState(\n            {\n                open: true,\n                search: keepSearchOnBlur ? this.state.search : undefined,\n                selectedIndex\n            },\n            () => {\n                if (this.props.onOpen) {\n                    this.props.onOpen();\n                }\n\n                this.addDocumentListener();\n            }\n        );\n    }\n\n    @debounce(0)\n    private closeMenu(value: any | any[], callback = () => {}): void {\n        const keepSearchOnBlur = this.props.keepSearchOnBlur && !value;\n\n        this.removeDocumentListener();\n        this.setState(\n            {\n                open: false,\n                search: keepSearchOnBlur ? this.state.search : undefined,\n                selectedIndex: undefined\n            },\n            () => {\n                if (this.props.onClose) {\n                    this.props.onClose();\n                }\n\n                callback();\n            }\n        );\n    }\n\n    private createOption(value: string, cb?: () => void): void {\n        const { onCreate } = this.props;\n\n        if (onCreate) {\n            this.closeMenu(value, () => {\n                onCreate(value);\n\n                if (cb) {\n                    cb();\n                }\n            });\n        }\n    }\n\n    private addDocumentListener(): void {\n        this.removeDocumentListener();\n\n        if (this.document) {\n            this.document.addEventListener('click', this.onDocumentClick);\n        }\n    }\n\n    private removeDocumentListener(): void {\n        if (this.document) {\n            this.document.removeEventListener('click', this.onDocumentClick);\n        }\n    }\n\n    @bind\n    private cleanBlindText(): void {\n        this.blindTextTimeout = setTimeout(\n            () => this.setState({ blindText: '' }),\n            700\n        );\n    }\n\n    @bind\n    private findOptionIndex(val: any) {\n        let index = this.options.findIndex(option => option.value === val);\n\n        if (index === -1) {\n            if (typeof val === 'object') {\n                index = this.options.findIndex(option =>\n                    equal(option.value, val, this.props.equalCompareProp)\n                );\n            }\n\n            if (index === -1) {\n                return '';\n            }\n        }\n\n        return String(index);\n    }\n\n    @bind\n    private onChangeNativeSelect(\n        e: React.SyntheticEvent<HTMLSelectElement>\n    ): void {\n        const { onChange, multi } = this.props;\n        const { currentTarget } = e;\n\n        if (onChange) {\n            if (currentTarget.value === '') {\n                this.onClear();\n            } else {\n                const values = Array.from(currentTarget.selectedOptions).map(\n                    htmlOption => this.options[htmlOption.index - 1].value\n                );\n\n                if (multi) {\n                    onChange(values as any);\n                } else {\n                    onChange(values[0] as any);\n                }\n            }\n        }\n    }\n\n    @bind\n    private onSearchFocus(): void {\n        const { open, focused } = this.state;\n\n        if (!open && !focused && !this.props.native) {\n            this.openMenu();\n        }\n\n        this.setState({ focused: true });\n    }\n\n    @bind\n    private onSearchBlur(): void {\n        this.setState({ focused: false });\n    }\n\n    @bind\n    private onOptionSelect(value: any | any[], option?: Option<T>): void {\n        const { current } = this.nativeSelect;\n        const { multi, onChange, creatable } = this.props;\n        let optionWasCreated = false;\n\n        const selectOnNative = () => {\n            if (current) {\n                current.value =\n                    isArray(value) && multi\n                        ? (value.map(this.findOptionIndex) as any)\n                        : this.findOptionIndex(value);\n            }\n\n            this.setState({ focused: true }, () =>\n                this.closeMenu(value, () => onChange && onChange(value, option))\n            );\n        };\n\n        if (creatable) {\n            const createValue = (val: any) => {\n                const option = this.options.find(\n                    option =>\n                        this.optionIsCreatable(option) && option.value === val\n                );\n\n                if (option) {\n                    optionWasCreated = true;\n                    this.createOption(option.value as any, selectOnNative);\n                }\n            };\n\n            if (isArray(value) && multi) {\n                value.map(createValue);\n            } else {\n                createValue(value);\n            }\n        }\n\n        if (!optionWasCreated) {\n            selectOnNative();\n        }\n    }\n\n    @bind\n    private onOptionRemove(value: any): void {\n        if (isArray(this.props.value) && this.props.multi) {\n            const values = this.props.value.filter(\n                val => !equal(val, value, this.props.equalCompareProp)\n            );\n\n            this.onOptionSelect(values);\n        }\n    }\n\n    @bind\n    private onClear(): void {\n        this.onOptionSelect(this.props.multi ? [] : undefined);\n    }\n\n    @bind\n    private onSearch(search: string): void {\n        this.setState({ search }, () => {\n            if (this.options.length === 1 || (this.props.creatable && search)) {\n                this.setState({ selectedIndex: 0 });\n            } else {\n                this.setState({ selectedIndex: undefined });\n            }\n\n            if (this.props.onSearch) {\n                this.props.onSearch(search);\n            }\n        });\n    }\n\n    @bind\n    private onDocumentClick(e): void {\n        const { target } = e;\n\n        if (target.closest('.react-slct-menu')) {\n            return;\n        }\n\n        if (this.container && !this.container.contains(target)) {\n            this.closeMenu(this.props.value);\n        }\n    }\n\n    @bind\n    private onKeyDown({ keyCode }: React.KeyboardEvent): void {\n        const { searchable, creatable } = this.props;\n\n        switch (keyCode) {\n            case keys.TAB:\n                if (this.state.open) {\n                    this.closeMenu(this.props.value);\n                }\n                break;\n        }\n\n        if (!searchable && !creatable) {\n            this.handleBlindText(keyCode);\n        }\n    }\n\n    @bind\n    private onKeyUp({ keyCode }: React.KeyboardEvent): void {\n        const { search, open } = this.state;\n        const { value, multi } = this.props;\n        let selectedIndex = this.state.selectedIndex;\n\n        switch (keyCode) {\n            case keys.ARROW_UP:\n                if (open) {\n                    if (selectedIndex !== undefined) {\n                        selectedIndex = selectedIndex - 1;\n\n                        if (selectedIndex < 0) {\n                            selectedIndex = this.options.length - 1;\n                        }\n                    }\n\n                    this.setState({ selectedIndex });\n                } else {\n                    this.openMenu();\n                }\n                break;\n            case keys.ARROW_DOWN:\n                if (open) {\n                    if (\n                        selectedIndex === undefined ||\n                        selectedIndex === this.options.length - 1\n                    ) {\n                        selectedIndex = 0;\n                    } else {\n                        selectedIndex = selectedIndex + 1;\n                    }\n\n                    this.setState({ selectedIndex });\n                } else {\n                    this.openMenu();\n                }\n                break;\n            case keys.ENTER:\n                if (\n                    this.state.selectedIndex === 0 &&\n                    this.optionIsCreatable(this.options[0])\n                ) {\n                    this.createOption(search!);\n                } else if (\n                    selectedIndex !== undefined &&\n                    this.options[selectedIndex]\n                ) {\n                    const option = this.options[selectedIndex];\n                    const newValue = option.value;\n\n                    this.onOptionSelect(\n                        isArray(value) && multi\n                            ? [...value, newValue]\n                            : newValue,\n                        option\n                    );\n                }\n                break;\n            case keys.ESC:\n                if (open) {\n                    this.closeMenu(value);\n                }\n                break;\n        }\n    }\n\n    private handleBlindText(keyCode: number): void {\n        const { blindText } = this.state;\n\n        if (keyCode === keys.BACKSPACE && blindText.length) {\n            clearTimeout(this.blindTextTimeout);\n\n            this.setState(\n                {\n                    blindText: blindText.slice(0, blindText.length - 1)\n                },\n                this.cleanBlindText\n            );\n        } else if (keyCode === keys.SPACE) {\n            clearTimeout(this.blindTextTimeout);\n\n            this.setState(\n                {\n                    blindText: blindText + ' '\n                },\n                this.cleanBlindText\n            );\n        } else {\n            const key = String.fromCodePoint(keyCode);\n\n            if (/\\w/.test(key)) {\n                clearTimeout(this.blindTextTimeout);\n\n                this.setState(\n                    {\n                        blindText: blindText + key\n                    },\n                    this.cleanBlindText\n                );\n            }\n        }\n    }\n\n    @bind\n    private onContainerRef(el: HTMLDivElement | null): void {\n        this.container = el;\n    }\n\n    private handleBlindTextUpdate(): void {\n        const { open, blindText } = this.state;\n        const { multi } = this.props;\n\n        if (open) {\n            const selectedIndex = this.options.findIndex(option =>\n                option.label.toLowerCase().startsWith(blindText.toLowerCase())\n            );\n\n            if (selectedIndex >= 0) {\n                this.setState({ selectedIndex });\n            }\n        } else if (!multi) {\n            if (blindText) {\n                const option = this.options.find(option =>\n                    option.label\n                        .toLowerCase()\n                        .startsWith(blindText.toLowerCase())\n                );\n\n                if (option) {\n                    this.onOptionSelect(option.value, option);\n                }\n            } else {\n                this.onOptionSelect(undefined);\n            }\n        }\n    }\n}\n","import { Option } from '.';\n\nexport function toKey(\n    value: any,\n    equalCompareProp: string | null = 'id'\n): string | number {\n    if (typeof value === 'string') {\n        return value;\n    }\n\n    if (value && typeof value === 'object') {\n        const jsonObject = value.toJSON ? value.toJSON() : value;\n\n        if (equalCompareProp && jsonObject[equalCompareProp]) {\n            return jsonObject[equalCompareProp];\n        }\n\n        return JSON.stringify(jsonObject);\n    }\n\n    return JSON.stringify(value);\n}\n\nexport function equal(\n    valueA: any,\n    valueB: any,\n    equalCompareProp: string | null = 'id'\n) {\n    if (valueA === valueB) {\n        return true;\n    }\n\n    if (!valueA || !valueB) {\n        return false;\n    }\n\n    if (typeof valueA === 'object' && typeof valueB === 'object') {\n        if (\n            equalCompareProp &&\n            valueA[equalCompareProp] !== undefined &&\n            valueA[equalCompareProp] !== null &&\n            valueB[equalCompareProp] !== undefined &&\n            valueB[equalCompareProp] !== null &&\n            valueA[equalCompareProp] === valueB[equalCompareProp]\n        ) {\n            return true;\n        }\n\n        if (valueA.toJSON && valueB.toJSON) {\n            return (\n                JSON.stringify(valueA.toJSON()) ===\n                JSON.stringify(valueB.toJSON())\n            );\n        }\n\n        return JSON.stringify(valueA) === JSON.stringify(valueB);\n    }\n\n    return false;\n}\n\nexport function replaceUmlauts(str: string) {\n    return str\n        .replace('Ü', 'u')\n        .replace('Ö', 'o')\n        .replace('Ä', 'a')\n        .replace('ü', 'u')\n        .replace('ä', 'a')\n        .replace('ö', 'o');\n}\n\nexport function getValueOptions(\n    options: Option[],\n    value: any,\n    multi: boolean | undefined,\n    equalCompareProp?: string | null\n) {\n    return options.filter(option => {\n        if (isArray(value) && multi) {\n            return value.some(val =>\n                equal(option.value, val, equalCompareProp)\n            );\n        } else {\n            return equal(option.value, value, equalCompareProp);\n        }\n    });\n}\n\nexport function isArray<T = any>(val: any): val is Array<T> {\n    if (Array.isArray(val)) {\n        return true;\n    }\n\n    // this is just a workaround for potential observable arrays\n    if (val && val.map) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getDocument(): Document | undefined {\n    if (typeof document !== 'undefined') {\n        return document;\n    }\n\n    return undefined;\n}\n\nexport function getWindow(): Window | undefined {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n\n    return undefined;\n}\n\nexport function getWindowInnerHeight(defaultHeight = 700): number {\n    const window = getWindow();\n\n    if (window) {\n        return window.innerHeight;\n    }\n\n    return defaultHeight;\n}\n\nexport const keys = {\n    ARROW_UP: 38,\n    ARROW_DOWN: 40,\n    ENTER: 13,\n    TAB: 9,\n    ESC: 27,\n    BACKSPACE: 8,\n    SPACE: 32\n};\n"]}