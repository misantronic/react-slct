{"version":3,"sources":["src/index.tsx","src/value.tsx"],"names":["lodash_decorators_1","$fsx","r","React","styled_components_1","value_1","menu_1","exports","Menu","menu_container_1","utils_1","keys","typings_1","SelectProps","MenuComponentProps","LabelComponentProps","Option","option_1","OptionComponent","value_component_single_1","ValueComponentSingle","value_component_multi_1","ValueComponentMulti","typings_2","OptionComponentProps","ValueComponentSingleProps","ValueComponentMultiProps","Select","PureComponent","[object Object]","props","super","this","container","nativeSelect","createRef","state","open","blindText","options","search","creatable","onCreateText","showCreate","some","option","value","label","filter","toLowerCase","includes","document","getDocument","Boolean","onCreate","_","prevState","handleBlindTextUpdate","removeDocumentListener","Container","className","clearable","placeholder","disabled","error","menuComponent","labelComponent","optionComponent","valueComponentSingle","valueComponentMulti","arrowComponent","clearComponent","multi","native","emptyText","rowHeight","menuWidth","menuHeight","keepSearchOnBlur","selectedIndex","focused","searchable","children","renderChildren","classNames","c","createElement","join","ref","onContainerRef","data-role","onKeyUp","onKeyDown","renderNativeSelect","Value","mobile","onClear","onClick","toggleMenu","onSearch","onSearchFocus","onSearchBlur","onOptionRemove","onSelect","onOptionSelect","NativeSelect","dataRole","undefined","isArray","map","findOptionIndex","multiple","tabIndex","onChange","onChangeNativeSelect","i","key","toKey","valueOptions","getValueOptions","showPlaceholder","length","MenuContainer","onToggle","onClose","closeMenu","onOpen","openMenu","onRef","findIndex","equal","setState","addDocumentListener","callback","cb","addEventListener","onDocumentClick","removeEventListener","blindTextTimeout","setTimeout","val","index","JSON","stringify","String","e","currentTarget","values","Array","from","selectedOptions","htmlOption","current","optionWasCreated","selectOnNative","createValue","find","optionIsCreatable","createOption","target","closest","contains","keyCode","TAB","handleBlindText","ARROW_UP","ARROW_DOWN","ENTER","newValue","ESC","BACKSPACE","clearTimeout","slice","cleanBlindText","SPACE","fromCodePoint","test","el","startsWith","default","div","select","css","tslib_1","__decorate","bind","debounce","SyntheticEvent","_a","Object","_b","KeyboardEvent","_c","_d","label_1","Button","button","ArrowButton","ValueContainer","ValueLeft","hasValue","ValueRight","Placeholder","SelectLabel","ClearButton","ClearContainer","span","ClearX","Search","canSearch","window","getWindow","blur","prevProps","innerText","focus","ArrowComponent","ClearComponent","showClearer","searchAtStart","searchAtEnd","renderSearch","renderValues","type","contentEditable","onInput","onFocus","onBlur","Single","Multi","onRemove","getSelection","createRange","range","sel","selectNodeContents","collapse","removeAllRanges","addRange","stopPropagation","trim","preventDefault","metaKey"],"mappings":"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","sourcesContent":["import { bind, debounce } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Value } from './value';\nimport { Menu } from './menu';\nimport { MenuContainer } from './menu-container';\nimport {\n    isArray,\n    keys,\n    getDocument,\n    getValueOptions,\n    equal,\n    toKey\n} from './utils';\nimport {\n    SelectProps,\n    SelectState,\n    MenuComponentProps,\n    LabelComponentProps,\n    Option\n} from './typings';\nimport './global-stylings';\n\nexport {\n    SelectProps,\n    Menu,\n    MenuComponentProps,\n    LabelComponentProps,\n    Option,\n    keys\n};\nexport { OptionComponent } from './option';\nexport { ValueComponentSingle } from './value-component-single';\nexport { ValueComponentMulti } from './value-component-multi';\nexport {\n    OptionComponentProps,\n    ValueComponentSingleProps,\n    ValueComponentMultiProps\n} from './typings';\n\nexport class Select<T = any> extends React.PureComponent<\n    SelectProps<T>,\n    SelectState\n> {\n    private static Container = styled.div`\n        display: flex;\n        position: relative;\n        cursor: default;\n        width: 100%;\n        box-sizing: border-box;\n        pointer-events: ${(props: { disabled?: boolean }) =>\n            props.disabled ? 'none' : 'auto'};\n        opacity: ${(props: { disabled?: boolean }) =>\n            props.disabled ? 0.75 : 1};\n        user-select: none;\n    `;\n\n    private static NativeSelect = styled.select`\n        display: block;\n        opacity: 0;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        ${(props: { native?: boolean }) =>\n            props.native\n                ? css`\n                      z-index: 1;\n                  `\n                : css`\n                      pointer-events: none;\n                      z-index: auto;\n                  `};\n    `;\n\n    private nativeSelect: React.RefObject<HTMLSelectElement>;\n    private container: HTMLDivElement | null = null;\n    private blindTextTimeout!: number;\n\n    constructor(props: SelectProps) {\n        super(props);\n\n        this.nativeSelect = React.createRef();\n\n        this.state = {\n            open: false,\n            blindText: ''\n        };\n    }\n\n    private get options(): Option<T>[] {\n        const { search } = this.state;\n        const { creatable, onCreateText } = this.props;\n        let options = this.props.options || [];\n        const showCreate =\n            creatable &&\n            !options.some(option => {\n                const { value, label } = option;\n\n                // @ts-ignore\n                return value === search || label === search;\n            });\n\n        if (search) {\n            options = options.filter(option =>\n                option.label.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        if (showCreate && search) {\n            options = [\n                {\n                    label: onCreateText\n                        ? onCreateText(search)\n                        : `Create \"${search}\"`,\n                    value: search as any,\n                    creatable: true\n                },\n                ...options\n            ];\n        }\n\n        return options;\n    }\n\n    private get document() {\n        return getDocument();\n    }\n\n    private optionIsCreatable(option: Option<T>): boolean {\n        return (\n            this.props.creatable &&\n            option.creatable &&\n            Boolean(this.props.onCreate && this.state.search)\n        );\n    }\n\n    public componentDidUpdate(_, prevState: SelectState): void {\n        if (\n            this.state.blindText &&\n            prevState.blindText !== this.state.blindText\n        ) {\n            this.handleBlindTextUpdate();\n        }\n    }\n\n    public componentWillUnmount(): void {\n        this.removeDocumentListener();\n    }\n\n    public render(): React.ReactNode {\n        const { Container } = Select;\n        const {\n            className,\n            options,\n            creatable,\n            clearable,\n            placeholder,\n            value,\n            disabled,\n            error,\n            menuComponent,\n            labelComponent,\n            optionComponent,\n            valueComponentSingle,\n            valueComponentMulti,\n            arrowComponent,\n            clearComponent,\n            multi,\n            native,\n            emptyText,\n            rowHeight,\n            menuWidth,\n            menuHeight,\n            keepSearchOnBlur\n        } = this.props;\n        const { open, search, selectedIndex, focused } = this.state;\n        const searchable = this.props.searchable || creatable;\n\n        if (this.props.children) {\n            return this.renderChildren();\n        }\n\n        const classNames = [\n            'react-slct',\n            className,\n            open && 'open',\n            error && 'has-error'\n        ].filter(c => Boolean(c));\n\n        return (\n            <Container\n                className={classNames.join(' ')}\n                disabled={disabled}\n                ref={this.onContainerRef as any}\n                data-role={this.props['data-role']}\n                onKeyUp={this.onKeyUp}\n                onKeyDown={this.onKeyDown}\n            >\n                {this.renderNativeSelect()}\n                <Value\n                    clearable={clearable}\n                    searchable={searchable}\n                    open={open}\n                    disabled={disabled}\n                    multi={multi}\n                    mobile={native}\n                    focused={focused}\n                    options={options}\n                    placeholder={placeholder}\n                    error={error}\n                    value={value}\n                    search={search}\n                    keepSearchOnBlur={keepSearchOnBlur}\n                    labelComponent={labelComponent}\n                    valueComponentSingle={valueComponentSingle}\n                    valueComponentMulti={valueComponentMulti}\n                    arrowComponent={arrowComponent}\n                    clearComponent={clearComponent}\n                    onClear={this.onClear}\n                    onClick={this.toggleMenu}\n                    onSearch={this.onSearch}\n                    onSearchFocus={this.onSearchFocus}\n                    onSearchBlur={this.onSearchBlur}\n                    onOptionRemove={this.onOptionRemove}\n                />\n                <Menu\n                    open={open}\n                    options={this.options}\n                    value={value}\n                    multi={multi}\n                    error={error}\n                    search={search}\n                    selectedIndex={selectedIndex}\n                    menuComponent={menuComponent}\n                    labelComponent={labelComponent}\n                    optionComponent={optionComponent}\n                    emptyText={emptyText}\n                    rowHeight={rowHeight}\n                    menuWidth={menuWidth}\n                    menuHeight={menuHeight}\n                    onSelect={this.onOptionSelect}\n                />\n            </Container>\n        );\n    }\n\n    private renderNativeSelect(): React.ReactNode {\n        const { NativeSelect } = Select;\n        const { native, placeholder, multi, disabled } = this.props;\n        const dataRole = this.props['data-role']\n            ? `select-${this.props['data-role']}`\n            : undefined;\n        const clearable = this.props.clearable && native;\n        const value = isArray(this.props.value)\n            ? this.props.value.map(this.findOptionIndex)\n            : this.findOptionIndex(this.props.value || '');\n\n        return (\n            <NativeSelect\n                ref={this.nativeSelect as any}\n                multiple={multi}\n                value={value}\n                disabled={disabled}\n                native={native}\n                tabIndex={-1}\n                data-role={dataRole}\n                onChange={this.onChangeNativeSelect}\n            >\n                <option value=\"\" disabled={!clearable}>\n                    {placeholder}\n                </option>\n                {this.options.map((option, i) => (\n                    <option\n                        key={toKey(option.value)}\n                        value={`${i}`}\n                        disabled={option.disabled}\n                    >\n                        {option.label}\n                    </option>\n                ))}\n            </NativeSelect>\n        );\n    }\n\n    private renderChildren(): React.ReactNode {\n        const { options, placeholder, multi, children } = this.props;\n        const { open, search } = this.state;\n        const valueOptions = getValueOptions(options || [], this.props.value);\n        const value: T | T[] | undefined = !multi\n            ? this.props.value\n            : valueOptions.map(option => option.value);\n        const showPlaceholder =\n            !search &&\n            (isArray(value)\n                ? value.length === 0\n                : value === undefined || value === null);\n\n        if (!children) {\n            return null;\n        }\n\n        return children({\n            options: this.options,\n            open,\n            value,\n            MenuContainer,\n            placeholder: showPlaceholder ? placeholder : undefined,\n            onToggle: () => this.toggleMenu(),\n            onClose: () => this.closeMenu(),\n            onOpen: () => this.openMenu(),\n            onRef: ref => (this.container = ref)\n        });\n    }\n\n    @bind\n    private toggleMenu(): void {\n        const open = !this.state.open;\n\n        if (open) {\n            this.openMenu();\n        } else {\n            this.closeMenu();\n        }\n    }\n\n    @debounce(0)\n    private openMenu(): void {\n        const selectedIndex = this.options.findIndex(option =>\n            equal(option.value, this.props.value)\n        );\n        const keepSearchOnBlur =\n            this.props.keepSearchOnBlur && !this.props.value;\n\n        this.setState(\n            {\n                open: true,\n                search: keepSearchOnBlur ? this.state.search : undefined,\n                selectedIndex\n            },\n            () => {\n                if (this.props.onOpen) {\n                    this.props.onOpen();\n                }\n\n                this.addDocumentListener();\n            }\n        );\n    }\n\n    @debounce(0)\n    private closeMenu(callback = () => {}): void {\n        const keepSearchOnBlur =\n            this.props.keepSearchOnBlur && !this.props.value;\n\n        this.removeDocumentListener();\n        this.setState(\n            {\n                open: false,\n                search: keepSearchOnBlur ? this.state.search : undefined,\n                selectedIndex: undefined\n            },\n            () => {\n                if (this.props.onClose) {\n                    this.props.onClose();\n                }\n\n                callback();\n            }\n        );\n    }\n\n    private createOption(value: string, cb?: () => void): void {\n        const { onCreate } = this.props;\n\n        if (onCreate) {\n            this.closeMenu(() => {\n                onCreate(value);\n\n                if (cb) {\n                    cb();\n                }\n            });\n        }\n    }\n\n    private addDocumentListener(): void {\n        this.removeDocumentListener();\n\n        if (this.document) {\n            this.document.addEventListener('click', this.onDocumentClick);\n        }\n    }\n\n    private removeDocumentListener(): void {\n        if (this.document) {\n            this.document.removeEventListener('click', this.onDocumentClick);\n        }\n    }\n\n    @bind\n    private cleanBlindText(): void {\n        this.blindTextTimeout = setTimeout(\n            () => this.setState({ blindText: '' }),\n            700\n        );\n    }\n\n    @bind\n    private findOptionIndex(val: any) {\n        let index = this.options.findIndex(option => option.value === val);\n\n        if (index === -1) {\n            if (typeof val === 'object') {\n                index = this.options.findIndex(option => {\n                    if (typeof option.value === 'object') {\n                        return (\n                            JSON.stringify(option.value) === JSON.stringify(val)\n                        );\n                    }\n\n                    return false;\n                });\n            }\n\n            if (index === -1) {\n                return '';\n            }\n        }\n\n        return String(index);\n    }\n\n    @bind\n    private onChangeNativeSelect(\n        e: React.SyntheticEvent<HTMLSelectElement>\n    ): void {\n        const { onChange, multi } = this.props;\n        const { currentTarget } = e;\n\n        if (onChange) {\n            if (currentTarget.value === '') {\n                this.onClear();\n            } else {\n                const values = Array.from(currentTarget.selectedOptions).map(\n                    htmlOption => this.options[htmlOption.index - 1].value\n                );\n\n                if (multi) {\n                    onChange(values as any);\n                } else {\n                    onChange(values[0] as any);\n                }\n            }\n        }\n    }\n\n    @bind\n    private onSearchFocus(): void {\n        const { open, focused } = this.state;\n\n        if (!open && !focused && !this.props.native) {\n            this.openMenu();\n        }\n\n        this.setState({ focused: true });\n    }\n\n    @bind\n    private onSearchBlur(): void {\n        this.setState({ focused: false });\n    }\n\n    @bind\n    private onOptionSelect(value: any | any[], option?: Option<T>): void {\n        const { current } = this.nativeSelect;\n        const { onChange, creatable } = this.props;\n        let optionWasCreated = false;\n\n        const selectOnNative = () => {\n            if (current) {\n                current.value = isArray(value)\n                    ? (value.map(this.findOptionIndex) as any)\n                    : this.findOptionIndex(value);\n            }\n\n            this.setState({ focused: true }, () =>\n                this.closeMenu(() => onChange && onChange(value, option))\n            );\n        };\n\n        if (creatable) {\n            const createValue = (val: any) => {\n                const option = this.options.find(\n                    option =>\n                        this.optionIsCreatable(option) && option.value === val\n                );\n\n                if (option) {\n                    optionWasCreated = true;\n                    this.createOption(option.value as any, selectOnNative);\n                }\n            };\n\n            if (isArray(value)) {\n                value.map(createValue);\n            } else {\n                createValue(value);\n            }\n        }\n\n        if (!optionWasCreated) {\n            selectOnNative();\n        }\n    }\n\n    @bind\n    private onOptionRemove(value: any): void {\n        if (isArray(this.props.value)) {\n            const values = this.props.value.filter(val => !equal(val, value));\n\n            this.onOptionSelect(values);\n        }\n    }\n\n    @bind\n    private onClear(): void {\n        this.onOptionSelect(this.props.multi ? [] : undefined);\n    }\n\n    @bind\n    private onSearch(search: string): void {\n        this.setState({ search }, () => {\n            if (this.options.length === 1 || (this.props.creatable && search)) {\n                this.setState({ selectedIndex: 0 });\n            } else {\n                this.setState({ selectedIndex: undefined });\n            }\n\n            if (this.props.onSearch) {\n                this.props.onSearch(search);\n            }\n        });\n    }\n\n    @bind\n    private onDocumentClick(e): void {\n        const { target } = e;\n\n        if (\n            target.closest('.react-slct-menu') ||\n            target.closest('.react-slct-value')\n        ) {\n            return;\n        }\n\n        if (this.container && !this.container.contains(target)) {\n            this.closeMenu();\n        }\n    }\n\n    @bind\n    private onKeyDown({ keyCode }: React.KeyboardEvent): void {\n        const { searchable, creatable } = this.props;\n\n        switch (keyCode) {\n            case keys.TAB:\n                if (this.state.open) {\n                    this.closeMenu();\n                }\n                break;\n        }\n\n        if (!searchable && !creatable) {\n            this.handleBlindText(keyCode);\n        }\n    }\n\n    @bind\n    private onKeyUp({ keyCode }: React.KeyboardEvent): void {\n        const { search, open } = this.state;\n        const { value } = this.props;\n        let selectedIndex = this.state.selectedIndex;\n\n        switch (keyCode) {\n            case keys.ARROW_UP:\n                if (open) {\n                    if (selectedIndex !== undefined) {\n                        selectedIndex = selectedIndex - 1;\n\n                        if (selectedIndex < 0) {\n                            selectedIndex = this.options.length - 1;\n                        }\n                    }\n\n                    this.setState({ selectedIndex });\n                } else {\n                    this.openMenu();\n                }\n                break;\n            case keys.ARROW_DOWN:\n                if (open) {\n                    if (\n                        selectedIndex === undefined ||\n                        selectedIndex === this.options.length - 1\n                    ) {\n                        selectedIndex = 0;\n                    } else {\n                        selectedIndex = selectedIndex + 1;\n                    }\n\n                    this.setState({ selectedIndex });\n                } else {\n                    this.openMenu();\n                }\n                break;\n            case keys.ENTER:\n                if (\n                    this.state.selectedIndex === 0 &&\n                    this.optionIsCreatable(this.options[0])\n                ) {\n                    this.createOption(search!);\n                } else if (\n                    selectedIndex !== undefined &&\n                    this.options[selectedIndex]\n                ) {\n                    const option = this.options[selectedIndex];\n                    const newValue = option.value;\n\n                    this.onOptionSelect(\n                        isArray(value) ? [...value, newValue] : newValue,\n                        option\n                    );\n                }\n                break;\n            case keys.ESC:\n                if (open) {\n                    this.closeMenu();\n                }\n                break;\n        }\n    }\n\n    private handleBlindText(keyCode: number): void {\n        const { blindText } = this.state;\n\n        if (keyCode === keys.BACKSPACE && blindText.length) {\n            clearTimeout(this.blindTextTimeout);\n\n            this.setState(\n                {\n                    blindText: blindText.slice(0, blindText.length - 1)\n                },\n                this.cleanBlindText\n            );\n        } else if (keyCode === keys.SPACE) {\n            clearTimeout(this.blindTextTimeout);\n\n            this.setState(\n                {\n                    blindText: blindText + ' '\n                },\n                this.cleanBlindText\n            );\n        } else {\n            const key = String.fromCodePoint(keyCode);\n\n            if (/\\w/.test(key)) {\n                clearTimeout(this.blindTextTimeout);\n\n                this.setState(\n                    {\n                        blindText: blindText + key\n                    },\n                    this.cleanBlindText\n                );\n            }\n        }\n    }\n\n    @bind\n    private onContainerRef(el: HTMLDivElement | null): void {\n        this.container = el;\n    }\n\n    private handleBlindTextUpdate(): void {\n        const { open, blindText } = this.state;\n        const { multi } = this.props;\n\n        if (open) {\n            const selectedIndex = this.options.findIndex(option =>\n                option.label.toLowerCase().startsWith(blindText.toLowerCase())\n            );\n\n            if (selectedIndex >= 0) {\n                this.setState({ selectedIndex });\n            }\n        } else if (!multi) {\n            if (blindText) {\n                const option = this.options.find(option =>\n                    option.label\n                        .toLowerCase()\n                        .startsWith(blindText.toLowerCase())\n                );\n\n                if (option) {\n                    this.onOptionSelect(option.value, option);\n                }\n            } else {\n                this.onOptionSelect(undefined);\n            }\n        }\n    }\n}\n","import { bind } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { SelectLabel } from './label';\nimport { keys, getValueOptions, getWindow, toKey } from './utils';\nimport { SelectProps, Option } from './typings';\nimport { ValueComponentMulti } from './value-component-multi';\nimport { ValueComponentSingle } from './value-component-single';\n\nexport interface ValueProps {\n    options: SelectProps['options'];\n    value: SelectProps['value'];\n    placeholder: SelectProps['placeholder'];\n    clearable: SelectProps['clearable'];\n    searchable: SelectProps['searchable'];\n    labelComponent: SelectProps['labelComponent'];\n    valueComponentSingle: SelectProps['valueComponentSingle'];\n    valueComponentMulti: SelectProps['valueComponentMulti'];\n    arrowComponent: SelectProps['arrowComponent'];\n    clearComponent: SelectProps['clearComponent'];\n    multi: SelectProps['multi'];\n    mobile: SelectProps['native'];\n    disabled: SelectProps['disabled'];\n    error: SelectProps['error'];\n    search?: string;\n    keepSearchOnBlur?: boolean;\n    open: boolean;\n    focused?: boolean;\n    onClear(): void;\n    onClick(): void;\n    onSearch(search: string): void;\n    onSearchFocus(): void;\n    onSearchBlur(): void;\n    onOptionRemove(value: any): void;\n}\n\ninterface SearchProps {\n    canSearch?: boolean;\n}\n\ninterface ValueContainerProps {\n    mobile?: boolean;\n    disabled?: boolean;\n    focused?: boolean;\n    error?: boolean;\n}\n\ninterface ValueLeftProps {\n    multi?: boolean;\n    hasValue?: boolean;\n}\n\nconst Button = styled.button`\n    background: transparent;\n    border: none;\n    margin: 0;\n    font-size: 20px;\n    padding: 0;\n    line-height: 1;\n    cursor: pointer;\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst ArrowButton = styled(Button)`\n    font-size: 12px;\n    color: #ccc;\n    transform: translateY(2px);\n\n    &:hover {\n        color: #333;\n    }\n`;\n\nconst ValueContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex: 1;\n    min-height: 32px;\n    pointer-events: ${(props: ValueContainerProps) =>\n        props.mobile || props.disabled ? 'none' : 'auto'};\n    padding: 5px 10px;\n    background: #fff;\n    cursor: default;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${(props: ValueContainerProps) =>\n        props.error ? 'var(--react-slct-error-color)' : '#ccc'};\n    z-index: 0;\n    box-sizing: border-box;\n    max-width: 100%;\n    box-shadow: ${(props: ValueContainerProps) =>\n        props.focused ? 'rgba(0, 0, 0, 0.15) 0 0 2px' : 'none'};\n`;\n\nconst ValueLeft = styled.div`\n    display: flex;\n    flex: 1;\n    align-items: center;\n    flex-wrap: ${(props: ValueLeftProps) =>\n        props.multi && props.hasValue ? 'wrap' : 'nowrap'};\n    user-select: none;\n    min-width: 0;\n    box-sizing: border-box;\n    margin: ${(props: ValueLeftProps) =>\n        props.multi && props.hasValue ? '-2px -5px' : 0};\n`;\n\nconst ValueRight = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 4px;\n    box-sizing: border-box;\n`;\n\nconst Placeholder = styled(SelectLabel)`\n    color: #aaa;\n`;\n\nconst ClearButton = styled(Button)`\n    margin-right: 6px;\n`;\n\nconst ClearContainer = styled.span`\n    color: #ccc;\n\n    &:hover {\n        color: #333;\n    }\n`;\n\nconst ClearX = () => <ClearContainer>×</ClearContainer>;\n\nconst Search = styled.span`\n    min-width: 1px;\n    margin-left: -1px;\n    height: 16px;\n    opacity: ${(props: SearchProps) => (props.canSearch ? 1 : 0)};\n    user-select: text;\n    position: ${(props: SearchProps) =>\n        props.canSearch ? 'static' : 'absolute'};\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport class Value extends React.PureComponent<ValueProps> {\n    search: React.RefObject<HTMLSpanElement>;\n\n    constructor(props: ValueProps) {\n        super(props);\n\n        this.search = React.createRef();\n\n        const window = getWindow();\n\n        if (window) {\n            window.addEventListener('blur', this.blur);\n        }\n    }\n\n    public componentDidUpdate(prevProps: ValueProps): void {\n        if (prevProps.search && !this.props.search && this.search.current) {\n            this.search.current.innerText = '';\n        }\n\n        if (prevProps.focused !== this.props.focused && this.props.focused) {\n            this.focus();\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            options = [],\n            value,\n            disabled,\n            clearable,\n            open,\n            mobile,\n            multi,\n            focused,\n            error\n        } = this.props;\n        const ArrowComponent = this.props.arrowComponent;\n        const ClearComponent = this.props.clearComponent || ClearX;\n        const valueOptions = getValueOptions(options, value);\n        const showClearer = Boolean(\n            clearable && valueOptions.length && !mobile\n        );\n        const searchAtStart = !multi || valueOptions.length === 0;\n        const searchAtEnd = multi && valueOptions.length > 0;\n\n        return (\n            <ValueContainer\n                data-role=\"value\"\n                className=\"react-slct-value\"\n                disabled={disabled}\n                mobile={mobile}\n                focused={focused}\n                error={error}\n                onClick={this.onClick}\n            >\n                <ValueLeft\n                    className=\"value-left\"\n                    multi={multi}\n                    hasValue={!!valueOptions.length}\n                >\n                    {searchAtStart && this.renderSearch()}\n                    {this.renderValues(valueOptions)}\n                    {searchAtEnd && this.renderSearch()}\n                </ValueLeft>\n                <ValueRight className=\"value-right\">\n                    {showClearer && (\n                        <ClearButton\n                            type=\"button\"\n                            tabIndex={-1}\n                            className=\"clearer\"\n                            onClick={this.onClear}\n                        >\n                            <ClearComponent />\n                        </ClearButton>\n                    )}\n                    <ArrowButton type=\"button\" className=\"arrow\" tabIndex={-1}>\n                        {ArrowComponent ? (\n                            <ArrowComponent open={open} />\n                        ) : open ? (\n                            '▲'\n                        ) : (\n                            '▼'\n                        )}\n                    </ArrowButton>\n                </ValueRight>\n            </ValueContainer>\n        );\n    }\n\n    private renderSearch(): React.ReactNode {\n        const {\n            open,\n            value,\n            disabled,\n            searchable,\n            search,\n            keepSearchOnBlur,\n            onSearchFocus,\n            onSearchBlur\n        } = this.props;\n        const canSearch =\n            (open && searchable) ||\n            (keepSearchOnBlur && !value && searchable) ||\n            Boolean(search);\n\n        if (disabled && !keepSearchOnBlur) {\n            return null;\n        }\n\n        return (\n            <Search\n                className=\"search\"\n                contentEditable\n                canSearch={canSearch}\n                onInput={this.onSearch}\n                onKeyDown={this.onKeyDown}\n                onFocus={onSearchFocus}\n                onBlur={onSearchBlur}\n                ref={this.search as any}\n            />\n        );\n    }\n\n    private renderValues(valueOptions: Option[]): React.ReactNode {\n        const {\n            placeholder,\n            search,\n            labelComponent,\n            valueComponentSingle,\n            valueComponentMulti,\n            multi,\n            open\n        } = this.props;\n\n        if (search && open && !multi) {\n            return null;\n        }\n\n        if (valueOptions.length === 0 && !search) {\n            return <Placeholder>{placeholder}</Placeholder>;\n        }\n\n        const Single = valueComponentSingle || ValueComponentSingle;\n        const Multi = (valueComponentMulti || ValueComponentMulti) as any;\n\n        return valueOptions.map(option =>\n            multi ? (\n                <Multi\n                    key={toKey(option.value)}\n                    option={option}\n                    labelComponent={labelComponent}\n                    options={valueOptions}\n                    onRemove={this.props.onOptionRemove}\n                />\n            ) : (\n                <Single\n                    key={toKey(option.value)}\n                    option={option}\n                    labelComponent={labelComponent}\n                />\n            )\n        );\n    }\n\n    private focus(): void {\n        const el = this.search.current;\n\n        if (el) {\n            el.focus();\n\n            if (\n                typeof window.getSelection != 'undefined' &&\n                typeof document.createRange != 'undefined'\n            ) {\n                const range = document.createRange();\n                const sel = window.getSelection();\n\n                range.selectNodeContents(el);\n                range.collapse(false);\n\n                if (sel) {\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n            }\n        }\n    }\n\n    @bind\n    private blur(): void {\n        if (this.search.current) {\n            this.search.current.blur();\n        }\n    }\n\n    @bind\n    private onClick(): void {\n        if (!this.props.disabled) {\n            this.focus();\n            this.props.onClick();\n        }\n    }\n\n    @bind\n    private onClear(e: React.SyntheticEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n\n    @bind\n    private onSearch(e: React.KeyboardEvent<HTMLSpanElement>) {\n        if (this.props.searchable) {\n            this.props.onSearch(e.currentTarget.innerText.trim());\n        } else {\n            e.preventDefault();\n        }\n    }\n\n    @bind\n    private onKeyDown(e: React.KeyboardEvent<HTMLSpanElement>) {\n        const { searchable } = this.props;\n\n        if (e.metaKey) {\n            return;\n        }\n\n        if (\n            (!searchable && e.keyCode !== keys.TAB) ||\n            e.keyCode === keys.ENTER ||\n            e.keyCode === keys.ARROW_UP ||\n            e.keyCode === keys.ARROW_DOWN\n        ) {\n            e.preventDefault();\n        }\n    }\n}\n"]}