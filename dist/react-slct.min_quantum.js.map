{"version":3,"sources":["src/index.tsx","src/menu.tsx","src/menu-container.tsx","src/config.ts","src/value.tsx"],"names":["React","$fsx","r","styled_components_1","menu_1","Object","defineProperty","exports","enumerable","get","Menu","menu_container_1","typings_1","LabelComponentProps","MenuComponentProps","Option","SelectProps","utils_1","keys","value_1","option_1","OptionComponent","typings_2","OptionComponentProps","ValueComponentMultiProps","ValueComponentSingleProps","SelectStaticControl","value_component_multi_1","ValueComponentMulti","value_component_single_1","ValueComponentSingle","tslib_1","__exportStar","Container","default","div","props","disabled","NativeSelect","select","native","css","Select","forwardRef","ref","useRef","open","setOpen","useState","blindText","setBlindText","selectedIndex","setSelectedIndex","undefined","search","setSearch","focused","setFocused","blindTextTimeout","nativeSelect","className","creatable","clearable","placeholder","value","error","menuComponent","labelComponent","optionComponent","valueComponentSingle","valueComponentMulti","arrowComponent","clearComponent","hideSelectedOptions","equalCompareProp","multi","emptyText","rowHeight","menuWidth","menuHeight","keepSearchOnBlur","required","creatableText","searchable","document","getDocument","options","newOptions","showCreate","some","option","label","filter","replaceUmlauts","toLowerCase","includes","getOptions","toggleMenu","openMenu","closeMenu","findIndex","equal","_a","onOpen","call","removeDocumentListener","addEventListener","onDocumentClick","callback","onClose","createOption","cb","onCreate","removeEventListener","cleanBlindText","current","setTimeout","findOptionIndex","val","index","String","onChangeNativeSelect","e","currentTarget","onChange","onClear","values","Array","from","selectedOptions","map","htmlOption","onOptionSelect","optionWasCreated","selectOnNative","isArray","createValue","find","optionIsCreatable","Boolean","useEffect","newSelectedIndex","startsWith","handleBlindTextUpdate","control","close","getValue","Function","useCallback","target","closest","contains","valueOptions","getValueOptions","children","showPlaceholder","length","MenuContainer","onToggle","onRef","renderChildren","classNames","c","createElement","join","data-role","onKeyUp","keyCode","ARROW_UP","ARROW_DOWN","ENTER","newValue","ESC","onKeyDown","TAB","BACKSPACE","clearTimeout","slice","SPACE","key","fromCodePoint","test","handleBlindText","dataRole","propDisabled","multiple","tabIndex","i","toKey","renderNativeSelect","Value","mobile","valueIconComponent","onClick","onSearch","onSearchFocus","onSearchBlur","onOptionRemove","onSelect","react_1","react_window_1","label_1","menu_row_1","EmptyOptionItem","OptionItem","Empty","SelectLabel","currentValue","useMemo","rect","setRect","style","setStyle","list","width","assumedHeight","Math","min","max","actualHeight","height","scrollToItem","itemData","assign","item","Set","onRect","onStyle","MenuContent","itemCount","FixedSizeList","itemSize","MenuRow","renderList","react_dom_1","config_1","menuPosition","top","getWindowInnerHeight","MenuOverlay","MenuWrapper","ReactSlctColors","window","getWindow","menuOverlay","menuWrapper","menuOverlayRect","setMenuOverlayRect","menuWrapperRect","setMenuWrapperRect","menuLeft","menuTop","scrollY","getContainerTop","left","numWidth","Number","innerWidth","calcMenuOverlay","clientRect","getBoundingClientRect","round","calcMenuWrapper","onViewportChange","allowRectChange","createPortal","body","lodash_decorators_1","Button","button","ArrowButton","ValueContainer","ValueLeft","hasValue","ValueRight","Placeholder","ClearButton","ClearContainer","span","ClearX","Search","canSearch","PureComponent","[object Object]","super","this","createRef","blur","prevProps","innerText","focus","ArrowComponent","ClearComponent","ValueIconComponent","showClearer","searchAtStart","searchAtEnd","renderSearch","renderValues","type","contentEditable","onInput","onFocus","onBlur","Single","Multi","onRemove","el","getSelection","createRange","range","sel","selectNodeContents","collapse","removeAllRanges","addRange","stopPropagation","trim","preventDefault","metaKey","__decorate","bind","SyntheticEvent","KeyboardEvent","_b","_c"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Menu } from './menu';\nimport { MenuContainer } from './menu-container';\nimport {\n    LabelComponentProps,\n    MenuComponentProps,\n    Option,\n    SelectProps\n} from './typings';\nimport {\n    equal,\n    getDocument,\n    getValueOptions,\n    isArray,\n    keys,\n    replaceUmlauts,\n    toKey\n} from './utils';\nimport { Value } from './value';\nexport { OptionComponent } from './option';\nexport {\n    OptionComponentProps,\n    ValueComponentMultiProps,\n    ValueComponentSingleProps,\n    SelectStaticControl\n} from './typings';\nexport { ValueComponentMulti } from './value-component-multi';\nexport { ValueComponentSingle } from './value-component-single';\nexport * from './config';\nexport {\n    SelectProps,\n    Menu,\n    MenuComponentProps,\n    LabelComponentProps,\n    Option,\n    keys\n};\n\nconst Container = styled.div`\n    display: flex;\n    position: relative;\n    cursor: default;\n    width: 100%;\n    box-sizing: border-box;\n    pointer-events: ${(props: { disabled?: boolean }) =>\n        props.disabled ? 'none' : 'auto'};\n    opacity: ${(props: { disabled?: boolean }) => (props.disabled ? 0.75 : 1)};\n    user-select: none;\n`;\n\nconst NativeSelect = styled.select`\n    display: block;\n    opacity: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    ${(props: { native?: boolean }) =>\n        props.native\n            ? css`\n                  z-index: 1;\n              `\n            : css`\n                  pointer-events: none;\n                  z-index: auto;\n              `};\n`;\n\nfunction SelectImpl<T = any>(\n    props: SelectProps<T>,\n    ref: React.Ref<HTMLDivElement> | null\n): JSX.Element | null {\n    if (!ref) {\n        ref = React.useRef<HTMLDivElement>(null);\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [blindText, setBlindText] = React.useState('');\n    const [selectedIndex, setSelectedIndex] = React.useState<\n        number | undefined\n    >(undefined);\n    const [search, setSearch] = React.useState<string | undefined>(undefined);\n    const [focused, setFocused] = React.useState(false);\n    const blindTextTimeout = React.useRef(0);\n    const nativeSelect = React.useRef<HTMLSelectElement>(null);\n\n    const {\n        className,\n        creatable,\n        clearable,\n        placeholder,\n        value,\n        disabled,\n        error,\n        menuComponent,\n        labelComponent,\n        optionComponent,\n        valueComponentSingle,\n        valueComponentMulti,\n        arrowComponent,\n        clearComponent,\n        hideSelectedOptions,\n        equalCompareProp,\n        multi,\n        native,\n        emptyText,\n        rowHeight,\n        menuWidth,\n        menuHeight,\n        keepSearchOnBlur,\n        required,\n        creatableText\n    } = props;\n    const searchable = props.searchable || creatable;\n    const document = getDocument();\n    const options = getOptions();\n\n    React.useEffect(() => {\n        if (blindText) {\n            handleBlindTextUpdate();\n        }\n    }, [blindText]);\n\n    React.useEffect(() => {\n        if (props.control) {\n            const ref = { close: () => closeMenu(getValue()), open: openMenu };\n\n            if (props.control instanceof Function) {\n                props.control(ref);\n            } else if (props.control instanceof Object) {\n                props.control.current = ref;\n            }\n        }\n    }, [props.control]);\n\n    function getOptions(): Option<T>[] {\n        let newOptions = props.options || [];\n        const showCreate =\n            creatable &&\n            !newOptions.some((option) => {\n                const { value, label } = option;\n\n                return (\n                    (typeof value === 'string' && value === search) ||\n                    label === search\n                );\n            });\n\n        if (search) {\n            newOptions = newOptions.filter((option) =>\n                replaceUmlauts(option.label)\n                    .toLowerCase()\n                    .includes(replaceUmlauts(search).toLowerCase())\n            );\n        }\n\n        if (showCreate && search) {\n            const label = creatableText\n                ? typeof creatableText === 'string'\n                    ? creatableText\n                    : creatableText(search)\n                : `Create \"${search}\"`;\n\n            newOptions = [\n                {\n                    label,\n                    value: search as any,\n                    creatable: true\n                },\n                ...newOptions\n            ];\n        }\n\n        return newOptions;\n    }\n\n    function toggleMenu(): void {\n        const newOpen = !open;\n\n        if (newOpen) {\n            openMenu();\n        } else {\n            closeMenu(props.value);\n        }\n    }\n\n    function openMenu(): void {\n        const selectedIndex = props.hideSelectedOptions\n            ? undefined\n            : options.findIndex((option) =>\n                  equal(option.value, props.value, props.equalCompareProp)\n              );\n        const keepSearchOnBlur = props.keepSearchOnBlur && !props.value;\n\n        setOpen(true);\n        setSearch(keepSearchOnBlur ? search : undefined);\n        setSelectedIndex(selectedIndex);\n        props.onOpen?.();\n\n        addDocumentListener();\n    }\n\n    function closeMenu(value: any | any[], callback = () => {}): void {\n        const keepSearchOnBlur = props.keepSearchOnBlur && !value;\n\n        removeDocumentListener();\n        setOpen(false);\n        setSearch(keepSearchOnBlur ? search : undefined);\n        setSelectedIndex(undefined);\n        props.onClose?.();\n\n        callback();\n    }\n\n    function createOption(value: string, cb?: () => void): void {\n        if (props.onCreate) {\n            closeMenu(value, () => {\n                props.onCreate?.(value);\n                cb?.();\n            });\n        }\n    }\n\n    function addDocumentListener(): void {\n        removeDocumentListener();\n\n        document?.addEventListener('click', onDocumentClick);\n    }\n\n    function removeDocumentListener(): void {\n        document?.removeEventListener('click', onDocumentClick);\n    }\n\n    function cleanBlindText(): void {\n        blindTextTimeout.current = setTimeout(() => setBlindText(''), 700);\n    }\n\n    function findOptionIndex(val: any) {\n        let index = options.findIndex((option) => option.value === val);\n\n        if (index === -1) {\n            if (typeof val === 'object') {\n                index = options.findIndex((option) =>\n                    equal(option.value, val, props.equalCompareProp)\n                );\n            }\n\n            if (index === -1) {\n                return '';\n            }\n        }\n\n        return String(index);\n    }\n\n    function onChangeNativeSelect(e: React.SyntheticEvent<HTMLSelectElement>) {\n        const { currentTarget } = e;\n\n        if (props.onChange) {\n            if (currentTarget.value === '') {\n                onClear();\n            } else {\n                const values = Array.from(currentTarget.selectedOptions).map(\n                    (htmlOption) => options[htmlOption.index - 1].value\n                );\n\n                if (multi) {\n                    props.onChange(values as any);\n                } else {\n                    props.onChange(values[0] as any);\n                }\n            }\n        }\n    }\n\n    function onSearchFocus() {\n        if (!open && !focused && !native) {\n            openMenu();\n        }\n\n        setFocused(true);\n    }\n\n    function onSearchBlur() {\n        setFocused(false);\n    }\n\n    function onOptionSelect(value: any | any[], option?: Option<T>): void {\n        const { current } = nativeSelect;\n        let optionWasCreated = false;\n\n        const selectOnNative = () => {\n            if (current) {\n                current.value =\n                    isArray(value) && multi\n                        ? (value.map(findOptionIndex) as any)\n                        : findOptionIndex(value);\n            }\n\n            setFocused(true);\n            closeMenu(value, () => props.onChange?.(value, option));\n        };\n\n        if (creatable) {\n            const createValue = (val: any) => {\n                const option = options.find(\n                    (option) =>\n                        optionIsCreatable(option) && option.value === val\n                );\n\n                if (option) {\n                    optionWasCreated = true;\n                    createOption(option.value as any, selectOnNative);\n                }\n            };\n\n            if (isArray(value) && multi) {\n                value.map(createValue);\n            } else {\n                createValue(value);\n            }\n        }\n\n        if (!optionWasCreated) {\n            selectOnNative();\n        }\n    }\n\n    function onOptionRemove(value: any): void {\n        if (isArray(props.value) && props.multi) {\n            const values = props.value.filter(\n                (val) => !equal(val, value, props.equalCompareProp)\n            );\n\n            onOptionSelect(values);\n        }\n    }\n\n    function onClear() {\n        onOptionSelect(props.multi ? [] : undefined);\n    }\n\n    function onSearch(search: string): void {\n        setSearch(search);\n        setOpen(true);\n\n        if (options.length === 1 || (props.creatable && search)) {\n            setSelectedIndex(0);\n        } else {\n            setSelectedIndex(undefined);\n        }\n\n        props.onSearch?.(search);\n    }\n\n    function optionIsCreatable(option: Option<T>): boolean {\n        return (\n            creatable && option.creatable && Boolean(props.onCreate && search)\n        );\n    }\n\n    const onDocumentClick = React.useCallback((e) => {\n        const { target } = e;\n\n        if (target.closest('.react-slct-menu')) {\n            return;\n        }\n\n        if (typeof ref === 'object' && !ref?.current?.contains(target)) {\n            closeMenu(props.value);\n        }\n    }, []);\n\n    function onKeyDown({ keyCode }: React.KeyboardEvent): void {\n        switch (keyCode) {\n            case keys.TAB:\n                if (open) {\n                    closeMenu(props.value);\n                }\n                break;\n        }\n\n        if (!searchable && !creatable) {\n            handleBlindText(keyCode);\n        }\n    }\n\n    function onKeyUp({ keyCode }: React.KeyboardEvent): void {\n        let newSelectedIndex = selectedIndex;\n\n        switch (keyCode) {\n            case keys.ARROW_UP:\n                if (open) {\n                    if (newSelectedIndex !== undefined) {\n                        newSelectedIndex = newSelectedIndex - 1;\n\n                        if (newSelectedIndex < 0) {\n                            newSelectedIndex = options.length - 1;\n                        }\n                    }\n\n                    setSelectedIndex(newSelectedIndex);\n                } else {\n                    openMenu();\n                }\n                break;\n            case keys.ARROW_DOWN:\n                if (open) {\n                    if (\n                        newSelectedIndex === undefined ||\n                        newSelectedIndex === options.length - 1\n                    ) {\n                        newSelectedIndex = 0;\n                    } else {\n                        newSelectedIndex = newSelectedIndex + 1;\n                    }\n\n                    setSelectedIndex(newSelectedIndex);\n                } else {\n                    openMenu();\n                }\n                break;\n            case keys.ENTER:\n                if (selectedIndex === 0 && optionIsCreatable(options[0])) {\n                    createOption(search!);\n                } else if (\n                    newSelectedIndex !== undefined &&\n                    options[newSelectedIndex]\n                ) {\n                    const option = options[newSelectedIndex];\n                    const newValue = option.value;\n\n                    onOptionSelect(\n                        isArray(value) && multi\n                            ? [...value, newValue]\n                            : newValue,\n                        option\n                    );\n                }\n                break;\n            case keys.ESC:\n                if (open) {\n                    closeMenu(value);\n                }\n                break;\n        }\n    }\n\n    function handleBlindText(keyCode: number): void {\n        if (keyCode === keys.BACKSPACE && blindText.length) {\n            clearTimeout(blindTextTimeout.current);\n\n            setBlindText(blindText.slice(0, blindText.length - 1));\n            cleanBlindText();\n        } else if (keyCode === keys.SPACE) {\n            clearTimeout(blindTextTimeout.current);\n\n            setBlindText(blindText + ' ');\n            cleanBlindText();\n        } else {\n            const key = String.fromCodePoint(keyCode);\n\n            if (/\\w/.test(key)) {\n                clearTimeout(blindTextTimeout.current);\n\n                setBlindText(blindText + key);\n                cleanBlindText();\n            }\n        }\n    }\n\n    function handleBlindTextUpdate(): void {\n        if (open) {\n            const newSelectedIndex = options.findIndex((option) =>\n                option.label.toLowerCase().startsWith(blindText.toLowerCase())\n            );\n\n            if (newSelectedIndex >= 0) {\n                setSelectedIndex(newSelectedIndex);\n            }\n        } else if (!multi) {\n            if (blindText) {\n                const option = options.find((option) =>\n                    option.label\n                        .toLowerCase()\n                        .startsWith(blindText.toLowerCase())\n                );\n\n                if (option) {\n                    onOptionSelect(option.value, option);\n                }\n            } else {\n                onOptionSelect(undefined);\n            }\n        }\n    }\n\n    function getValue(): T | T[] | undefined {\n        const valueOptions = getValueOptions(\n            props.options || [],\n            props.value,\n            props.multi,\n            props.equalCompareProp\n        );\n        return !multi\n            ? props.value\n            : valueOptions.map((option) => option.value);\n    }\n\n    function renderChildren(): JSX.Element | null {\n        const value = getValue();\n        const showPlaceholder =\n            !search &&\n            (isArray(value) && multi\n                ? value.length === 0\n                : value === undefined || value === null);\n\n        if (!props.children) {\n            return null;\n        }\n\n        return props.children({\n            options,\n            open,\n            value,\n            MenuContainer,\n            placeholder: showPlaceholder ? placeholder : undefined,\n            onToggle: toggleMenu,\n            onClose: () => closeMenu(value),\n            onOpen: openMenu,\n            onRef: ref\n        });\n    }\n\n    function renderNativeSelect(): React.ReactNode {\n        const dataRole = props['data-role']\n            ? `select-${props['data-role']}`\n            : undefined;\n        const clearable = props.clearable && native;\n        const value =\n            isArray(props.value) && multi\n                ? props.value.map(findOptionIndex)\n                : findOptionIndex(props.value || '');\n        const propDisabled = disabled ? disabled : required ? false : !native;\n\n        return (\n            <NativeSelect\n                ref={nativeSelect as any}\n                multiple={multi}\n                value={value}\n                disabled={propDisabled}\n                required={required}\n                native={native}\n                tabIndex={-1}\n                data-role={dataRole}\n                onChange={onChangeNativeSelect}\n            >\n                <option value=\"\" disabled={!clearable}>\n                    {placeholder}\n                </option>\n                {options.map((option, i) => (\n                    <option\n                        key={toKey(option.value, props.equalCompareProp)}\n                        value={`${i}`}\n                        disabled={option.disabled}\n                    >\n                        {option.label}\n                    </option>\n                ))}\n            </NativeSelect>\n        );\n    }\n\n    if (props.children) {\n        return renderChildren();\n    }\n\n    const classNames = [\n        'react-slct',\n        className,\n        open && 'open',\n        error && 'has-error'\n    ].filter((c) => Boolean(c));\n\n    return (\n        <Container\n            className={classNames.join(' ')}\n            disabled={disabled}\n            ref={ref}\n            data-role={props['data-role']}\n            onKeyUp={onKeyUp}\n            onKeyDown={onKeyDown}\n        >\n            {renderNativeSelect()}\n            <Value\n                clearable={clearable}\n                searchable={searchable}\n                open={open}\n                disabled={disabled}\n                multi={multi}\n                mobile={native}\n                focused={focused}\n                options={props.options}\n                placeholder={placeholder}\n                error={error}\n                value={value}\n                search={search}\n                keepSearchOnBlur={keepSearchOnBlur}\n                equalCompareProp={equalCompareProp}\n                labelComponent={labelComponent}\n                valueComponentSingle={valueComponentSingle}\n                valueComponentMulti={valueComponentMulti}\n                arrowComponent={arrowComponent}\n                clearComponent={clearComponent}\n                valueIconComponent={props.valueIconComponent}\n                onClear={onClear}\n                onClick={toggleMenu}\n                onSearch={onSearch}\n                onSearchFocus={onSearchFocus}\n                onSearchBlur={onSearchBlur}\n                onOptionRemove={onOptionRemove}\n            />\n            <Menu\n                open={open}\n                options={options}\n                value={value}\n                multi={multi}\n                error={error}\n                search={search}\n                selectedIndex={selectedIndex}\n                menuComponent={menuComponent}\n                labelComponent={labelComponent}\n                optionComponent={optionComponent}\n                hideSelectedOptions={hideSelectedOptions}\n                equalCompareProp={equalCompareProp}\n                emptyText={emptyText}\n                rowHeight={rowHeight}\n                menuWidth={menuWidth}\n                menuHeight={menuHeight}\n                onSelect={onOptionSelect}\n            />\n        </Container>\n    );\n}\n\nexport const Select = React.forwardRef<HTMLDivElement, SelectProps<any>>(\n    SelectImpl\n);\n","import * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { FixedSizeList } from 'react-window';\nimport styled from 'styled-components';\nimport { SelectLabel } from './label';\nimport { MenuContainer } from './menu-container';\nimport { MenuRow } from './menu-row';\nimport { OptionComponent } from './option';\nimport { MenuComponentProps, Option, Rect } from './typings';\nimport { equal, isArray } from './utils';\n\nconst EmptyOptionItem = styled(OptionComponent.OptionItem)`\n    height: 100%;\n    border: 1px solid #ccc;\n`;\n\nconst Empty = (props: { emptyText?: string }) => (\n    <EmptyOptionItem>\n        <SelectLabel>\n            <i>{props.emptyText || 'No results'}</i>\n        </SelectLabel>\n    </EmptyOptionItem>\n);\n\nexport function Menu(props: MenuComponentProps) {\n    const {\n        rowHeight = 32,\n        selectedIndex,\n        open,\n        error,\n        menuWidth,\n        menuHeight,\n        multi,\n        hideSelectedOptions\n    } = props;\n    const currentValue =\n        isArray(props.value) && multi ? props.value : [props.value];\n    const options = React.useMemo(\n        () =>\n            (props.options || []).filter((option) => {\n                if (hideSelectedOptions) {\n                    const selected = currentValue.some((val) =>\n                        equal(val, option.value, props.equalCompareProp)\n                    );\n\n                    if (selected) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }),\n        [\n            props.options,\n            props.equalCompareProp,\n            hideSelectedOptions,\n            currentValue\n        ]\n    );\n    const [rect, setRect] = useState<Rect>();\n    const [style, setStyle] = useState<Rect>();\n    const list = useRef<FixedSizeList>(null);\n    const width = menuWidth || (rect && rect.width !== 'auto' ? rect.width : 0);\n    const assumedHeight = Math.min(\n        Math.max(options.length * rowHeight, rowHeight) + 2,\n        menuHeight || 185\n    );\n    const actualHeight =\n        (style?.height !== 'auto' && style?.height) || assumedHeight;\n\n    useEffect(() => {\n        if (\n            open &&\n            list.current &&\n            selectedIndex !== undefined &&\n            selectedIndex !== -1\n        ) {\n            list.current.scrollToItem(selectedIndex, 'center');\n        }\n    }, [open]);\n\n    const itemData = React.useMemo(() => {\n        return {\n            ...props,\n            options,\n            onSelect: (value: any, option: Option) => {\n                if (isArray(props.value) && props.multi) {\n                    const found = props.value.some((item) =>\n                        equal(item, value, props.equalCompareProp)\n                    );\n                    const values = found\n                        ? props.value.filter(\n                              (item) =>\n                                  !equal(item, value, props.equalCompareProp)\n                          )\n                        : Array.from(new Set([...props.value, value]));\n\n                    props.onSelect(values, option);\n                } else {\n                    props.onSelect(value, option);\n                }\n            }\n        };\n    }, [\n        options.length,\n        props.search,\n        props.rowHeight,\n        props.selectedIndex,\n        props.labelComponent,\n        props.optionComponent,\n        props.value\n    ]);\n\n    function renderList() {\n        const MenuContent = props.menuComponent;\n        const itemCount = options.length;\n\n        if (MenuContent) {\n            return <MenuContent {...props} />;\n        }\n\n        if (itemCount === 0) {\n            return <Empty emptyText={props.emptyText} />;\n        }\n\n        return (\n            <FixedSizeList\n                className=\"react-slct-menu-list\"\n                ref={list}\n                width=\"100%\"\n                height={actualHeight}\n                itemSize={rowHeight}\n                itemCount={itemCount}\n                itemData={itemData}\n            >\n                {MenuRow}\n            </FixedSizeList>\n        );\n    }\n\n    return open ? (\n        <MenuContainer\n            error={error}\n            menuWidth={width}\n            menuHeight={assumedHeight}\n            onRect={setRect}\n            onStyle={setStyle}\n        >\n            {renderList()}\n        </MenuContainer>\n    ) : null;\n}\n","import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport { ReactSlctColors } from './config';\nimport { MenuContainerProps, Rect } from './typings';\nimport { getDocument, getWindow, getWindowInnerHeight } from './utils';\n\ninterface MenuWrapperProps {\n    rect?: Rect;\n    menuHeight?: MenuContainerProps['menuHeight'];\n    error?: boolean;\n}\n\nfunction menuPosition({\n    rect,\n    menuHeight = 186\n}: MenuWrapperProps): 'top' | 'bottom' {\n    if (!rect) {\n        return 'bottom';\n    }\n\n    const { height } = rect;\n\n    if (height === 'auto' || menuHeight === 'auto') {\n        return 'bottom';\n    }\n\n    if (\n        rect.top + height + menuHeight <= getWindowInnerHeight() ||\n        rect.top < menuHeight / 2\n    ) {\n        return 'bottom';\n    }\n\n    return 'top';\n}\n\nfunction getContainerTop(props: MenuWrapperProps): number {\n    const { rect } = props;\n    const window = getWindow();\n\n    if (!rect) {\n        return 0;\n    }\n\n    const menuHeight = (props.menuHeight !== 'auto' && props.menuHeight) || 186;\n    const height = rect.height === 'auto' ? 32 : rect.height;\n    const scrollY = window?.scrollY ?? 0;\n\n    switch (menuPosition(props)) {\n        case 'top':\n            return rect.top - menuHeight + 1 + scrollY;\n        case 'bottom':\n            return rect.top + height - 1 + scrollY;\n    }\n}\n\nconst MenuOverlay = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    pointer-events: none;\n`;\n\n// position this container fixed is not working well on mobile-devices\n// @see https://medium.com/@im_rahul/safari-and-position-fixed-978122be5f29\nconst MenuWrapper = styled.div`\n    position: absolute;\n    z-index: 9999;\n    background: #fff;\n    box-sizing: border-box;\n    box-shadow: ${(props: MenuWrapperProps) =>\n        menuPosition(props) === 'bottom'\n            ? '0 2px 5px rgba(0, 0, 0, 0.1)'\n            : '0 -2px 5px rgba(0, 0, 0, 0.1)'};\n\n    .react-slct-menu-list {\n        box-sizing: border-box;\n        border-width: 1px;\n        border-style: solid;\n        border-color: ${(props: MenuWrapperProps) =>\n            props.error ? ReactSlctColors.error : '#ccc'};\n        background-color: #fff;\n\n        &:focus {\n            outline: none;\n        }\n    }\n`;\n\nexport function MenuContainer(props: MenuContainerProps) {\n    const { error, onClick, children } = props;\n    const className = ['react-slct-menu', props.className]\n        .filter((c) => c)\n        .join(' ');\n    const document = getDocument();\n    const window = getWindow();\n    const menuOverlay = React.useRef<HTMLDivElement | null>(null);\n    const menuWrapper = React.useRef<HTMLDivElement | null>(null);\n    const [menuOverlayRect, setMenuOverlayRect] = React.useState<Rect>();\n    const [menuWrapperRect, setMenuWrapperRect] = React.useState<Rect>();\n\n    const style = React.useMemo<Rect>(() => {\n        const { menuLeft, menuTop, menuWidth, menuHeight } = props;\n        let width =\n            menuWidth && menuWidth !== 'auto'\n                ? menuWidth\n                : menuOverlayRect?.width || 'auto';\n        let height =\n            menuHeight && menuHeight !== 'auto'\n                ? menuHeight\n                : menuWrapperRect?.height || 'auto';\n        let top =\n            menuTop ??\n            getContainerTop({\n                rect: menuOverlayRect,\n                menuHeight: height\n            });\n        let left = menuLeft ?? menuOverlayRect?.left ?? 0;\n\n        if (window) {\n            const numWidth = Number(width);\n\n            if (numWidth > window.innerWidth) {\n                width = window.innerWidth - 20;\n            }\n\n            if (left + numWidth > window.innerWidth) {\n                left = Math.max(10, window.innerWidth - numWidth - 20);\n            }\n        }\n\n        if (top < 0) {\n            if (height !== 'auto') {\n                height += top;\n                top = 0;\n            }\n        }\n\n        return { top, left, width, height };\n    }, [\n        props.menuLeft,\n        props.menuTop,\n        props.menuWidth,\n        props.menuHeight,\n        menuOverlayRect,\n        menuWrapperRect\n    ]);\n\n    function calcMenuOverlay() {\n        if (menuOverlay.current) {\n            const clientRect = menuOverlay.current.getBoundingClientRect();\n\n            setMenuOverlayRect({\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            });\n        }\n    }\n\n    function calcMenuWrapper() {\n        if (menuWrapper.current) {\n            const clientRect = menuWrapper.current.getBoundingClientRect();\n\n            setMenuWrapperRect({\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            });\n        }\n    }\n\n    React.useEffect(calcMenuOverlay, [menuOverlay.current]);\n\n    React.useEffect(() => {\n        calcMenuWrapper();\n\n        if (menuWrapper.current) {\n            props.onRef?.(menuWrapper.current);\n        }\n    }, [menuWrapper.current]);\n\n    React.useEffect(() => {\n        props.onRect?.(menuOverlayRect, menuWrapperRect);\n    }, [menuOverlayRect, menuWrapperRect]);\n\n    React.useEffect(() => {\n        window?.addEventListener('scroll', onViewportChange, true);\n        window?.addEventListener('resize', onViewportChange, true);\n\n        function allowRectChange(e) {\n            if (e.target.closest && !e.target.closest('.react-slct-menu')) {\n                return false;\n            }\n\n            return true;\n        }\n\n        function onViewportChange(e: Event) {\n            if (allowRectChange(e)) {\n                calcMenuOverlay();\n                calcMenuWrapper();\n            }\n        }\n\n        return () => {\n            window?.removeEventListener('resize', onViewportChange, true);\n            window?.removeEventListener('scroll', onViewportChange, true);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (style) {\n            props.onStyle?.(style);\n        }\n    }, [style]);\n\n    return (\n        <MenuOverlay ref={menuOverlay}>\n            {document && style\n                ? createPortal(\n                      <MenuWrapper\n                          data-role=\"menu\"\n                          className={className}\n                          error={error}\n                          ref={menuWrapper}\n                          onClick={onClick}\n                          rect={menuOverlayRect}\n                          style={style}\n                      >\n                          {children}\n                      </MenuWrapper>,\n                      document.body\n                  )\n                : null}\n        </MenuOverlay>\n    );\n}\n","export const ReactSlctColors = {\n    error: '#ff5c5c'\n};\n","import { bind } from 'lodash-decorators';\nimport * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport { ReactSlctColors } from './config';\nimport { SelectLabel } from './label';\nimport { Option, SelectProps } from './typings';\nimport { getValueOptions, getWindow, keys, toKey } from './utils';\nimport { ValueComponentMulti } from './value-component-multi';\nimport { ValueComponentSingle } from './value-component-single';\n\nexport interface ValueProps {\n    options: SelectProps['options'];\n    value: SelectProps['value'];\n    placeholder: SelectProps['placeholder'];\n    clearable: SelectProps['clearable'];\n    searchable: SelectProps['searchable'];\n    labelComponent: SelectProps['labelComponent'];\n    valueComponentSingle: SelectProps['valueComponentSingle'];\n    valueComponentMulti: SelectProps['valueComponentMulti'];\n    arrowComponent: SelectProps['arrowComponent'];\n    clearComponent: SelectProps['clearComponent'];\n    valueIconComponent: SelectProps['valueIconComponent'];\n    multi: SelectProps['multi'];\n    mobile: SelectProps['native'];\n    disabled: SelectProps['disabled'];\n    error: SelectProps['error'];\n    equalCompareProp: SelectProps['equalCompareProp'];\n    search?: string;\n    keepSearchOnBlur?: boolean;\n    open: boolean;\n    focused?: boolean;\n    onClear(): void;\n    onClick(): void;\n    onSearch(search: string): void;\n    onSearchFocus(): void;\n    onSearchBlur(): void;\n    onOptionRemove(value: any): void;\n}\n\ninterface SearchProps {\n    canSearch?: boolean;\n}\n\ninterface ValueContainerProps {\n    mobile?: boolean;\n    disabled?: boolean;\n    focused?: boolean;\n    error?: boolean;\n}\n\ninterface ValueLeftProps {\n    multi?: boolean;\n    hasValue?: boolean;\n}\n\nconst Button = styled.button`\n    background: transparent;\n    border: none;\n    margin: 0;\n    font-size: 20px;\n    padding: 0;\n    line-height: 1;\n    cursor: pointer;\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst ArrowButton = styled(Button)`\n    font-size: 12px;\n    color: #ccc;\n    transform: translateY(2px);\n\n    &:hover {\n        color: #333;\n    }\n`;\n\nconst ValueContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex: 1;\n    min-height: 32px;\n    pointer-events: ${(props: ValueContainerProps) =>\n        props.mobile || props.disabled ? 'none' : 'auto'};\n    padding: 5px 10px;\n    background: #fff;\n    cursor: default;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${(props: ValueContainerProps) =>\n        props.error ? ReactSlctColors.error : '#ccc'};\n    z-index: 0;\n    box-sizing: border-box;\n    max-width: 100%;\n    box-shadow: ${(props: ValueContainerProps) =>\n        props.focused ? 'rgba(0, 0, 0, 0.15) 0 0 2px' : 'none'};\n`;\n\nconst ValueLeft = styled.div`\n    display: flex;\n    flex: 1;\n    align-items: center;\n    flex-wrap: ${(props: ValueLeftProps) =>\n        props.multi && props.hasValue ? 'wrap' : 'nowrap'};\n    user-select: none;\n    min-width: 0;\n    box-sizing: border-box;\n    margin: ${(props: ValueLeftProps) =>\n        props.multi && props.hasValue ? '-2px -5px' : 0};\n`;\n\nconst ValueRight = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 4px;\n    box-sizing: border-box;\n`;\n\nconst Placeholder = styled(SelectLabel)`\n    color: #aaa;\n`;\n\nconst ClearButton = styled(Button)`\n    margin-right: 6px;\n`;\n\nconst ClearContainer = styled.span`\n    color: #ccc;\n\n    &:hover {\n        color: #333;\n    }\n`;\n\nconst ClearX = () => <ClearContainer>×</ClearContainer>;\n\nconst Search = styled.span`\n    min-width: 1px;\n    margin-left: -1px;\n    user-select: text;\n\n    ${(props: SearchProps) =>\n        props.canSearch\n            ? css`\n                  opacity: 1;\n                  position: relative;\n                  left: 1px;\n              `\n            : css`\n                  position: absolute;\n                  opacity: 0;\n              `}\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nexport class Value extends React.PureComponent<ValueProps> {\n    search: React.RefObject<HTMLSpanElement>;\n\n    constructor(props: ValueProps) {\n        super(props);\n\n        this.search = React.createRef();\n\n        const window = getWindow();\n\n        if (window) {\n            window.addEventListener('blur', this.blur);\n        }\n    }\n\n    public componentDidUpdate(prevProps: ValueProps): void {\n        if (prevProps.search && !this.props.search && this.search.current) {\n            this.search.current.innerText = '';\n        }\n\n        if (prevProps.focused !== this.props.focused && this.props.focused) {\n            this.focus();\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            options = [],\n            value,\n            disabled,\n            clearable,\n            open,\n            mobile,\n            multi,\n            focused,\n            equalCompareProp,\n            error\n        } = this.props;\n        const ArrowComponent = this.props.arrowComponent;\n        const ClearComponent = this.props.clearComponent || ClearX;\n        const ValueIconComponent = this.props.valueIconComponent;\n        const valueOptions = getValueOptions(\n            options,\n            value,\n            multi,\n            equalCompareProp\n        );\n        const showClearer = Boolean(\n            clearable && valueOptions.length && !mobile\n        );\n        const searchAtStart = !multi || valueOptions.length === 0;\n        const searchAtEnd = multi && valueOptions.length > 0;\n\n        return (\n            <ValueContainer\n                data-role=\"value\"\n                className=\"react-slct-value\"\n                disabled={disabled}\n                mobile={mobile}\n                focused={focused}\n                error={error}\n                onClick={this.onClick}\n            >\n                <ValueLeft\n                    className=\"value-left\"\n                    multi={multi}\n                    hasValue={!!valueOptions.length}\n                >\n                    {ValueIconComponent && <ValueIconComponent />}\n                    {searchAtStart && this.renderSearch()}\n                    {this.renderValues(valueOptions)}\n                    {searchAtEnd && this.renderSearch()}\n                </ValueLeft>\n                <ValueRight className=\"value-right\">\n                    {showClearer && (\n                        <ClearButton\n                            type=\"button\"\n                            tabIndex={-1}\n                            className=\"clearer\"\n                            onClick={this.onClear}\n                        >\n                            <ClearComponent />\n                        </ClearButton>\n                    )}\n                    {ArrowComponent ? (\n                        <ArrowComponent open={open} />\n                    ) : (\n                        <ArrowButton\n                            type=\"button\"\n                            className=\"arrow\"\n                            tabIndex={-1}\n                        >\n                            {open ? '▲' : '▼'}\n                        </ArrowButton>\n                    )}\n                </ValueRight>\n            </ValueContainer>\n        );\n    }\n\n    private renderSearch(): React.ReactNode {\n        const {\n            open,\n            value,\n            disabled,\n            searchable,\n            search,\n            keepSearchOnBlur,\n            onSearchFocus,\n            onSearchBlur\n        } = this.props;\n        const canSearch =\n            (open && searchable) ||\n            (keepSearchOnBlur && !value && searchable) ||\n            Boolean(search);\n\n        if (disabled && !keepSearchOnBlur) {\n            return null;\n        }\n\n        return (\n            <Search\n                className=\"search\"\n                contentEditable\n                canSearch={canSearch}\n                onInput={this.onSearch}\n                onKeyDown={this.onKeyDown}\n                onFocus={onSearchFocus}\n                onBlur={onSearchBlur}\n                ref={this.search as any}\n            />\n        );\n    }\n\n    private renderValues(valueOptions: Option[]): React.ReactNode {\n        const {\n            placeholder,\n            search,\n            labelComponent,\n            valueComponentSingle,\n            valueComponentMulti,\n            multi,\n            open\n        } = this.props;\n\n        if (search && open && !multi) {\n            return null;\n        }\n\n        if (valueOptions.length === 0 && !search) {\n            return <Placeholder>{placeholder}</Placeholder>;\n        }\n\n        const Single = valueComponentSingle || ValueComponentSingle;\n        const Multi = (valueComponentMulti || ValueComponentMulti) as any;\n\n        return valueOptions.map((option) =>\n            multi ? (\n                <Multi\n                    key={toKey(option.value, this.props.equalCompareProp)}\n                    option={option}\n                    labelComponent={labelComponent}\n                    options={valueOptions}\n                    onRemove={this.props.onOptionRemove}\n                />\n            ) : (\n                <Single\n                    key={toKey(option.value, this.props.equalCompareProp)}\n                    option={option}\n                    labelComponent={labelComponent}\n                />\n            )\n        );\n    }\n\n    private focus(): void {\n        const el = this.search.current;\n\n        if (el) {\n            el.focus();\n\n            if (\n                typeof window.getSelection != 'undefined' &&\n                typeof document.createRange != 'undefined'\n            ) {\n                const range = document.createRange();\n                const sel = window.getSelection();\n\n                range.selectNodeContents(el);\n                range.collapse(false);\n\n                if (sel) {\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n            }\n        }\n    }\n\n    @bind\n    private blur(): void {\n        if (this.search.current) {\n            this.search.current.blur();\n        }\n    }\n\n    @bind\n    private onClick(): void {\n        if (!this.props.disabled) {\n            this.focus();\n            this.props.onClick();\n        }\n    }\n\n    @bind\n    private onClear(e: React.SyntheticEvent<HTMLButtonElement>): void {\n        e.stopPropagation();\n\n        this.props.onClear();\n    }\n\n    @bind\n    private onSearch(e: React.KeyboardEvent<HTMLSpanElement>) {\n        if (this.props.searchable) {\n            this.props.onSearch(e.currentTarget.innerText.trim());\n        } else {\n            e.preventDefault();\n        }\n    }\n\n    @bind\n    private onKeyDown(e: React.KeyboardEvent<HTMLSpanElement>) {\n        const { searchable } = this.props;\n\n        if (e.metaKey) {\n            return;\n        }\n\n        if (\n            (!searchable && e.keyCode !== keys.TAB) ||\n            e.keyCode === keys.ENTER ||\n            e.keyCode === keys.ARROW_UP ||\n            e.keyCode === keys.ARROW_DOWN\n        ) {\n            e.preventDefault();\n        }\n    }\n}\n"]}