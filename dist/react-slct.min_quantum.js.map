{"version":3,"sources":["src/menu-container.tsx"],"names":["lodash_decorators_1","$fsx","r","React","react_dom_1","styled_components_1","utils_1","menuPosition","rect","menuHeight","height","top","getWindowInnerHeight","MenuOverlay","default","div","MenuWrapper","props","error","MenuContainer","PureComponent","[object Object]","super","this","state","menuOverlayRect","menuOverlay","clientRect","getBoundingClientRect","left","Math","round","width","menuWrapperRect","menuWrapper","style","window","menuLeft","menuTop","menuWidth","getContainerTop","_a","numWidth","Number","innerWidth","max","getWindow","document","getDocument","addListener","_","prevState","onRect","removeListener","onClick","children","className","filter","c","join","createElement","ref","onMenuOverlay","createPortal","data-role","onMenuWrapper","body","addEventListener","onViewportChange","removeEventListener","e","target","closest","allowRectChange","setState","el","onRef","tslib_1","__decorate","bind","debounce","exports"],"mappings":"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","sourcesContent":["import { bind, debounce } from 'lodash-decorators';\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport { MenuContainerProps, Rect } from './typings';\nimport { getDocument, getWindow, getWindowInnerHeight } from './utils';\n\nexport interface MenuContainerState {\n    menuOverlay?: Rect;\n    menuWrapper?: Rect;\n}\n\ninterface MenuWrapperProps {\n    rect?: Rect;\n    menuHeight?: MenuContainerProps['menuHeight'];\n    error?: boolean;\n}\n\nfunction menuPosition({\n    rect,\n    menuHeight = 186\n}: MenuWrapperProps): 'top' | 'bottom' {\n    if (!rect) {\n        return 'bottom';\n    }\n\n    const { height } = rect;\n\n    if (height === 'auto' || menuHeight === 'auto') {\n        return 'bottom';\n    }\n\n    if (rect.top + height + menuHeight <= getWindowInnerHeight()) {\n        return 'bottom';\n    }\n\n    return 'top';\n}\n\nfunction getContainerTop(props: MenuWrapperProps): number {\n    const { rect } = props;\n\n    if (!rect) {\n        return 0;\n    }\n\n    const menuHeight = (props.menuHeight !== 'auto' && props.menuHeight) || 186;\n    const height = rect.height === 'auto' ? 32 : rect.height;\n\n    switch (menuPosition(props)) {\n        case 'top':\n            return rect.top - menuHeight + 1;\n        case 'bottom':\n            return rect.top + height - 1;\n    }\n}\n\nconst MenuOverlay = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    pointer-events: none;\n`;\n\nconst MenuWrapper = styled.div`\n    position: fixed;\n    z-index: 9999;\n    background: #fff;\n    box-sizing: border-box;\n    box-shadow: ${(props: MenuWrapperProps) =>\n        menuPosition(props) === 'bottom'\n            ? '0 2px 5px rgba(0, 0, 0, 0.1)'\n            : '0 -2px 5px rgba(0, 0, 0, 0.1)'};\n\n    .react-slct-menu-list {\n        box-sizing: border-box;\n        border-width: 1px;\n        border-style: solid;\n        border-color: ${(props: MenuWrapperProps) =>\n            props.error ? 'var(--react-slct-error-color)' : '#ccc'};\n        background-color: #fff;\n\n        &:focus {\n            outline: none;\n        }\n    }\n`;\n\nexport class MenuContainer extends React.PureComponent<\n    MenuContainerProps,\n    MenuContainerState\n> {\n    private menuOverlay?: HTMLDivElement | null;\n    private menuWrapper?: HTMLDivElement | null;\n\n    private get menuOverlayRect(): Rect | undefined {\n        if (this.menuOverlay) {\n            const clientRect = this.menuOverlay.getBoundingClientRect();\n\n            return {\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            };\n        }\n\n        return undefined;\n    }\n\n    private get menuWrapperRect(): Rect | undefined {\n        if (this.menuWrapper) {\n            const clientRect = this.menuWrapper.getBoundingClientRect();\n\n            return {\n                left: Math.round(clientRect.left),\n                top: Math.round(clientRect.top),\n                width: Math.round(clientRect.width),\n                height: Math.round(clientRect.height)\n            };\n        }\n\n        return undefined;\n    }\n\n    private get style(): Rect {\n        const { window } = this;\n        const { menuLeft, menuTop, menuWidth } = this.props;\n        const { menuOverlay, menuWrapper } = this.state;\n        const menuHeight =\n            this.props.menuHeight || menuWrapper?.height || 'auto';\n        let width = menuWidth || menuOverlay?.width || 'auto';\n        const height = menuHeight || menuWrapper?.height || 'auto';\n        const top =\n            menuTop ??\n            getContainerTop({\n                rect: menuOverlay,\n                menuHeight: height\n            });\n        let left = menuLeft ?? menuOverlay?.left ?? 0;\n\n        if (window) {\n            const numWidth = Number(width);\n\n            if (numWidth > window.innerWidth) {\n                width = window.innerWidth - 20;\n            }\n\n            if (left + numWidth > window.innerWidth) {\n                left = Math.max(10, window.innerWidth - numWidth - 20);\n            }\n        }\n\n        return { top, left, width, height };\n    }\n\n    private get window() {\n        return getWindow();\n    }\n\n    private get document() {\n        return getDocument();\n    }\n\n    constructor(props: MenuContainerProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    public componentDidMount(): void {\n        this.addListener();\n    }\n\n    public componentDidUpdate(_: any, prevState: MenuContainerState): void {\n        const { menuOverlay, menuWrapper } = this.state;\n\n        if (this.props.onRect) {\n            if (\n                prevState.menuOverlay !== menuOverlay ||\n                prevState.menuWrapper !== menuWrapper\n            ) {\n                this.props.onRect(menuOverlay, menuWrapper);\n            }\n        }\n    }\n\n    public componentWillUnmount(): void {\n        this.removeListener();\n    }\n\n    public render(): React.ReactNode {\n        const { error, onClick, children } = this.props;\n        const className = ['react-slct-menu', this.props.className]\n            .filter((c) => c)\n            .join(' ');\n\n        return (\n            <MenuOverlay ref={this.onMenuOverlay}>\n                {this.document\n                    ? createPortal(\n                          <MenuWrapper\n                              data-role=\"menu\"\n                              className={className}\n                              error={error}\n                              ref={this.onMenuWrapper}\n                              onClick={onClick}\n                              rect={this.state.menuOverlay}\n                              style={this.style}\n                          >\n                              {children}\n                          </MenuWrapper>,\n                          this.document.body\n                      )\n                    : null}\n            </MenuOverlay>\n        );\n    }\n\n    private addListener(): void {\n        if (this.window) {\n            this.window.addEventListener('scroll', this.onViewportChange, true);\n            this.window.addEventListener('resize', this.onViewportChange, true);\n        }\n    }\n\n    private removeListener(): void {\n        if (this.window) {\n            this.window.removeEventListener(\n                'resize',\n                this.onViewportChange,\n                true\n            );\n            this.window.removeEventListener(\n                'scroll',\n                this.onViewportChange,\n                true\n            );\n        }\n    }\n\n    private allowRectChange(e): boolean {\n        if (e.target.closest && !e.target.closest('.react-slct-menu')) {\n            return false;\n        }\n\n        return true;\n    }\n\n    @bind\n    private onViewportChange(e): void {\n        if (this.allowRectChange(e)) {\n            this.setState({\n                menuOverlay: this.menuOverlayRect,\n                menuWrapper: this.menuWrapperRect\n            });\n        }\n    }\n\n    @bind\n    private onMenuOverlay(el: HTMLDivElement | null): void {\n        this.menuOverlay = el;\n\n        if (this.menuOverlay) {\n            this.setState({\n                menuOverlay: this.menuOverlayRect\n            });\n        }\n    }\n\n    @bind\n    @debounce(16)\n    private onMenuWrapper(el: HTMLDivElement | null): void {\n        if (el && this.props.onRef) {\n            this.props.onRef(el);\n        }\n\n        this.menuWrapper = el;\n\n        if (this.menuWrapper) {\n            this.setState({\n                menuWrapper: this.menuWrapperRect\n            });\n        }\n    }\n}\n"]}